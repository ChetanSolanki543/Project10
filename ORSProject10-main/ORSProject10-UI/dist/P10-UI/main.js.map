{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/atms/atms.component.css","webpack:///./src/app/atms/atms.component.html","webpack:///./src/app/atms/atms.component.ts","webpack:///./src/app/atms/atmslist.component.css","webpack:///./src/app/atms/atmslist.component.html","webpack:///./src/app/atms/atmslist.component.ts","webpack:///./src/app/auth-service.service.ts","webpack:///./src/app/base-list.component.ts","webpack:///./src/app/base.component.ts","webpack:///./src/app/college/college-list.component.html","webpack:///./src/app/college/college-list.component.ts","webpack:///./src/app/college/college.component.css","webpack:///./src/app/college/college.component.html","webpack:///./src/app/college/college.component.ts","webpack:///./src/app/company/company.component.css","webpack:///./src/app/company/company.component.html","webpack:///./src/app/company/company.component.ts","webpack:///./src/app/company/companylist.component.css","webpack:///./src/app/company/companylist.component.html","webpack:///./src/app/company/companylist.component.ts","webpack:///./src/app/course/course-list.component.html","webpack:///./src/app/course/course-list.component.ts","webpack:///./src/app/course/course.component.css","webpack:///./src/app/course/course.component.html","webpack:///./src/app/course/course.component.ts","webpack:///./src/app/customer/customer.component.css","webpack:///./src/app/customer/customer.component.html","webpack:///./src/app/customer/customer.component.ts","webpack:///./src/app/customer/customerlist.component.css","webpack:///./src/app/customer/customerlist.component.html","webpack:///./src/app/customer/customerlist.component.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/employee/employee.component.css","webpack:///./src/app/employee/employee.component.html","webpack:///./src/app/employee/employee.component.ts","webpack:///./src/app/employee/employeelist.component.css","webpack:///./src/app/employee/employeelist.component.html","webpack:///./src/app/employee/employeelist.component.ts","webpack:///./src/app/endpoint-service.service.ts","webpack:///./src/app/faculty/faculty-list.component.html","webpack:///./src/app/faculty/faculty-list.component.ts","webpack:///./src/app/faculty/faculty.component.css","webpack:///./src/app/faculty/faculty.component.html","webpack:///./src/app/faculty/faculty.component.ts","webpack:///./src/app/file/file.component.css","webpack:///./src/app/file/file.component.html","webpack:///./src/app/file/file.component.ts","webpack:///./src/app/footer/footer.component.css","webpack:///./src/app/footer/footer.component.html","webpack:///./src/app/footer/footer.component.ts","webpack:///./src/app/http-service.service.ts","webpack:///./src/app/inventory/inventory.component.css","webpack:///./src/app/inventory/inventory.component.html","webpack:///./src/app/inventory/inventory.component.ts","webpack:///./src/app/inventory/inventorylist.component.css","webpack:///./src/app/inventory/inventorylist.component.html","webpack:///./src/app/inventory/inventorylist.component.ts","webpack:///./src/app/issue/issue.component.css","webpack:///./src/app/issue/issue.component.html","webpack:///./src/app/issue/issue.component.ts","webpack:///./src/app/issue/issuelist.component.css","webpack:///./src/app/issue/issuelist.component.html","webpack:///./src/app/issue/issuelist.component.ts","webpack:///./src/app/job/job.component.css","webpack:///./src/app/job/job.component.html","webpack:///./src/app/job/job.component.ts","webpack:///./src/app/job/joblist.component.css","webpack:///./src/app/job/joblist.component.html","webpack:///./src/app/job/joblist.component.ts","webpack:///./src/app/loader/loader.component.css","webpack:///./src/app/loader/loader.component.html","webpack:///./src/app/loader/loader.component.ts","webpack:///./src/app/loans/loans.component.css","webpack:///./src/app/loans/loans.component.html","webpack:///./src/app/loans/loans.component.ts","webpack:///./src/app/loans/loanslist.component.css","webpack:///./src/app/loans/loanslist.component.html","webpack:///./src/app/loans/loanslist.component.ts","webpack:///./src/app/login/forgotpassword.component.html","webpack:///./src/app/login/forgotpassword.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/login/signup.component.html","webpack:///./src/app/login/signup.component.ts","webpack:///./src/app/marksheet/getmarksheet.component.html","webpack:///./src/app/marksheet/getmarksheet.component.ts","webpack:///./src/app/marksheet/marksheet-list.component.html","webpack:///./src/app/marksheet/marksheet-list.component.ts","webpack:///./src/app/marksheet/marksheet.component.css","webpack:///./src/app/marksheet/marksheet.component.html","webpack:///./src/app/marksheet/marksheet.component.ts","webpack:///./src/app/marksheet/marksheetmerit-list.component.html","webpack:///./src/app/marksheet/marksheetmerit-list.component.ts","webpack:///./src/app/message/message-list.component.html","webpack:///./src/app/message/message-list.component.ts","webpack:///./src/app/message/message.component.css","webpack:///./src/app/message/message.component.html","webpack:///./src/app/message/message.component.ts","webpack:///./src/app/navbar/navbar.component.css","webpack:///./src/app/navbar/navbar.component.html","webpack:///./src/app/navbar/navbar.component.ts","webpack:///./src/app/order/order.component.css","webpack:///./src/app/order/order.component.html","webpack:///./src/app/order/order.component.ts","webpack:///./src/app/order/orderlist.component.css","webpack:///./src/app/order/orderlist.component.html","webpack:///./src/app/order/orderlist.component.ts","webpack:///./src/app/owner/owner.component.css","webpack:///./src/app/owner/owner.component.html","webpack:///./src/app/owner/owner.component.ts","webpack:///./src/app/owner/ownerlist.component.css","webpack:///./src/app/owner/ownerlist.component.html","webpack:///./src/app/owner/ownerlist.component.ts","webpack:///./src/app/patient/patient.component.css","webpack:///./src/app/patient/patient.component.html","webpack:///./src/app/patient/patient.component.ts","webpack:///./src/app/patient/patientlist.component.css","webpack:///./src/app/patient/patientlist.component.html","webpack:///./src/app/patient/patientlist.component.ts","webpack:///./src/app/product/product.component.css","webpack:///./src/app/product/product.component.html","webpack:///./src/app/product/product.component.ts","webpack:///./src/app/product/productlist.component.css","webpack:///./src/app/product/productlist.component.html","webpack:///./src/app/product/productlist.component.ts","webpack:///./src/app/productdetails/productdetails.component.css","webpack:///./src/app/productdetails/productdetails.component.html","webpack:///./src/app/productdetails/productdetails.component.ts","webpack:///./src/app/productdetails/productdetailslist.component.css","webpack:///./src/app/productdetails/productdetailslist.component.html","webpack:///./src/app/productdetails/productdetailslist.component.ts","webpack:///./src/app/project/project.component.css","webpack:///./src/app/project/project.component.html","webpack:///./src/app/project/project.component.ts","webpack:///./src/app/project/projectlist.component.css","webpack:///./src/app/project/projectlist.component.html","webpack:///./src/app/project/projectlist.component.ts","webpack:///./src/app/role/role-list.component.html","webpack:///./src/app/role/role-list.component.ts","webpack:///./src/app/role/role.component.css","webpack:///./src/app/role/role.component.html","webpack:///./src/app/role/role.component.ts","webpack:///./src/app/route/route.component.css","webpack:///./src/app/route/route.component.html","webpack:///./src/app/route/route.component.ts","webpack:///./src/app/route/routelist.component.css","webpack:///./src/app/route/routelist.component.html","webpack:///./src/app/route/routelist.component.ts","webpack:///./src/app/service-locator.service.ts","webpack:///./src/app/spinner/spinner.component.css","webpack:///./src/app/spinner/spinner.component.html","webpack:///./src/app/spinner/spinner.component.ts","webpack:///./src/app/student/student-list.component.html","webpack:///./src/app/student/student-list.component.ts","webpack:///./src/app/student/student.component.css","webpack:///./src/app/student/student.component.html","webpack:///./src/app/student/student.component.ts","webpack:///./src/app/subject/subject-list.component.html","webpack:///./src/app/subject/subject-list.component.ts","webpack:///./src/app/subject/subject.component.css","webpack:///./src/app/subject/subject.component.html","webpack:///./src/app/subject/subject.component.ts","webpack:///./src/app/supplier/supplier.component.css","webpack:///./src/app/supplier/supplier.component.html","webpack:///./src/app/supplier/supplier.component.ts","webpack:///./src/app/supplier/supplierlist.component.css","webpack:///./src/app/supplier/supplierlist.component.html","webpack:///./src/app/supplier/supplierlist.component.ts","webpack:///./src/app/timetable/timetable-list.component.html","webpack:///./src/app/timetable/timetable-list.component.ts","webpack:///./src/app/timetable/timetable.component.css","webpack:///./src/app/timetable/timetable.component.html","webpack:///./src/app/timetable/timetable.component.ts","webpack:///./src/app/transactions/transactions.component.css","webpack:///./src/app/transactions/transactions.component.html","webpack:///./src/app/transactions/transactions.component.ts","webpack:///./src/app/transactions/transactionslist.component.css","webpack:///./src/app/transactions/transactionslist.component.html","webpack:///./src/app/transactions/transactionslist.component.ts","webpack:///./src/app/transportation/transportation.component.css","webpack:///./src/app/transportation/transportation.component.html","webpack:///./src/app/transportation/transportation.component.ts","webpack:///./src/app/transportation/transportationlist.component.css","webpack:///./src/app/transportation/transportationlist.component.html","webpack:///./src/app/transportation/transportationlist.component.ts","webpack:///./src/app/user/changepassword.component.html","webpack:///./src/app/user/changepassword.component.ts","webpack:///./src/app/user/myprofile.component.html","webpack:///./src/app/user/myprofile.component.ts","webpack:///./src/app/user/user-list.component.html","webpack:///./src/app/user/user-list.component.ts","webpack:///./src/app/user/user.component.css","webpack:///./src/app/user/user.component.html","webpack:///./src/app/user/user.component.ts","webpack:///./src/app/utility/data-validator.ts","webpack:///./src/app/vehicletracking/vehicletracking.component.css","webpack:///./src/app/vehicletracking/vehicletracking.component.html","webpack:///./src/app/vehicletracking/vehicletracking.component.ts","webpack:///./src/app/vehicletracking/vehicletrackinglist.component.css","webpack:///./src/app/vehicletracking/vehicletrackinglist.component.html","webpack:///./src/app/vehicletracking/vehicletrackinglist.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { MarksheetComponent } from './marksheet/marksheet.component';\nimport { StudentComponent } from './student/student.component';\nimport { CollegeComponent } from './college/college.component';\nimport { LoginComponent } from './login/login.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { ForgotPasswordComponent } from './login/forgotpassword.component';\nimport { SignUpComponent } from './login/signup.component';\nimport { MessageComponent } from './message/message.component';\nimport { MessageListComponent } from './message/message-list.component';\nimport { MarksheetListComponent } from './marksheet/marksheet-list.component';\nimport { CollegeListComponent } from './college/college-list.component';\nimport { StudentListComponent } from './student/student-list.component';\nimport { UserListComponent } from './user/user-list.component';\nimport { UserComponent } from './user/user.component';\nimport { RoleComponent } from './role/role.component';\nimport { CourseComponent } from \"./course/course.component\";\nimport { SubjectComponent } from \"./subject/subject.component\"\nimport { Subject, from } from 'rxjs';\nimport { RoleListComponent } from './role/role-list.component';\nimport { CourseListComponent } from \"./course/course-list.component\";\nimport { FacultyComponent } from \"./faculty/faculty.component\";\nimport { FacultyListComponent } from \"./faculty/faculty-list.component\";\nimport { TimetableComponent } from \"./timetable/timetable.component\";\nimport { FileComponent } from './file/file.component';\nimport { TimetableListComponent } from './timetable/timetable-list.component';\nimport { SubjectListComponent } from './subject/subject-list.component';\nimport { MarksheetmeritListComponent } from \"./marksheet/marksheetmerit-list.component\";\nimport { GetmarksheetComponent } from \"./marksheet/getmarksheet.component\";\nimport { ChangepasswordComponent } from \"./user/changepassword.component\";\nimport { LoaderComponent } from './loader/loader.component';\nimport { SpinnerComponent } from './spinner/spinner.component';\nimport { MyprofileComponent } from './user/myprofile.component';\nimport { OrderComponent } from './order/order.component';\nimport { OrderlistComponent } from './order/orderlist.component';\n\nimport { ProductComponent } from './product/product.component';\nimport { ProductlistComponent } from './product/productlist.component';\nimport { ProductdetailsComponent } from './productdetails/productdetails.component';\nimport { ProductdetailslistComponent } from './productdetails/productdetailslist.component';\nimport { PatientComponent } from './patient/patient.component';\nimport { PatientlistComponent } from './patient/patientlist.component';\nimport { CompanyComponent } from './company/company.component';\nimport { CompanylistComponent } from './company/companylist.component';\nimport { InventoryComponent } from './inventory/inventory.component';\nimport { InventorylistComponent } from './inventory/inventorylist.component';\nimport { SupplierComponent } from './supplier/supplier.component';\nimport { SupplierlistComponent } from './supplier/supplierlist.component';\nimport { VehicletrackingComponent } from './vehicletracking/vehicletracking.component';\nimport { VehicletrackinglistComponent } from './vehicletracking/vehicletrackinglist.component';\nimport { TransportationComponent } from './transportation/transportation.component';\nimport { TransportationlistComponent } from './transportation/transportationlist.component';\nimport { RouteComponent } from './route/route.component';\nimport { RoutelistComponent } from './route/routelist.component';\nimport { IssueComponent } from './issue/issue.component';\nimport { IssuelistComponent } from './issue/issuelist.component';\nimport { EmployeeComponent } from './employee/employee.component';\nimport { EmployeelistComponent } from './employee/employeelist.component';\nimport { JobComponent } from './job/job.component';\nimport { JoblistComponent } from './job/joblist.component';\nimport { CustomerComponent } from './customer/customer.component';\nimport { CustomerlistComponent } from './customer/customerlist.component';\nimport { TransactionsComponent } from './transactions/transactions.component';\nimport { TransactionslistComponent } from './transactions/transactionslist.component';\nimport { LoansComponent } from './loans/loans.component';\nimport { LoanslistComponent } from './loans/loanslist.component';\nimport { AtmsComponent } from './atms/atms.component';\nimport { AtmslistComponent } from './atms/atmslist.component';\nimport { ProjectComponent } from './project/project.component';\nimport { ProjectlistComponent } from './project/projectlist.component';\nimport { OwnerComponent } from \"./owner/owner.component\";\nimport { OwnerlistComponent } from \"./owner/ownerlist.component\";\n\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    redirectTo: \"dashboard\",\n    pathMatch: \"full\",\n  },\n  {\n    path: \"dashboard\",\n    component: DashboardComponent,\n  },\n  {\n    path: \"loader\",\n    component: LoaderComponent,\n  },\n  {\n    path: \"login\",\n    component: LoginComponent,\n  },\n  {\n    path: \"login/:userparams\",\n    component: LoginComponent,\n  },\n\n  {\n    path: \"spinner\",\n    component: SpinnerComponent,\n  },\n  {\n    path: \"forgotpassword\",\n    component: ForgotPasswordComponent,\n  },\n  {\n    path: \"signup\",\n    component: SignUpComponent,\n  },\n  {\n    path: \"message\",\n    component: MessageComponent,\n  },\n  {\n    path: \"message/:id\",\n    component: MessageComponent,\n  },\n  {\n    path: \"messagelist\",\n    component: MessageListComponent,\n  },\n  {\n    path: \"marksheet\",\n    component: MarksheetComponent,\n  },\n  {\n    path: \"marksheet/:id\",\n    component: MarksheetComponent,\n  },\n  {\n    path: \"marksheetlist\",\n    component: MarksheetListComponent,\n  },\n  {\n    path: \"marksheetmeritlist\",\n    component: MarksheetmeritListComponent,\n  },\n  {\n    path: \"getmarksheet\",\n    component: GetmarksheetComponent,\n  },\n  {\n    path: \"college\",\n    component: CollegeComponent,\n  },\n  {\n    path: \"college/:id\",\n    component: CollegeComponent,\n  },\n  {\n    path: \"collegelist\",\n    component: CollegeListComponent,\n  },\n  {\n    path: \"student\",\n    component: StudentComponent,\n  },\n  {\n    path: \"student/:id\",\n    component: StudentComponent,\n  },\n  {\n    path: \"studentlist\",\n    component: StudentListComponent,\n  },\n  {\n    path: \"user\",\n    component: UserComponent,\n  },\n  {\n    path: \"user/:id\",\n    component: UserComponent,\n  },\n  {\n    path: \"userlist\",\n    component: UserListComponent,\n  },\n  {\n    path: \"role\",\n    component: RoleComponent,\n  },\n  {\n    path: \"rolelist\",\n    component: RoleListComponent,\n  },\n  {\n    path: \"role/:id\",\n    component: RoleComponent,\n  },\n  {\n    path: \"course\",\n    component: CourseComponent,\n  },\n  {\n    path: \"courselist\",\n    component: CourseListComponent,\n  },\n  {\n    path: \"course/:id\",\n    component: CourseComponent,\n  },\n  {\n    path: \"faculty\",\n    component: FacultyComponent,\n  },\n  {\n    path: \"facultylist\",\n    component: FacultyListComponent,\n  },\n  {\n    path: \"faculty/:id\",\n    component: FacultyComponent,\n  },\n  {\n    path: \"timetable\",\n    component: TimetableComponent,\n  },\n  {\n    path: \"timetablelist\",\n    component: TimetableListComponent,\n  },\n  {\n    path: \"timetable/:id\",\n    component: TimetableComponent,\n  },\n  {\n    path: \"subject\",\n    component: SubjectComponent,\n  },\n  {\n    path: \"subjectlist\",\n    component: SubjectListComponent,\n  },\n  {\n    path: \"subject/:id\",\n    component: SubjectComponent,\n  },\n  {\n    path: \"myprofile\",\n    component: MyprofileComponent,\n  },\n  {\n    path: \"file\",\n    component: FileComponent,\n  },\n  {\n    path: \"changepassword\",\n    component: ChangepasswordComponent,\n  },\n\n  {\n    path: \"productdetails\",\n    component: ProductdetailsComponent,\n  },\n  {\n    path: \"productdetails/:id\",\n    component: ProductdetailsComponent,\n  },\n  {\n    path: \"productdetailslist\",\n    component: ProductdetailslistComponent,\n  },\n\n  {\n    path: \"patient\",\n    component: PatientComponent,\n  },\n  {\n    path: \"patient/:id\",\n    component: PatientComponent,\n  },\n  {\n    path: \"patientlist\",\n    component: PatientlistComponent,\n  },\n\n  {\n    path: \"inventory\",\n    component: InventoryComponent,\n  },\n  {\n    path: \"inventory/:id\",\n    component: InventoryComponent,\n  },\n  {\n    path: \"inventorylist\",\n    component: InventorylistComponent,\n  },\n\n  {\n    path: \"supplier\",\n    component: SupplierComponent,\n  },\n  {\n    path: \"supplier/:id\",\n    component: SupplierComponent,\n  },\n  {\n    path: \"supplierlist\",\n    component: SupplierlistComponent,\n  },\n\n  {\n    path: \"vehicletracking\",\n    component: VehicletrackingComponent,\n  },\n  {\n    path: \"vehicletracking/:id\",\n    component: VehicletrackingComponent,\n  },\n  {\n    path: \"vehicletrackinglist\",\n    component: VehicletrackinglistComponent,\n  },\n\n  {\n    path: \"company\",\n    component: CompanyComponent,\n  },\n  {\n    path: \"company/:id\",\n    component: CompanyComponent,\n  },\n  {\n    path: \"companylist\",\n    component: CompanylistComponent,\n  },\n\n  {\n    path: \"transportation\",\n    component: TransportationComponent,\n  },\n  {\n    path: \"transportation/:id\",\n    component: TransportationComponent,\n  },\n  {\n    path: \"transportationlist\",\n    component: TransportationlistComponent,\n  },\n\n  {\n    path: \"employee\",\n    component: EmployeeComponent,\n  },\n  {\n    path: \"employee/:id\",\n    component: EmployeeComponent,\n  },\n  {\n    path: \"employeelist\",\n    component: EmployeelistComponent,\n  },\n\n  {\n    path: \"job\",\n    component: JobComponent,\n  },\n  {\n    path: \"job/:id\",\n    component: JobComponent,\n  },\n  {\n    path: \"joblist\",\n    component: JoblistComponent,\n  },\n\n  {\n    path: \"customer\",\n    component: CustomerComponent,\n  },\n  {\n    path: \"customer/:id\",\n    component: CustomerComponent,\n  },\n  {\n    path: \"customerlist\",\n    component: CustomerlistComponent,\n  },\n\n  {\n    path: \"transactions\",\n    component: TransactionsComponent,\n  },\n  {\n    path: \"transactions/:id\",\n    component: TransactionsComponent,\n  },\n  {\n    path: \"transactionslist\",\n    component: TransactionslistComponent,\n  },\n\n  {\n    path: \"issue\",\n    component: IssueComponent,\n  },\n  {\n    path: \"issue/:id\",\n    component: IssueComponent,\n  },\n  {\n    path: \"issuelist\",\n    component: IssuelistComponent,\n  },\n\n  {\n    path: \"route\",\n    component: RouteComponent,\n  },\n  {\n    path: \"route/:id\",\n    component: RouteComponent,\n  },\n  {\n    path: \"routelist\",\n    component: RoutelistComponent,\n  },\n\n  {\n    path: \"atms\",\n    component: AtmsComponent,\n  },\n  {\n    path: \"atms/:id\",\n    component: AtmsComponent,\n  },\n  {\n    path: \"atmslist\",\n    component: AtmslistComponent,\n  },\n\n  {\n    path: \"project\",\n    component: ProjectComponent,\n  },\n  {\n    path: \"project/:id\",\n    component: ProjectComponent,\n  },\n  {\n    path: \"projectlist\",\n    component: ProjectlistComponent,\n  },\n\n  {\n    path: \"loans\",\n    component: LoansComponent,\n  },\n  {\n    path: \"loans/:id\",\n    component: LoansComponent,\n  },\n  {\n    path: \"loanslist\",\n    component: LoanslistComponent,\n  },\n\n  {\n    path: \"product\",\n    component: ProductComponent,\n  },\n  {\n    path: \"productlist\",\n    component: ProductlistComponent,\n  },\n  {\n    path: \"product/:id\",\n    component: ProductComponent,\n  },\n\n  {\n    path: \"owner\",\n    component: OwnerComponent,\n  },\n  {\n    path: \"owner/:id\",\n    component: OwnerComponent,\n  },\n  {\n    path: \"ownerlist\",\n    component: OwnerlistComponent,\n  },\n  {\n    path: \"order\",\n    component: OrderComponent,\n  },\n  {\n    path: \"order/:id\",\n    component: OrderComponent,\n  },\n  {\n    path: \"orderlist\",\n    component: OrderlistComponent,\n  },\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes, { useHash: true })],\n    exports: [RouterModule]\n})\n\n\nexport class AppRoutingModule { }","module.exports = \".dropbtn {\\n    background-color: #4CAF50;\\n    color: white;\\n    padding: 16px;\\n    font-size: 16px;\\n    border: none;\\n  }\\n  \\n  .dropdown {\\n    position: relative;\\n    display: inline-block;\\n  }\\n  \\n  .dropdown-content {\\n    display: none;\\n    position: absolute;\\n    background-color: #f1f1f1;\\n    min-width: 160px;\\n    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\\n    z-index: 1;\\n  }\\n  \\n  .dropdown-content a {\\n    color: black;\\n    padding: 12px 16px;\\n    text-decoration: none;\\n    display: block;\\n  }\\n  \\n  .app {\\n    margin: 48px;\\n  }\\n  \\n  .buttons {\\n    display: flex;\\n    max-width: 500px;\\n    justify-content: space-evenly;\\n    margin-bottom: 48px;\\n\\n  }\\n\\n  \\n  \\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSx5QkFBeUI7SUFDekIsWUFBWTtJQUNaLGFBQWE7SUFDYixlQUFlO0lBQ2YsWUFBWTtFQUNkOztFQUVBO0lBQ0Usa0JBQWtCO0lBQ2xCLHFCQUFxQjtFQUN2Qjs7RUFFQTtJQUNFLGFBQWE7SUFDYixrQkFBa0I7SUFDbEIseUJBQXlCO0lBQ3pCLGdCQUFnQjtJQUNoQiw0Q0FBNEM7SUFDNUMsVUFBVTtFQUNaOztFQUVBO0lBQ0UsWUFBWTtJQUNaLGtCQUFrQjtJQUNsQixxQkFBcUI7SUFDckIsY0FBYztFQUNoQjs7RUFDQTtJQUNFLFlBQVk7RUFDZDs7RUFFQTtJQUNFLGFBQWE7SUFDYixnQkFBZ0I7SUFDaEIsNkJBQTZCO0lBQzdCLG1CQUFtQjs7RUFFckIiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5kcm9wYnRuIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNENBRjUwO1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgICBwYWRkaW5nOiAxNnB4O1xuICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICBib3JkZXI6IG5vbmU7XG4gIH1cbiAgXG4gIC5kcm9wZG93biB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgfVxuICBcbiAgLmRyb3Bkb3duLWNvbnRlbnQge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmMWYxZjE7XG4gICAgbWluLXdpZHRoOiAxNjBweDtcbiAgICBib3gtc2hhZG93OiAwcHggOHB4IDE2cHggMHB4IHJnYmEoMCwwLDAsMC4yKTtcbiAgICB6LWluZGV4OiAxO1xuICB9XG4gIFxuICAuZHJvcGRvd24tY29udGVudCBhIHtcbiAgICBjb2xvcjogYmxhY2s7XG4gICAgcGFkZGluZzogMTJweCAxNnB4O1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgfVxuICAuYXBwIHtcbiAgICBtYXJnaW46IDQ4cHg7XG4gIH1cbiAgXG4gIC5idXR0b25zIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIG1heC13aWR0aDogNTAwcHg7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1ldmVubHk7XG4gICAgbWFyZ2luLWJvdHRvbTogNDhweDtcblxuICB9XG5cbiAgXG4gICJdfQ== */\"","module.exports = \"\\n  <router-outlet></router-outlet>\\n\"","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription, Observable,timer } from 'rxjs';\nimport { TranslateService } from '@ngx-translate/core';\n\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent{\n \n  \n  \n}\n\n\n\n\n \n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\n\nimport { AppComponent } from './app.component';\nimport { MarksheetComponent } from './marksheet/marksheet.component';\nimport { StudentComponent } from './student/student.component';\nimport { CollegeComponent } from './college/college.component';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { HttpClientModule, HttpClient, HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { HttpServiceService } from './http-service.service';\nimport { LoginComponent } from './login/login.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { DataValidator } from './utility/data-validator';\nimport { ForgotPasswordComponent } from './login/forgotpassword.component';\nimport { SignUpComponent } from './login/signup.component';\nimport { MessageComponent } from './message/message.component';\nimport { CookieService } from 'ngx-cookie-service';\nimport { MessageListComponent } from './message/message-list.component';\nimport { MarksheetListComponent } from './marksheet/marksheet-list.component';\nimport { CollegeListComponent } from './college/college-list.component';\nimport { StudentListComponent } from './student/student-list.component';\nimport { UserComponent } from './user/user.component';\nimport { UserListComponent } from './user/user-list.component';\nimport { RoleComponent } from './role/role.component';\nimport { CourseComponent } from './course/course.component';\nimport { SubjectComponent } from './subject/subject.component';\nimport { RoleListComponent } from './role/role-list.component';\nimport { TimetableComponent } from './timetable/timetable.component';\nimport { CourseListComponent } from \"./course/course-list.component\";\nimport { FacultyComponent } from './faculty/faculty.component';\nimport { FacultyListComponent } from \"./faculty/faculty-list.component\";\nimport { FileComponent } from './file/file.component';\nimport { TimetableListComponent } from \"./timetable/timetable-list.component\";\nimport { SubjectListComponent } from \"./subject/subject-list.component\";\nimport { MarksheetmeritListComponent } from \"./marksheet/marksheetmerit-list.component\";\nimport { GetmarksheetComponent } from \"./marksheet/getmarksheet.component\";\nimport { ChangepasswordComponent } from \"./user/changepassword.component\";\nimport { LoaderComponent } from \"./loader/loader.component\";\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { SpinnerComponent } from './spinner/spinner.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { MyprofileComponent } from './user/myprofile.component';\nimport { AuthService } from './auth-service.service';\nimport { ProductComponent } from './product/product.component';\nimport { ProductlistComponent } from './product/productlist.component';\nimport { ProductdetailsComponent } from './productdetails/productdetails.component';\nimport { ProductdetailslistComponent } from './productdetails/productdetailslist.component';\nimport { PatientComponent } from './patient/patient.component';\nimport { PatientlistComponent } from './patient/patientlist.component';\nimport { CompanyComponent } from './company/company.component';\nimport { CompanylistComponent } from './company/companylist.component';\nimport { InventoryComponent } from './inventory/inventory.component';\nimport { InventorylistComponent } from './inventory/inventorylist.component';\nimport { SupplierComponent } from './supplier/supplier.component';\nimport { SupplierlistComponent } from './supplier/supplierlist.component';\nimport { VehicletrackingComponent } from './vehicletracking/vehicletracking.component';\nimport { VehicletrackinglistComponent } from './vehicletracking/vehicletrackinglist.component';\nimport { TransportationComponent } from './transportation/transportation.component';\nimport { TransportationlistComponent } from './transportation/transportationlist.component';\nimport { RouteComponent } from './route/route.component';\nimport { RoutelistComponent } from './route/routelist.component';\nimport { IssueComponent } from './issue/issue.component';\nimport { IssuelistComponent } from './issue/issuelist.component';\nimport { EmployeeComponent } from './employee/employee.component';\nimport { EmployeelistComponent } from './employee/employeelist.component';\nimport { JobComponent } from './job/job.component';\nimport { JoblistComponent } from './job/joblist.component';\nimport { CustomerComponent } from './customer/customer.component';\nimport { CustomerlistComponent } from './customer/customerlist.component';\nimport { TransactionsComponent } from './transactions/transactions.component';\nimport { TransactionslistComponent } from './transactions/transactionslist.component';\nimport { LoansComponent } from './loans/loans.component';\nimport { LoanslistComponent } from './loans/loanslist.component';\nimport { AtmsComponent } from './atms/atms.component';\nimport { AtmslistComponent } from './atms/atmslist.component';\nimport { ProjectComponent } from './project/project.component';\nimport { ProjectlistComponent } from './project/projectlist.component';\nimport { OwnerComponent } from './owner/owner.component';\nimport { OwnerlistComponent } from './owner/ownerlist.component';\nimport { OrderComponent } from \"./order/order.component\";\nimport { OrderlistComponent } from \"./order/orderlist.component\";\n\n\n\n\n\n\n// import { AuthService } from './auth.service';\n\n\nexport function myHttpLoader(http: HttpClient) {\n  return new TranslateHttpLoader(http, './assets/i18n/', '.json');\n}\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MarksheetComponent,\n    MarksheetListComponent,\n    StudentComponent,\n    StudentListComponent,\n    CollegeComponent,\n    CollegeListComponent,\n    LoginComponent,\n    DashboardComponent,\n    ForgotPasswordComponent,\n    SignUpComponent,\n    MessageComponent,\n    MessageListComponent,\n    UserComponent,\n    UserListComponent,\n\n    RoleComponent,\n    RoleListComponent,\n    CourseComponent,\n    SubjectComponent,\n    SubjectListComponent,\n    TimetableComponent,\n    CourseListComponent,\n    FacultyComponent,\n    FacultyListComponent,\n    TimetableComponent,\n    TimetableListComponent,\n    MarksheetmeritListComponent,\n    GetmarksheetComponent,\n    ChangepasswordComponent,\n    LoaderComponent,\n    FileComponent,\n    NavbarComponent,\n    SpinnerComponent,\n    FooterComponent,\n    MyprofileComponent,\n    ProductComponent,\n    ProductlistComponent,\n    ProductdetailsComponent,\n    ProductdetailslistComponent,\n    PatientComponent,\n    PatientlistComponent,\n    CompanyComponent,\n    CompanylistComponent,\n    InventoryComponent,\n    InventorylistComponent,\n    SupplierComponent,\n    SupplierlistComponent,\n    VehicletrackingComponent,\n    VehicletrackinglistComponent,\n    TransportationComponent,\n    TransportationlistComponent,\n    RouteComponent,\n    RoutelistComponent,\n    IssueComponent,\n    IssuelistComponent,\n    EmployeeComponent,\n    EmployeelistComponent,\n    JobComponent,\n    JoblistComponent,\n    CustomerComponent,\n    CustomerlistComponent,\n    TransactionsComponent,\n    TransactionslistComponent,\n    LoansComponent,\n    LoanslistComponent,\n    AtmsComponent,\n    AtmslistComponent,\n    ProjectComponent,\n    ProjectlistComponent,\n    OwnerComponent,\n    OwnerlistComponent,\n    OrderComponent,\n    OrderlistComponent,\n  ],\n  imports: [\n    BrowserModule,\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: myHttpLoader,\n        deps: [HttpClient],\n      },\n    }),\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthService,\n      multi: true,\n    },\n    HttpServiceService,\n    DataValidator,\n    CookieService,\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F0bXMvYXRtcy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-navbar></app-navbar>\\n<style>\\n  .grad {\\n    background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\n    background-repeat: no-repeat;\\n    background-size: 100%;\\n    padding-bottom: 25px;\\n  }\\n\\n  .input-group-addon {\\n    box-shadow: 9px 8px 7px #001a33;\\n  }\\n\\n  .required-field {\\n    color: red;\\n    font-weight: bold;\\n  }\\n\\n  .alertRedColor {\\n    color: red;\\n  }\\n\\n  .card-body {\\n    padding: 2rem;\\n  }\\n\\n  .input-group-text i {\\n    width: 1.5rem;\\n  }\\n\\n  .btn-primary,\\n  .btn-success,\\n  .btn-warning {\\n    width: 100%;\\n  }\\n\\n  .form-control {\\n    height: calc(2.25rem + 2px);\\n  }\\n\\n  .form-group {\\n    margin-bottom: 1.5rem;\\n  }\\n\\n  .input-group-prepend .input-group-text {\\n    background-color: #e9ecef;\\n    border: 1px solid #ced4da;\\n  }\\n\\n  .input-group-prepend .input-group-text i {\\n    color: #495057;\\n  }\\n\\n  .row {\\n    margin-left: 0;\\n    margin-right: 0;\\n  }\\n\\n  .textarea-height {\\n    height: 100px;\\n  }\\n\\n  .card {\\n    margin: auto;\\n    max-width: 500px;\\n  }\\n</style>\\n\\n<div class=\\\"container-fluid\\\"\\n  style=\\\"padding: 2% 0; background: url('assets/files/wall.jpg') no-repeat center center; background-attachment: fixed; background-size: cover; width: 100%; height: auto;\\\">\\n  <div class=\\\"row justify-content-center\\\">\\n    <div class=\\\"col-md-6\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-body input-group-addon grad\\\">\\n          <form name=\\\"userForm\\\">\\n            <h2 *ngIf=\\\"!form.data.id\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{ 'Add ATMs' |\\n              translate }}\\n            </h2>\\n            <h2 *ngIf=\\\"form.data.id\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{ 'Update ATMs' |\\n              translate }}\\n            </h2>\\n\\n            <div *ngIf=\\\"!form.error && form.message\\\" class=\\\"alert alert-success alert-dismissible\\\">\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n              {{ form.message }}\\n            </div>\\n\\n            <div *ngIf=\\\"form.error && form.message\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n              {{ form.message }}\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label><b>{{ 'Location' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-flag grey-text\\\"></i></div>\\n                </div>\\n                <select class=\\\"form-control\\\" name=\\\"locationId\\\" [(ngModel)]=\\\"form.data.locationId\\\"\\n                  aria-label=\\\"ngSelected\\\">\\n                  <option [ngValue]=\\\"undefined\\\">{{ 'Select location' | translate }}</option>\\n                  <option *ngFor=\\\"let obj of form.preload.locationList\\\" [value]=\\\"obj.key\\\">{{ obj.value }}</option>\\n                </select>\\n              </div>\\n              <span *ngIf=\\\"form.inputerror.locationId\\\" class=\\\"alertRedColor\\\">{{form.inputerror.locationId}}</span>\\n            </div>\\n\\n\\n            <div class=\\\"form-group\\\">\\n              <label><b>{{ 'Cash Available' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-money-bill-wave grey-text\\\"></i></div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"cashAvailable\\\" [(ngModel)]=\\\"form.data.cashAvailable\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{ 'Enter cashAvailable' | translate }}\\\" (input)=\\\"validateCashAvailableInput($event)\\\">\\n              </div>\\n              <span *ngIf=\\\"form.inputerror.cashAvailable\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.cashAvailable }}</span>\\n            </div>\\n            \\n            \\n            <div class=\\\"form-group\\\">\\n              <label><b>{{ 'Last Restocked Date' | translate }}</b><span class=\\\"required-field\\\"></span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-calendar-alt grey-text\\\"></i></div>\\n                </div>\\n                <input type=\\\"date\\\" name=\\\"lastRestockedDate\\\" [value]=\\\"form.data.lastRestockedDate | date:'yyyy-MM-dd'\\\"\\n                  (input)=\\\"form.data.lastRestockedDate=parseDate($event.target.value)\\\" class=\\\"form-control\\\" required />\\n              </div>\\n              <span *ngIf=\\\"form.inputerror.lastRestockedDate\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.lastRestockedDate\\n                }}</span>\\n            </div>\\n\\n\\n            <div class=\\\"row pt-2 pb-3 justify-content-center\\\">\\n              <div class=\\\"col-md-4\\\">\\n                <button *ngIf=\\\"!form.data.id\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{ 'Save' | translate\\n                  }}</button>\\n              </div>\\n              <div class=\\\"col-md-4\\\">\\n                <button *ngIf=\\\"form.data.id\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{ 'Update' | translate\\n                  }}</button>\\n              </div>\\n              <div class=\\\"col-md-4\\\">\\n                <a class=\\\"btn btn-warning\\\" type=\\\"button\\\" [routerLink]=\\\"['/atmslist']\\\">{{ 'List' | translate\\n                  }}</a>\\n              </div>\\n            </div>\\n\\n          </form>\\n        </div>\\n      </div>\\n      <app-footer></app-footer>\"","import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, AbstractControl, ValidatorFn } from '@angular/forms';\nimport { BaseCtl } from '../base.component';\nimport { ServiceLocatorService } from '../service-locator.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-atms',\n  templateUrl: './atms.component.html',\n  styleUrls: ['./atms.component.css']\n})\nexport class AtmsComponent extends BaseCtl {\n\n  getKey = false;\n  selected = null;\n  userForm: FormGroup = null;\n  uploadForm: FormGroup;\n  input\n\n  constructor(public locator: ServiceLocatorService, private formBuilder: FormBuilder, public route: ActivatedRoute, private httpClient: HttpClient) {\n    super(locator.endpoints.ATMS, locator, route);\n  }\n\n  submit() {\n    var _self = this;\n    console.log('in submit');\n    console.log(this.form);\n    console.log(this.form.data);\n\n    this.serviceLocator.httpService.post(this.api.save, this.form.data, function (res) {\n      _self.form.message = '';\n      _self.form.inputerror = {}; // Clear input errors here\n\n      if (res.success) {\n        _self.form.error = false; // Set error to false on success\n        _self.form.message = \"Data is saved\";\n        _self.form.data.id = res.result.data;\n        console.log(_self.form.data.id);\n        console.log(\"----------Chetan----------.\");\n\n        // Clear form data if needed\n        // _self.form.data = {};\n\n      } else {\n        _self.form.error = true;\n        if (res.result.inputerror) {\n          _self.form.inputerror = res.result.inputerror;\n        }\n        _self.form.message = res.result.message;\n      }\n      console.log('FORM', _self.form);\n    });\n  }\n\n  submit1() {\n    var _self = this;\n    console.log(this.form + \"submit running start\");\n    console.log(this.form.data + \"form data going to be submit\");\n    this.serviceLocator.httpService.post(this.api.search, this.form.data, function (res) {\n      _self.form.message = '';\n      _self.form.inputerror = {};\n      _self.form.data.id = res.result.data;\n\n      if (res.success) {\n        _self.form.message = \"Data is saved\";\n        _self.form.data.id = res.result.data;\n\n        console.log(_self.form.data.id);\n        console.log(\"--------------------.\");\n\n      } else {\n        _self.form.error = true;\n        _self.form.inputerror = res.result.inputerror;\n        _self.form.message = res.result.message;\n      }\n      _self.form.data.id = res.result.data;\n      console.log('FORM', _self.form);\n    });\n  }\n\n  onUpload(userform: FormData) {\n    this.submit();\n    console.log(this.form.data.id + '---- after submit');\n  }\n\n  validateForm(form) {\n    let flag = true;\n    let validator = this.serviceLocator.dataValidator;\n    flag = flag && validator.isNotNullObject(form.locationId);\n    console.log(form.locationId);\n    flag = flag && validator.isNotNullObject(form.cashAvailable);\n    console.log(form.cashAvailable);\n    flag = flag && validator.isNotNullObject(form.lastRestockedDate);\n    console.log(form.lastRestockedDate);\n\n    return flag;\n  }\n\n  populateForm(form, data) {\n    form.id = data.id;\n    console.log(form.id + 'populate form in shoppingcomponent');\n    form.cashAvailable = data.cashAvailable;\n    form.lastRestockedDate = data.lastRestockedDate;\n    form.locationId = data.locationId;\n  }\n\n  validateCashAvailable(event: KeyboardEvent) {\n    const input = event.key;\n    // Allow numbers, decimal point, and backspace\n    if (!(event.ctrlKey || event.altKey || event.metaKey) && (\n      (input >= '0' && input <= '9') || input === '.' || input === 'Backspace' || input === 'Delete'\n    )) {\n      // Allow input to proceed\n    } else {\n      // Prevent default action (usually a character is typed)\n      event.preventDefault();\n    }\n  }\n\n  // Method to handle input validation for Cash Available field\n  validateCashAvailableInput(event: Event) {\n    const inputElement = event.target as HTMLInputElement;\n    let value = inputElement.value;\n\n    // Remove non-numeric characters except decimal point\n    value = value.replace(/[^0-9.]/g, '');\n\n    // Remove extra decimal points\n    const parts = value.split('.');\n    if (parts.length > 2) {\n      value = parts[0] + '.' + parts.slice(1).join('');\n    }\n\n    // Limit the value to 1,000,000,000\n    const parsedValue = parseFloat(value);\n    if (!isNaN(parsedValue) && parsedValue > 1000000000) {\n      value = '1000000000';\n    }\n\n    // Update the input value\n    inputElement.value = value;\n\n    // Update the ngModel data\n    this.form.data.cashAvailable = value;\n  }\n\n\n  parseDate(dateString: string): Date {\n    if (dateString) {\n      return new Date(dateString);\n    }\n    return null;\n  }\n\n\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F0bXMvYXRtc2xpc3QuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<app-navbar></app-navbar>\\n\\n<style>\\n  #nnn {\\n    background: none;\\n    border: none;\\n    cursor: pointer;\\n  }\\n\\n  .panel-heading {\\n    height: 50px;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n  }\\n\\n  .content-wrapper {\\n    background: url(assets/files/wall.jpg) no-repeat center center;\\n    background-attachment: fixed;\\n    background-size: cover;\\n    width: 100%;\\n    min-height: 100vh;\\n    padding: 20px;\\n  }\\n\\n  .table-responsive {\\n    margin-top: 20px;\\n  }\\n\\n  .full-height {\\n    height: 100vh;\\n  }\\n</style>\\n\\n<div class=\\\"content-wrapper full-height\\\">\\n  <div class=\\\"container-fluid full-height\\\">\\n    <div class=\\\"panel panel-primary full-height\\\">\\n      <div class=\\\"panel-heading\\\">\\n        <h1 class=\\\"text-primary font-weight-bold\\\">{{ 'ATMs List' | translate }}</h1>\\n      </div>\\n\\n      <div class=\\\"row mt-3\\\">\\n        <div class=\\\"col-md-3\\\">\\n          <input type=\\\"date\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.lastRestockedDate\\\"\\n            (ngModelChange)=\\\"formatDate($event)\\\" placeholder=\\\"{{ 'Search last Restocked Date' | translate }}\\\">\\n        </div>\\n        <div class=\\\"col-md-3\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.cashAvailable\\\"\\n            (input)=\\\"validateCashInput($event)\\\" placeholder=\\\"{{ 'Search cash Available' | translate }}\\\">\\n          <div *ngIf=\\\"form.inputerror.cashAvailable\\\" class=\\\"text-danger\\\">\\n            {{ form.inputerror.cashAvailable }}\\n          </div>\\n        </div>\\n        <div class=\\\"col-md-3\\\">\\n          <select class=\\\"form-control\\\" name=\\\"locationId\\\" [(ngModel)]=\\\"form.searchParams.locationId\\\">\\n            <option [ngValue]=\\\"undefined\\\">{{ 'Select locationId' | translate }}</option>\\n            <option *ngFor=\\\"let obj of form.preload.locationList\\\" [value]=\\\"obj.key\\\">{{ obj.value }}</option>\\n          </select>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"row mt-3 justify-content-center\\\">\\n        <div class=\\\"col-md-2\\\">\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary btn-block\\\">{{ 'Search' | translate }}</button>\\n        </div>\\n        <div class=\\\"col-md-2\\\">\\n          <button (click)=\\\"forward('/atms')\\\" type=\\\"button\\\" class=\\\"btn btn-success btn-block\\\">{{ 'Add ATMs' | translate\\n            }}</button>\\n        </div>\\n        <div class=\\\"col-md-2\\\">\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger btn-block\\\">{{ 'Delete' | translate }}</button>\\n        </div>\\n      </div>\\n\\n      <div *ngIf=\\\"form.error || form.message\\\" class=\\\"row mt-3 justify-content-center\\\">\\n        <div class=\\\"col-md-6\\\">\\n          <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{ form.message }}\\n          </div>\\n          <div *ngIf=\\\"!form.error && form.message\\\" class=\\\"alert alert-success alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{ form.message }}\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"table-responsive mt-3\\\">\\n        <table class=\\\"table table-bordered table-hover font-weight-bold text-dark\\\">\\n          <thead class=\\\"thead-dark text-uppercase\\\">\\n            <tr align=\\\"center\\\">\\n              <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" name=\\\"list_name\\\"\\n                  (change)=\\\"checkUncheckAll($event)\\\" /></th>\\n              <th>{{ 'S.No' }}</th>\\n              <th>{{ 'Cash Available' }}</th>\\n              <th>{{ 'Last Restocked Date' }}</th>\\n              <th>{{ 'locationId' }}</th>\\n              <th>{{ 'Edit' }}</th>\\n            </tr>\\n          </thead>\\n          <tbody>\\n            <tr *ngFor=\\\"let m of form.list; let i = index\\\" align=\\\"center\\\">\\n              <td><input type=\\\"checkbox\\\" #checkboxes (change)=\\\"checklistUpdate()\\\" name=\\\"list_name\\\" [id]=\\\"m.id\\\" /></td>\\n              <td>{{ (form.pageNo * 5) + i + 1 }}</td>\\n              <td>{{ m.cashAvailable }}</td>\\n              <td>{{ convertToLocalDate(m.lastRestockedDate) }}</td>\\n              <td>{{ m.locationName }}</td>\\n              <td>\\n                <button class=\\\"fa fa-edit text-primary\\\" id=\\\"nnn\\\" (click)=\\\"forward('/atms/' + m.id)\\\"></button>\\n              </td>\\n            </tr>\\n          </tbody>\\n        </table>\\n      </div>\\n\\n      <div class=\\\"d-flex justify-content-between mt-3\\\">\\n        <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\">{{ 'Previous' | translate\\n          }}</button>\\n        <div *ngIf=\\\"form.list.length == 0\\\">\\n          <a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/atmslist']\\\" (click)=\\\"exit()\\\">{{ 'Back' | translate }}</a>\\n        </div>\\n        <button (click)=\\\"next()\\\" [disabled]=\\\"nextList == 0\\\" class=\\\"btn btn-info\\\">{{ 'Next' | translate }}</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<app-footer></app-footer>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { BaseListCtl } from '../base-list.component';\nimport { ServiceLocatorService } from '../service-locator.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-atmslist',\n  templateUrl: './atmslist.component.html',\n  styleUrls: ['./atmslist.component.css']\n})\nexport class AtmslistComponent extends BaseListCtl implements OnInit {\n\n  public form = {\n    error: false,\n    message: null,\n    preload: [],\n    data: { id: null },\n    inputerror: {\n      cashAvailable: null\n    },\n    searchParams: {\n      cashAvailable: '',\n      lastRestockedDate: '',\n      locationId: ''\n    },\n    searchMessage: null,\n    list: [],\n    pageNo: 0\n  };\n\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\n    super(locator.endpoints.ATMS, locator, route);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n  }\n\n  formatDate(event: any) {\n    const selectedDate = new Date(event);\n    const formattedDate = selectedDate.toISOString().split('T')[0];\n    this.form.searchParams.lastRestockedDate = formattedDate;\n  }\n\n  convertToLocalDate(dateString: string): string {\n    const date = new Date(dateString);\n    const options = { year: 'numeric', month: '2-digit', day: '2-digit' };\n    return date.toLocaleDateString(undefined, options);\n  }\n\n  validateCashInput(event: any) {\n    const value = event.target.value.trim();\n    const isValidNumber = /^[0-9]+(\\.[0-9]+)?$/.test(value);\n    const floatValue = parseFloat(value);\n\n    if (value === '') {\n      this.form.inputerror.cashAvailable = null; // Clear the error message\n    } else if (!isValidNumber || floatValue > 1000000000 || !value.includes('.')) {\n      this.form.inputerror.cashAvailable = 'Please type an exact cash available value (e.g., 90.9, 1000000.5)';\n    } else {\n      this.form.inputerror.cashAvailable = null;\n      this.form.searchParams.cashAvailable = floatValue.toString();\n    }\n  }\n\n  submit() {\n    this.form.pageNo = 0;\n    this.search();\n  }\n\n  search() {\n    this.form.searchMessage = null;\n    super.search();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { HttpServiceService } from './http-service.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService implements HttpInterceptor {\n\n  constructor(private http: HttpServiceService) { }\n  \n  intercept(req: HttpRequest<any>, next: HttpHandler) {\n\n    if (localStorage.getItem('fname')) {\n      req = req.clone({\n        setHeaders: {\n        \"withCredentials\" : \"true\",\n        \"name\" : \"Chetan\",\n          \n\n        }\n      })\n    }\n        console.log(req.headers.get(\"Authorization\")+\"------------------->>>\")\n    return next.handle(req);\n\n  }\n\n}","import { OnInit, Component, ViewChildren, QueryList, ElementRef } from '@angular/core';\nimport { ServiceLocatorService } from './service-locator.service';\nimport { HttpServiceService } from './http-service.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { BaseCtl } from './base.component';\nimport { FormBuilder, FormGroup, FormControl, Validators, FormArray } from '@angular/forms';\nimport { element } from '@angular/core/src/render3';\n\nexport class BaseListCtl extends BaseCtl {  \n  \n    @ViewChildren(\"checkboxes\") checkboxes: QueryList<ElementRef>;\n  deleteRecordList: any = [];\n  isMasterSel:boolean = false ;\n  checkList=0;\n\n  constructor(public endpoint, public locator: ServiceLocatorService, public route: ActivatedRoute) {\n    super(endpoint, locator, route);    \n  }\n\n  /**\n   * Initialize component\n   */\n  ngOnInit() {   \n    this.preload();\n    this.search();\n    this.isMasterSel = false ;\n  }\n\n  display() {\n    this.search();\n  }\n\n  submit() {\n    this.form.pageNo=0;\n    if(this.form.searchParams.roleId==\"undefined\" || this.form.searchParams.id==\"undefined\"){\n    \n      this.form.searchParams={}\n      this.search();\n    }else{\n    this.search();\n    }\n  }\n  \n  delete(id) {\n    super.delete(id, function () {\n      this.search();\n    });\n  }\n\n\n  next() {\n    this.form.pageNo++;\n     this.display(); \n   \n   \n    this.isMasterSel = false ;  \n  //  this.searchOperation('previous');\n  }\n\nexit(){ \n   \n  location.reload();\n}\n  previous() {\n    if (this.form.pageNo > 0) {\n      this.form.pageNo--\n    //  this.display(); \n    this.isMasterSel = false ;\n    this.searchOperation('previous');    \n    }\n  }\n\n  \n\n  checkUncheckAll(event) {\n    const checked = event.target.checked;\n    this.checkboxes.forEach((element) => {     \n        element.nativeElement.checked = checked     \n    });   \n  }\n  checklistUpdate(){\n\n    this.isMasterSel=false;\n    this.checkList=0;\n    this.checkboxes.forEach((element) =>{\nif(element.nativeElement.checked==true){\n  this.checkList=this.checkList+1;\n}\n    });\n    if(this.checkList==this.form.list.length){\n      this.isMasterSel=true;\n\n    }\n  }\n\n\ndeleteMany(){\n  console.log('delete Many Records starts ');\n  console.log('this.form.pageNo ' +this.form.pageNo);  \n  this.form.error = false;\n  this.deleteRecordList.length=0;\n  console.log('record deleting start ')\n  var isRecordSelected:boolean = false ;\n \n    this.checkboxes.forEach((element) => {\n      if (element.nativeElement.checked) {\n        // console.log('record deleting ' + element.nativeElement.id)\n        this.deleteRecordList.push(element.nativeElement.id);\n        isRecordSelected = true ;\n      }\n    });     \n  \n    if(isRecordSelected){\n      console.log('record(s) for delete ' + this.deleteRecordList) ;       \n      super.deleteMany(this.deleteRecordList + '?pageNo=' +this.form.pageNo,function(){\n      //  this.search();  \n            \n      });  \n    }else{\n      this.form.message = \"Select Atleast One Record\";\n        this.form.error = true;\n    console.log('No record(s) for delete ')\n  }\n  this.isMasterSel = false ;  \n  console.log('delete Many Records ends ');\n}\n\n\ngenerateReport(){\n  \n}\n\n}\n\n","import { OnInit } from '@angular/core';\nimport { ServiceLocatorService } from './service-locator.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpServiceService } from './http-service.service';\nimport { formatNumber } from '@angular/common';\nimport { listLazyRoutes } from '@angular/compiler/src/aot/lazy_routes';\n\n\nexport class BaseCtl implements OnInit {\n  public api = {\n    endpoint: null,\n    get: null,\n    save: null,\n    search: null,\n    delete: null,\n    deleteMany: null,\n    preload: null,\n    report: null,\n    address: null,\n  };\n\n  initApi(ep) {\n    this.api.endpoint = ep;\n    this.api.get = ep + \"/get\";\n    this.api.save = ep + \"/save\";\n    this.api.search = ep + \"/search\";\n    this.api.delete = ep + \"/delete\";\n    this.api.deleteMany = ep + \"/deleteMany\";\n    this.api.preload = ep + \"/preload\";\n    this.api.report = ep + \"/report\";\n    this.api.address = ep + \"/address\";\n\n    console.log(\"API\", this.api);\n  }\n\n  /**\n   * Form contains preload data, error/sucess message\n   */\n  public form: any = {\n    error: false, //error\n    message: null, //error or success message\n    preload: [], // preload data\n    data: { id: null }, //form data\n    inputerror: {}, // form input error messages\n    searchParams: {}, //search form\n    searchMessage: null, //search result message\n    list: [], // search list\n    pageNo: 0,\n  };\n  nextList = 0;\n  /**\n   * Initialize services\n   *\n   * @param serviceLocator\n   * @param route\n   */\n  constructor(\n    public endpoint,\n    public serviceLocator: ServiceLocatorService,\n    public route: ActivatedRoute\n  ) {\n    var _self = this;\n\n    _self.initApi(endpoint);\n\n    /**\n     * Get primary key from path variale\n     */\n    serviceLocator.getPathVariable(route, function (params) {\n      _self.form.data.id = params[\"id\"];\n      console.log(\"I GOT ID\", _self.form.data.id);\n    });\n  }\n\n  /**\n   * Initialize component\n   */\n  ngOnInit() {\n    this.preload();\n    if (this.form.data.id && this.form.data.id > 0) {\n      this.display();\n    }\n  }\n\n  /**\n   * Loded preload data\n   */\n\n  preload() {\n    console.log(\"preload start\");\n    var _self = this;\n    this.serviceLocator.httpService.get(_self.api.preload, function (res) {\n      console.log(\"base list preload\", _self.api.preload);\n      if (res.success) {\n        _self.form.preload = res.result;\n      } else {\n        _self.form.error = true;\n        _self.form.message = res.result.message;\n      }\n      console.log(\"FORM\", _self.form);\n    });\n  }\n\n  validate() {\n    return this.validateForm(this.form.data);\n  }\n\n  /**\n   * Override by childs\n   *\n   * @param form\n   */\n  validateForm(form) {}\n\n  /**\n   * Searhs records\n   */\n  search() {\n    console.log(\"search start\");\n    var _self = this;\n    console.log(\"Search Form\", _self.form.searchParams);\n    this.serviceLocator.httpService.post(\n      _self.api.search + \"/\" + _self.form.pageNo,\n      _self.form.searchParams,\n      function (res) {\n        if (res.success) {\n          _self.form.list = res.result.data;\n          _self.nextList = res.result.nextList;\n\n          if (_self.form.list.length == 0) {\n            _self.form.message = \"No record found\";\n            _self.form.error = true;\n          }\n          console.log(\"List Size\", _self.form.list.length);\n        } else {\n          _self.form.error = false;\n          _self.form.message = res.result.message;\n        }\n        console.log(\"FORM\", _self.form);\n      }\n    );\n  }\n\n  searchOperation(operation: String) {\n    console.log(\"previous/next search start\");\n    var _self = this;\n    console.log(\"Search Form\", _self.form.searchParams);\n    this.serviceLocator.httpService.post(\n      _self.api.search + \"/\" + _self.form.pageNo,\n      _self.form.searchParams,\n      function (res) {\n        if (operation == \"next\" || operation == \"previous\") {\n          _self.nextList = res.result.nextList;\n          _self.form.message = null;\n          _self.form.error = false;\n        }\n\n        if (res.success) {\n          _self.form.list = res.result.data;\n          if (_self.form.list.length == 0) {\n            _self.form.message = \"No record found\";\n            _self.form.error = true;\n          }\n          console.log(\"List Size\", _self.form.list.length);\n        } else {\n          _self.form.error = false;\n          _self.form.message = res.result.message;\n        }\n        console.log(\"FORM\", _self.form);\n      }\n    );\n  }\n\n  /**\n   * Contains display logic. It fetches data from database for the primary key\n   */\n  display() {\n    var _self = this;\n    console.log(\"Inside display method\");\n    this.serviceLocator.httpService.get(\n      _self.api.get + \"/\" + _self.form.data.id,\n      function (res) {\n        _self.form.data.id = 0;\n        if (res.success) {\n          _self.populateForm(_self.form.data, res.result.data);\n        } else {\n          _self.form.error = true;\n          _self.form.message = res.result.message;\n        }\n        console.log(\"FORM\", _self.form);\n      }\n    );\n  }\n\n  /**\n   * Populate HTML form data\n   * Overridden by child classes.\n   *\n   * @param form\n   * @param data\n   */\n  populateForm(form, data) {\n    form.id = data.id;\n    console.log(form.id + \"formid in base ctl populate form\");\n  }\n\n  /**\n   * Contains submit logic. It saves data\n   */\n\n  submit() {\n    var _self = this;\n\n    console.log(this.form + \"submit running start\");\n    console.log(\"form data going to be submit\" + this.form.data);\n    //  console.log(\"form data going to be submit\" + this.studentId);\n    this.serviceLocator.httpService.post(\n      this.api.save,\n      this.form.data,\n      function (res) {\n        _self.form.message = \"\";\n        _self.form.inputerror = {};\n\n        if (res.success) {\n          _self.form.message = \"Data is saved\";\n          _self.form.data.id = res.result.data;\n\n          console.log(_self.form.data.id);\n          //  console.log(\"--------------------.\");\n          //return _self.form.data.id ;\n        } else {\n          _self.form.error = true;\n          if (res.result.inputerror) {\n            _self.form.inputerror = res.result.inputerror;\n          }\n          _self.form.message = res.result.message;\n        }\n        _self.form.data.id = res.result.data.id;\n        console.log(\"FORM\", _self.form);\n      }\n    );\n  }\n\n  delete(id, callback?) {\n    var _self = this;\n    this.serviceLocator.httpService.get(\n      _self.api.delete + \"/\" + id,\n      function (res) {\n        if (res.success) {\n          _self.form.message = \"Data is deleted\";\n          if (callback) {\n            console.log(\"Response Success and now Calling Callback\");\n            //  callback();\n            this.search();\n          }\n        } else {\n          _self.form.error = true;\n          _self.form.message = res.result.message;\n        }\n      }\n    );\n  }\n\n  deleteMany(id, callback?) {\n    var _self = this;\n    this.serviceLocator.httpService.post(\n      _self.api.deleteMany + \"/\" + id,\n      this.form.data,\n      function (res) {\n        if (res.success) {\n          _self.form.message = \"Data is deleted\";\n\n          if (callback) {\n            console.log(\"Response Success and now Calling Callback\");\n            _self.form.list = res.result.data;\n            console.log(\"List ::  \", +res.data);\n            console.log(\"List Size\", _self.form.list.length);\n            //  callback();\n          }\n        } else {\n          _self.form.error = true;\n          _self.form.message = res.result.message;\n        }\n      }\n    );\n  }\n\n  generateReport() {\n    var _self = this;\n    console.log(\"********* Generating Report ********************\");\n    this.serviceLocator.httpService.get(_self.api.report, function (res) {\n      if (res.success) {\n        console.log(\"*********  Report Generated ********************\");\n        alert(\"pass\");\n      } else {\n        console.log(\n          \"********* Error in Generating Report  ********************\"\n        );\n        alert(\"fail\");\n      }\n    });\n  }\n  /**\n   * Forward to page\n   * @param page\n   */\n\n  forward(page) {\n    console.log(page + \"--->>page value\");\n    this.serviceLocator.forward(page);\n  }\n\n  filterInput(\n    event: KeyboardEvent,\n    errorField: string,\n    maxLength: number,\n    type: string\n  ): void {\n    const charCode = event.which ? event.which : event.keyCode;\n    const charStr = String.fromCharCode(charCode);\n\n    let allowedChars: RegExp;\n    let errorMsg: string, lerrorMsg: string;\n\n    switch (type) {\n      case \"int\":\n        allowedChars = /^[0-9]$/; // Allows numbers and numpad keys\n        errorMsg = \"Only integers are allowed.\";\n        lerrorMsg = \"digits\";\n        break;\n      case \"double\":\n        allowedChars = /^[0-9]+(\\.[0-9]*)?$/;\n        errorMsg = \"Only numbers and a single decimal point are allowed.\";\n        lerrorMsg = \"digits and a decimal point\";\n        break;\n\n      case \"long\":\n        allowedChars = /^[0-9]$/;\n        errorMsg = \"Only numbers are allowed.\";\n        lerrorMsg = \"digits\";\n        break;\n      case \"char\":\n        allowedChars = /^[a-zA-Z\\s.]$/;\n        errorMsg = \"Only letters are allowed.\";\n        lerrorMsg = \"characters\";\n      default:\n        allowedChars = /^[a-zA-Z\\s.]$/;\n        errorMsg = \"Only letters are allowed.\";\n        lerrorMsg = \"characters\";\n        break;\n    }\n\n    const inputElement = event.target as HTMLInputElement;\n    let input: string = inputElement.value;\n    // Numpad key codes range from 96 (Numpad 0) to 105 (Numpad 9)\n    const isNumpadKey = charCode >= 96 && charCode <= 105;\n\n    // Check if the typed character matches the allowed characters\n    if (\n      (!allowedChars.test(charStr) &&\n        charCode !== 8 &&\n        charCode !== 32 &&\n        charCode !== 16 &&\n        charCode !== 46) ||\n      (type === \"char\" && isNumpadKey)\n    ) {\n      event.preventDefault();\n      this[errorField] = errorMsg;\n    } else if (charCode !== 8 && input.length >= maxLength) {\n      event.preventDefault();\n      this[errorField] = `Only ${maxLength} ${lerrorMsg} are allowed.`;\n    } else {\n      this[errorField] = \"\";\n    }\n\n    inputElement.addEventListener(\"blur\", () => {\n      this[errorField] = \"\";\n    });\n\n    console.log(\"Input:\", input);\n  }\n\n  findSelValueByKey(\n    selKey: any,\n    preloadList: { key: number; value: string }[]\n  ): string {\n    if (preloadList) {\n      console.log(\"preloadList:\", preloadList);\n      console.log(\"Searching for selKey:\", selKey);\n      const sel = preloadList.find((a) => a.key === Number(selKey));\n      console.log(\"Found sel:\", sel);\n      return sel ? sel.value : \"\";\n    }\n    return \"\";\n  }\n\n  parseDate(dateString: string): Date {\n    if (dateString) {\n      return new Date(dateString);\n    }\n    return null;\n  }\n}\n","module.exports = \"<app-navbar></app-navbar>\\n<div class=\\\"content-wrapper\\\" style=\\\"padding-top: 3%;padding-bottom: 15%;\\nbackground: url(assets/files/211.jpg) no-repeat center center;\\n background-repeat: no-repeat;\\nbackground-attachment: fixed;\\nbackground-size: cover;width:auto;\\n  height: 90vh;\\\" >\\n  <div class=\\\"container-fluid\\\">\\n\\n    <div class=\\\"panel panel-primary\\\">\\n      <div class=\\\"panel-heading\\\" style=\\\"height: 70px;\\\">\\n       <div class=\\\"text-center\\\">\\n          <h1 class=\\\"text-white font-weight-bold\\\">{{'College List' | translate }}</h1>\\n        </div>\\n      </div> \\n\\n      <div class=\\\"row p-1\\\">\\n        <div class=\\\"col-sm-1\\\"></div>\\n        <div class=\\\"col-sm-2\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.name\\\"\\n            placeholder=\\\"{{'Search Name' | translate}}\\\">\\n\\n        </div>\\n        <!-- <div class=\\\"col-sm-2\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.loginId\\\" placeholder=\\\"{{'Search Email' | translate}}\\\">\\n        </div> -->\\n        <div class=\\\"col-sm-2\\\">\\n\\n          <select class=\\\"form-control\\\" name=\\\"id\\\" [(ngModel)]=\\\"form.searchParams.id\\\" aria-label=\\\"ngSelected\\\">\\n            <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{' Select name' | translate }}</option>\\n            <option *ngFor=\\\"let obj of form.preload.collegeList\\\" [value]=\\\"obj.key\\\">{{obj.value}}</option>\\n          </select>\\n        </div>\\n\\n        \\n        <div class=\\\"col-sm-2\\\">\\n          <!-- <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.status\\\" placeholder=\\\"{{'Search Status' | translate}}\\\"> -->\\n        </div>\\n        <div class=\\\"col-sm-1 ml-3\\\">\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary\\\">\\n            {{'Search' | translate }}</button>\\n        </div>\\n        <div class=\\\"col-lg-2 ml-4\\\">\\n          <button (click)=\\\"forward('/college')\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">{{'Add College' | translate}}\\n          </button>\\n        </div>\\n\\n        <div class=\\\"col-sm-1\\\">\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger\\\">\\n            {{'Delete'| translate}}</button>\\n        </div>\\n      </div>\\n\\n     \\n      <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n        {{form.message}}\\n      </div>\\n      <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n        {{form.message}}\\n      </div>\\n\\n      <div class=\\\"p-1\\\">\\n        <div class=\\\"table-responsive\\\">\\n          <table class=\\\"table table-bordered table-striped table-hover font-weight-bold text-white\\\">\\n            <thead class=\\\"thead-light text-uppercase\\\">\\n              <tr>\\n                <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" name=\\\"list_name\\\" value=\\\"h1\\\" (change)=\\\"checkUncheckAll($event)\\\"/></th>\\n                <th>{{'S.No.' | translate }}</th>\\n                <th>{{'Name' | translate }}</th>\\n                <th>{{'Address' | translate }}</th>\\n                <th>{{'Phone' | translate }}</th>\\n                <th>{{'City' | translate }}</th>\\n                <th>{{'State' | translate }}</th>\\n                <th>{{'Edit' | translate}}</th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr *ngFor=\\\"let m of form.list; let i = index\\\">\\n                <td> <input type=\\\"checkbox\\\"  #checkboxes (change)=\\\"checklistUpdate()\\\"  name=\\\"list_name\\\"  id=\\\"{{m.id}}\\\" value=\\\"{{isMasterSel}}\\\"/>\\n                </td>\\n                <td> {{(form.pageNo*5)+i+ 1}} </td>\\n                <td> {{ m.name }} </td>\\n                <td> {{ m.address }} </td>\\n                <td> {{ m.phoneNo }} </td>\\n                <td> {{ m.city }} </td>\\n                <td> {{ m.state }} </td>\\n                <td>\\n                  <a (click)=\\\"forward( '/college/' +  m.id)\\\" style=\\\"cursor: pointer;\\\">\\n                    <i class=\\\"fa fa-edit text-info\\\"></i>\\n                  </a>\\n                  <!-- /\\n                  <a (click)=\\\"delete(m.id)\\\" style=\\\"cursor: pointer;\\\">\\n                    <i class=\\\"fa fa-trash text-danger\\\"></i>\\n                  </a> -->\\n                </td>\\n                \\n              </tr>\\n            </tbody>\\n            </table>\\n              <table style=\\\"width: 100%;\\\">\\n                <tr>\\n                  <td style=\\\"width: 50%;\\\">\\n              <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\"> {{'Previous' | translate\\n                }} </button></td>\\n                <td *ngIf=\\\"form.list.length!=0\\\" style=\\\"width: 50%;\\\"></td>\\n                <td *ngIf=\\\"form.list.length==0\\\" style=\\\"width: 50%;\\\"><a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/collegelist']\\\"  (click)=\\\"exit()\\\">{{'Back' | translate}}</a></td>\\n    \\n    \\n            \\n                <td><button (click)=\\\"next()\\\" [disabled]=\\\"nextList==0\\\" type=\\\"button\\\" class=\\\"btn btn-info\\\"> {{'Next' |\\n                  translate }}</button></td>\\n                </tr>\\n                </table>\\n    \\n            \\n          \\n        </div>\\n      </div>\\n\\n    </div>\\n\\n  </div>\\n</div>\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\nimport { BaseCtl } from '../base.component';\nimport { ServiceLocatorService } from '../service-locator.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { BaseListCtl } from '../base-list.component';\n\n@Component({\n  selector: 'app-college-list',\n  templateUrl: './college-list.component.html',\n  styleUrls: ['./college.component.css']\n})\nexport class CollegeListComponent  extends BaseListCtl {\n\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute) {\n    super( locator.endpoints.COLLEGE, locator, route);\n  }\n\n}","module.exports = \".alertRedColor {\\n    color: red;\\n}\\n\\n\\n.required-field::after { \\t\\t\\n  content: \\\"*\\\";\\t\\t\\n  color: red;\\t\\t\\n   }\\n\\n\\n.successColor{\\n    color: green;\\n   }\\n\\n\\n.btn-space {\\n    margin-right: 5px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29sbGVnZS9jb2xsZWdlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxVQUFVO0FBQ2Q7OztBQUdBO0VBQ0UsWUFBWTtFQUNaLFVBQVU7R0FDVDs7O0FBRUE7SUFDQyxZQUFZO0dBQ2I7OztBQUVBO0lBQ0MsaUJBQWlCO0FBQ3JCIiwiZmlsZSI6InNyYy9hcHAvY29sbGVnZS9jb2xsZWdlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYWxlcnRSZWRDb2xvciB7XG4gICAgY29sb3I6IHJlZDtcbn1cblxuXG4ucmVxdWlyZWQtZmllbGQ6OmFmdGVyIHsgXHRcdFxuICBjb250ZW50OiBcIipcIjtcdFx0XG4gIGNvbG9yOiByZWQ7XHRcdFxuICAgfVx0XG5cbiAgIC5zdWNjZXNzQ29sb3J7XG4gICAgY29sb3I6IGdyZWVuO1xuICAgfVxuXG4gICAuYnRuLXNwYWNlIHtcbiAgICBtYXJnaW4tcmlnaHQ6IDVweDtcbn0iXX0= */\"","module.exports = \"<app-navbar></app-navbar>\\n<style>\\n  .grad{\\n background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\n background-repeat: no repeat;\\n background-size: 100%;\\n padding-bottom: 25px\\n ;\\n }\\n</style>\\n\\n<div class=\\\"row \\\" style=\\\"padding-top: 3%; padding-bottom:3%;\\nbackground: url(assets/files/wall.jpg) no-repeat center center;\\nbackground-attachment: fixed;\\nbackground-size: cover;width:auto;\\n  height: auto;\\\">\\n\\n  <div class=\\\"col-sm-4\\\"></div>\\n  <div class=\\\"col-sm-4\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-body shadow-lg grad\\\">\\n        <form>\\n          <h2 *ngIf=\\\"!form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\" style=\\\"text-align: center;\\\">{{'Add College' | translate }}</h2>\\n          <h2 *ngIf=\\\"form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\" style=\\\"text-align: center;\\\">{{'Update College' | translate }}</h2>\\n\\n          <div *ngIf=\\\"form.error && form.message != null\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{form.message}}\\n          </div>\\n          <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{form.message}}\\n          </div>\\n\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'Name' | translate }}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"name\\\" [(ngModel)]=\\\"form.data.name\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter Name' | translate }}\\\">\\n              </div>\\n            </div><span class=\\\"alertRedColor\\\"> {{form.inputerror.name}} </span>\\n          </div>\\n\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'Address' | translate }}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-map-marker grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"addr\\\" [(ngModel)]=\\\"form.data.address\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter Address' | translate }}\\\">\\n              </div>\\n              <span class=\\\"alertRedColor\\\"> {{form.inputerror.address}} </span>\\n            </div>\\n          </div>\\n\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'City' | translate }}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-location-arrow grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"city\\\" [(ngModel)]=\\\"form.data.city\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter City' | translate }}\\\">\\n              </div>\\n              <span class=\\\"alertRedColor\\\"> {{form.inputerror.city}} </span>\\n            </div>\\n          </div>\\n\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'State' | translate }}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-address-card grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"state\\\" [(ngModel)]=\\\"form.data.state\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter State' | translate }}\\\">\\n              </div>\\n              <span class=\\\"alertRedColor\\\"> {{form.inputerror.state}} </span>\\n            </div>\\n          </div>\\n\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'Phone No.' | translate }}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-phone grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"phnNo\\\" [(ngModel)]=\\\"form.data.phoneNo\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter Phone No.' | translate }}\\\">\\n              </div>\\n              <span class=\\\"alertRedColor\\\"> {{form.inputerror.phoneNo}} </span>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"row pt-3 pl-3 pb-3\\\">\\n            <div class=\\\"pt-2\\\">\\n              <button *ngIf=\\\"!form.data.id>0\\\" (click)=\\\"submit()\\\" [disabled]=\\\"!validate()\\\" class=\\\"btn btn-success mr-2\\\">\\n                {{'Save' | translate }}</button>\\n            </div>\\n            <div class=\\\"pt-2\\\">\\n              <button *ngIf=\\\"form.data.id>0\\\" (click)=\\\"submit()\\\" class=\\\"btn btn-success mr-2\\\">\\n                {{'Update' | translate }}</button>\\n            </div>\\n\\n            <div class=\\\"pl-3 pt-2\\\">\\n              <button (click)=\\\"forward('/collegelist')\\\" type=\\\"button\\\"\\n                class=\\\"btn btn-warning mr-1\\\">{{'List' | translate }}\\n              </button>\\n            </div>\\n          </div>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\nimport { BaseCtl } from '../base.component';\nimport { ServiceLocatorService } from '../service-locator.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-college',\n  templateUrl: './college.component.html',\n  styleUrls: ['./college.component.css']\n})\nexport class CollegeComponent extends BaseCtl {\n\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute) {\n    super(locator.endpoints.COLLEGE, locator, route);\n  }\n\n\n  validate() {\n    return this.validateForm(this.form.data);\n  }\n\n  validateForm(form) {\n    let flag = true;\n    let validator = this.serviceLocator.dataValidator;\n    flag = flag && validator.isNotNullObject(form.name);\n    flag = flag && validator.isNotNullObject(form.phoneNo);\n    return flag;\n  }\n\n  populateForm(form, data) {\n    form.id = data.id;\n    form.name = data.name;\n    form.address = data.address;\n    form.state = data.state;\n    form.city = data.city;\n    form.phoneNo = data.phoneNo;\n    console.log('Populated Form', form);\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBhbnkvY29tcGFueS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-navbar></app-navbar>\\n<style>\\n  .grad {\\n    background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\n    background-repeat: no-repeat;\\n    background-size: 100%;\\n    padding-bottom: 25px;\\n  }\\n\\n  .input-group-addon {\\n    box-shadow: 9px 8px 7px #001a33;\\n  }\\n\\n  .required-field {\\n    color: red;\\n    font-weight: bold;\\n  }\\n\\n  .alertRedColor {\\n    color: red;\\n  }\\n\\n  .card-body {\\n    padding: 2rem;\\n  }\\n\\n  .input-group-text i {\\n    width: 1.5rem;\\n  }\\n\\n  .btn-primary,\\n  .btn-success,\\n  .btn-warning {\\n    width: 100%;\\n  }\\n\\n  .form-control {\\n    height: calc(2.25rem + 2px);\\n  }\\n\\n  .form-group {\\n    margin-bottom: 1.5rem;\\n  }\\n\\n  .input-group-prepend .input-group-text {\\n    background-color: #e9ecef;\\n    border: 1px solid #ced4da;\\n  }\\n\\n  .input-group-prepend .input-group-text i {\\n    color: #495057;\\n  }\\n\\n  .row {\\n    margin-left: 0;\\n    margin-right: 0;\\n  }\\n\\n  .textarea-height {\\n    height: 100px;\\n  }\\n\\n  .card {\\n    margin: auto;\\n    max-width: 500px;\\n  }\\n</style>\\n\\n<div class=\\\"container-fluid\\\"\\n  style=\\\"padding: 2% 0; background: url('assets/files/wall.jpg') no-repeat center center; background-attachment: fixed; background-size: cover; width: 100%; height: auto;\\\">\\n  <div class=\\\"row justify-content-center\\\">\\n    <div class=\\\"col-md-6\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-body input-group-addon grad\\\">\\n          <form name=\\\"userForm\\\">\\n            <h2 *ngIf=\\\"!form.data.id\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{ 'Add Company' |\\n              translate }}\\n            </h2>\\n            <h2 *ngIf=\\\"form.data.id\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{ 'Update Company' |\\n              translate }}\\n            </h2>\\n\\n            <div *ngIf=\\\"!form.error && form.message\\\" class=\\\"alert alert-success alert-dismissible\\\">\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n              {{ form.message }}\\n            </div>\\n\\n            <div *ngIf=\\\"form.error && form.message\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n              {{ form.message }}\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label><b>{{ 'Experience' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-flag grey-text\\\"></i></div>\\n                </div>\\n                <select class=\\\"form-control\\\" name=\\\"experienceId\\\" [(ngModel)]=\\\"form.data.experienceId\\\"\\n                  aria-label=\\\"ngSelected\\\">\\n                  <option [ngValue]=\\\"undefined\\\">{{ 'Select Experience' | translate }}</option>\\n                  <option *ngFor=\\\"let obj of form.preload.experienceList\\\" [value]=\\\"obj.key\\\">{{ obj.key }}</option>\\n                </select>\\n              </div>\\n              <span *ngIf=\\\"form.inputerror.experienceId\\\" class=\\\"alertRedColor\\\">{{form.inputerror.experienceId}}</span>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label><b>{{ 'Name' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i></div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"name\\\" [(ngModel)]=\\\"form.data.name\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{ 'Enter name' | translate }}\\\" (keypress)=\\\"validateAlphabetInput($event)\\\">\\n              </div>\\n              <span *ngIf=\\\"form.inputerror.name\\\" class=\\\"alertRedColor\\\">{{form.inputerror.name}}</span>\\n            </div>\\n\\n\\n            <div class=\\\"form-group\\\">\\n              <label><b>{{ 'Mobile' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-phone grey-text\\\"></i></div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"mobile\\\" [(ngModel)]=\\\"form.data.mobile\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{ 'Enter Mobile' | translate }}\\\" maxlength=\\\"10\\\" (keypress)=\\\"validatePhone($event)\\\">\\n\\n\\n              </div>\\n              <span *ngIf=\\\"form.inputerror.mobile\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.mobile}}</span>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label><b>{{ 'Date of Joining' | translate }}</b><span class=\\\"required-field\\\"></span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-calendar-alt grey-text\\\"></i></div>\\n                </div>\\n                <input type=\\\"date\\\" name=\\\"dateOfJoining\\\" [value]=\\\"form.data.dateOfJoining | date:'yyyy-MM-dd'\\\"\\n                  (input)=\\\"form.data.dateOfJoining=parseDate($event.target.value)\\\" class=\\\"form-control\\\" required />\\n              </div>\\n              <span *ngIf=\\\"form.inputerror.dateOfJoining\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.dateOfJoining\\n                }}</span>\\n            </div>\\n\\n\\n            <div class=\\\"form-group\\\">\\n              <label><b>{{ 'Email' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i></div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"email\\\" [(ngModel)]=\\\"form.data.email\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{ 'Enter email' | translate }}\\\">\\n              </div>\\n              <span *ngIf=\\\"form.inputerror.email\\\" class=\\\"alertRedColor\\\">{{form.inputerror.email}}</span>\\n            </div>\\n\\n            <div class=\\\"row pt-2 pb-3 justify-content-center\\\">\\n              <div class=\\\"col-md-4\\\">\\n                <button *ngIf=\\\"!form.data.id\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{ 'Save' | translate\\n                  }}</button>\\n              </div>\\n              <div class=\\\"col-md-4\\\">\\n                <button *ngIf=\\\"form.data.id\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{ 'Update' | translate\\n                  }}</button>\\n              </div>\\n              <div class=\\\"col-md-4\\\">\\n                <a class=\\\"btn btn-warning\\\" type=\\\"button\\\" [routerLink]=\\\"['/companylist']\\\">{{ 'List' | translate\\n                  }}</a>\\n              </div>\\n            </div>\\n          </form>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { BaseCtl } from '../base.component';\nimport { ServiceLocatorService } from '../service-locator.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\n\n@Component({\n  selector: 'app-company',\n  templateUrl: './company.component.html',\n  styleUrls: ['./company.component.css']\n})\nexport class CompanyComponent extends BaseCtl {\n\n  getKey = false;\n  selected = null;\n  userForm: FormGroup = null;\n  uploadForm: FormGroup;\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\n    super(locator.endpoints.COMPANY, locator, route);\n  }\n\n  submit() {\n    var _self = this;\n    console.log('in submit');\n    console.log(this.form);\n    console.log(this.form.data);\n  \n    this.serviceLocator.httpService.post(this.api.save, this.form.data, function (res) {\n      _self.form.message = '';\n      _self.form.inputerror = {}; // Clear input errors here\n  \n      if (res.success) {\n        _self.form.error = false; // Set error to false on success\n        _self.form.message = \"Data is saved\";\n        _self.form.data.id = res.result.data;\n        console.log(_self.form.data.id);\n        console.log(\"----------Chetan----------.\");\n  \n        // Clear form data if needed\n        // _self.form.data = {};\n  \n      } else {\n        _self.form.error = true;\n        if (res.result.inputerror) {\n          _self.form.inputerror = res.result.inputerror;\n        }\n        _self.form.message = res.result.message;\n      }\n      console.log('FORM', _self.form);\n    });\n  }\n\n  submit1() {\n    var _self = this;\n    console.log(this.form + \"submit running start\");\n    console.log(this.form.data + \"form data going to be submit\");\n    this.serviceLocator.httpService.post(this.api.search, this.form.data, function (res) {\n      _self.form.message = '';\n      _self.form.inputerror = {};\n      _self.form.data.id = res.result.data;\n\n\n      if (res.success) {\n        _self.form.message = \"Data is saved\";\n        _self.form.data.id = res.result.data;\n\n\n        console.log(_self.form.data.id);\n        console.log(\"--------------------.\");\n\n      } else {\n        _self.form.error = true;\n        _self.form.inputerror = res.result.inputerror;\n        _self.form.message = res.result.message;\n      }\n      _self.form.data.id = res.result.data;\n      console.log('FORM', _self.form);\n    });\n  }\n\n\n\n\n  onUpload(userform: FormData) {\n    this.submit();\n    console.log(this.form.data.id + '---- after submit');\n\n  }\n\n\n  validateForm(form) {\n    let flag = true;\n    let validator = this.serviceLocator.dataValidator;\n    flag = flag && validator.isNotNullObject(form.experienceId);\n    console.log(form.experienceId);\n    flag = flag && validator.isNotNullObject(form.name);\n    console.log(form.name);\n    flag = flag && validator.isNotNullObject(form.mobile);\n    console.log(form.mobile);\n    flag = flag && validator.isNotNullObject(form.dateOfJoining);\n    console.log(form.dateOfJoining);\n    flag = flag && validator.isNotNullObject(form.email);\n    console.log(form.email);\n\n\n    return flag;\n  }\n\n  populateForm(form, data) {\n    form.id = data.id;\n    console.log(form.id + 'populate form in shoppingcomponent');\n    form.name = data.name;\n    form.mobile = data.mobile;\n    form.dateOfJoining = data.dateOfJoining;\n    form.experienceId = data.experienceId;\n    form.email = data.email;\n    \n\n  }\n\n  validatePhone(event: KeyboardEvent) {\n    const input = event.key;\n    // Check if the input is a number or backspace\n    if ((isNaN(Number(input)) && input !== 'Backspace') || (input === ' ')) {\n      event.preventDefault();\n    }\n    // Limit the input to 10 characters\n    if (this.form.data.phone && this.form.data.phone.length >= 10 && input !== 'Backspace') {\n      event.preventDefault();\n    }\n  }\n\n\n  validateAlphabetInput(event) {\n    const charCode = event.which || event.keyCode;\n    const charStr = String.fromCharCode(charCode);\n\n    // Regular expression to test if the character is a letter\n    if (!/^[a-zA-Z]+$/.test(charStr)) {\n      event.preventDefault();\n    }\n  }\n\n\n\n  parseDate(dateString: string): Date {\n    if (dateString) {\n      return new Date(dateString);\n    }\n    return null;\n  }\n  test() {\n\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBhbnkvY29tcGFueWxpc3QuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<app-navbar></app-navbar>\\n\\n<style>\\n  #nnn {\\n    background: none;\\n    border: none;\\n    cursor: pointer;\\n  }\\n\\n  .panel-heading {\\n    height: 50px;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n  }\\n\\n  .search-inputs {\\n    margin-top: 20px;\\n  }\\n\\n  .search-inputs .form-control,\\n  .search-inputs .btn {\\n    margin-bottom: 10px;\\n  }\\n\\n  .content-wrapper {\\n    background: url(assets/files/wall.jpg) no-repeat center center;\\n    background-attachment: fixed;\\n    background-size: cover;\\n    width: auto;\\n    height: 105vh;\\n    padding: 20px;\\n  }\\n\\n  .table-responsive {\\n    margin-top: 20px;\\n  }\\n</style>\\n\\n<div class=\\\"content-wrapper\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"panel panel-primary\\\">\\n      <div class=\\\"panel-heading\\\">\\n        <h1 class=\\\"text-primary font-weight-bold\\\">{{ 'Company List' | translate }}</h1>\\n      </div>\\n\\n      <div class=\\\"row search-inputs justify-content-center\\\">\\n        <div class=\\\"col-md-3\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.name\\\"\\n            placeholder=\\\"{{ 'Search name' | translate }}\\\" (input)=\\\"validateInput($event, 'name')\\\">\\n          <div *ngIf=\\\"!isValidNameInput\\\" class=\\\"text-danger\\\">{{ nameErrorMessage }}</div>\\n        </div>\\n        <div class=\\\"col-md-3\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.mobile\\\"\\n            placeholder=\\\"{{ 'Search mobile' | translate }}\\\" (input)=\\\"validateInput($event, 'mobile')\\\">\\n          <div *ngIf=\\\"!isValidMobileInput\\\" class=\\\"text-danger\\\">{{ mobileErrorMessage }}</div>\\n        </div>\\n        <div class=\\\"col-md-3\\\">\\n          <input type=\\\"date\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.dateOfJoining\\\"\\n            (ngModelChange)=\\\"formatDate($event)\\\" placeholder=\\\"{{ 'Search dateOfJoining' | translate }}\\\">\\n        </div>\\n        <div class=\\\"col-md-3\\\">\\n          <select class=\\\"form-control\\\" name=\\\"diseaseId\\\" [(ngModel)]=\\\"form.searchParams.experienceId\\\">\\n            <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{ 'Select experience' | translate }}</option>\\n            <option *ngFor=\\\"let obj of form.preload.experienceList\\\" [value]=\\\"obj.key\\\">{{ obj.value }}</option>\\n          </select>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"row mt-2 justify-content-center\\\">\\n        <div class=\\\"col-md-2\\\">\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary btn-block\\\">{{ 'Search' | translate }}</button>\\n        </div>\\n        <div class=\\\"col-md-2\\\">\\n          <button (click)=\\\"forward('/company')\\\" type=\\\"button\\\" class=\\\"btn btn-success btn-block\\\">{{ 'Add Company' |\\n            translate }}</button>\\n        </div>\\n        <div class=\\\"col-md-2\\\">\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger btn-block\\\">{{ 'Delete' | translate }}</button>\\n        </div>\\n      </div>\\n\\n      <div *ngIf=\\\"form.error || form.message\\\" class=\\\"row mt-2 justify-content-center\\\">\\n        <div class=\\\"col-md-6\\\">\\n          <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{ form.message }}\\n          </div>\\n          <div *ngIf=\\\"!form.error && form.message\\\" class=\\\"alert alert-success alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{ form.message }}\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"table-responsive mt-3\\\">\\n        <table class=\\\"table table-bordered table-hover font-weight-bold text-dark\\\">\\n          <thead class=\\\"thead-dark text-uppercase\\\">\\n            <tr align=\\\"center\\\">\\n              <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" name=\\\"list_name\\\"\\n                  (change)=\\\"checkUncheckAll($event)\\\" /></th>\\n              <th>{{ 'S.No' }}</th>\\n              <th>{{ 'name' }}</th>\\n              <th>{{ 'mobile' }}</th>\\n              <th>{{ 'dateOfJoining' }}</th>\\n              <th>{{ 'experience' }}</th>\\n              <th>{{ 'Edit' }}</th>\\n            </tr>\\n          </thead>\\n          <tbody>\\n            <tr *ngFor=\\\"let m of form.list; let i = index\\\" align=\\\"center\\\">\\n              <td><input type=\\\"checkbox\\\" #checkboxes (change)=\\\"checklistUpdate()\\\" name=\\\"list_name\\\" [id]=\\\"m.id\\\" /></td>\\n              <td>{{ (form.pageNo * 5) + i + 1 }}</td>\\n              <td>{{ m.name }}</td>\\n              <td>{{ m.mobile }}</td>\\n              <td>{{ convertToLocalDate(m.dateOfVisit) }}</td>\\n              <td>{{ m.experienceName }}</td>\\n              <td>\\n                <button class=\\\"fa fa-edit text-primary\\\" id=\\\"nnn\\\" (click)=\\\"forward('/company/' + m.id)\\\"></button>\\n              </td>\\n            </tr>\\n          </tbody>\\n        </table>\\n      </div>\\n\\n      <div class=\\\"d-flex justify-content-between mt-3\\\">\\n        <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\">{{ 'Previous' | translate\\n          }}</button>\\n        <div *ngIf=\\\"form.list.length == 0\\\">\\n          <a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/companylist']\\\" (click)=\\\"exit()\\\">{{ 'Back' |\\n            translate }}</a>\\n        </div>\\n        <button (click)=\\\"next()\\\" [disabled]=\\\"nextList == 0\\\" class=\\\"btn btn-info\\\">{{ 'Next' | translate }}</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\nimport { BaseListCtl } from '../base-list.component';\nimport { ServiceLocatorService } from '../service-locator.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-companylist',\n  templateUrl: './companylist.component.html',\n  styleUrls: ['./companylist.component.css']\n})\nexport class CompanylistComponent extends BaseListCtl implements OnInit {\n\n  public form = {\n    error: false,\n    message: null,\n    preload: [],\n    data: { id: null },\n    inputerror: {},\n    searchParams: {\n\n      name: '',\n      mobile: '',\n      date: '', // Initialize date field\n      dateOfJoining: '',\n      experienceId: ''\n    },\n    searchMessage: null,\n    list: [],\n    pageNo: 0\n  };\n\n  isValidMobileInput: boolean = true;\n  isValidNameInput: boolean = true;\n  nameErrorMessage: string = '';\n  mobileErrorMessage: string = '';\n\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\n    super(locator.endpoints.COMPANY, locator, route);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n  }\n\n  // Format date function\n  formatDate(event: any) {\n    const selectedDate = new Date(event);\n    const formattedDate = selectedDate.toISOString().split('T')[0];\n    this.form.searchParams.date = formattedDate;\n  }\n\n  // Convert date to local format for display\n  convertToLocalDate(dateString: string): string {\n    const date = new Date(dateString);\n    // Format date to 'MM/DD/YYYY'\n    const options = { year: 'numeric', month: '2-digit', day: '2-digit' };\n    return date.toLocaleDateString(undefined, options);\n  }\n\n  // Validate input for name and mobile fields\n  validateInput(event: any, field: string) {\n    const value = event.target.value;\n    if (field === 'mobile') {\n      this.isValidMobileInput = /^[0-9]*$/.test(value); // Check if the input contains only numbers\n      if (!this.isValidMobileInput) {\n        this.mobileErrorMessage = 'Please type numbers only';\n      } else {\n        this.mobileErrorMessage = '';\n      }\n    } else if (field === 'name') {\n      this.isValidNameInput = /^[A-Za-z\\s]*$/.test(value); // Check if the input contains only letters and spaces\n      if (!this.isValidNameInput) {\n        this.nameErrorMessage = 'Please type alphabets only';\n      } else {\n        this.nameErrorMessage = '';\n      }\n    }\n  }\n\n\n  // Submit method\n  submit() {\n    // Reset page number before searching\n    this.form.pageNo = 0;\n    // Call the search method after formatting the date\n    this.search();\n  }\n\n\n  // Search method\n  search() {\n    // Clear previous search message\n    this.form.searchMessage = null;\n    // Perform the search operation with the search parameters\n    super.search();\n  }\n}\n","module.exports = \"<app-navbar></app-navbar>\\n<div class=\\\"content-wrapper\\\"\\n style=\\\"padding-top: 3%;\\npadding-bottom: 15%;\\nbackground: url(assets/files/wav1.jpg) no-repeat center center;\\n background-repeat: no-repeat;\\nbackground-attachment: fixed;\\nbackground-size: cover;width:auto;\\nheight:90vh;\\\">\\n  <div class=\\\"container-fluid\\\">\\n\\n    <div class=\\\"panel panel-primary\\\">\\n      <div class=\\\"panel-heading\\\" style=\\\"height: 70px;\\\">\\n        <div class=\\\"text-center\\\">\\n          <h1 class=\\\"text-white font-weight-bold\\\">{{'Course List' | translate }}</h1>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"row p-1\\\">\\n        <div class=\\\"col-sm-1\\\"></div>\\n        <div class=\\\"col-sm-2\\\">\\n\\n          <select class=\\\"form-control\\\" name=\\\"courseName\\\" [(ngModel)]=\\\"form.searchParams.id\\\" aria-label=\\\"ngSelected\\\">\\n            <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{' Select CourseName' | translate }}</option>\\n            <option *ngFor=\\\"let obj of form.preload.courseList\\\" [value]=\\\"obj.key\\\">{{obj.value}}</option>\\n          </select>\\n        </div>\\n        <!-- <div class=\\\"col-sm-2\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.loginId\\\" placeholder=\\\"{{'Search Email' | translate}}\\\">\\n        </div> -->\\n        <div class=\\\"col-sm-2\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.duration\\\"\\n            placeholder=\\\"{{'Search Duration' | translate}}\\\">\\n\\n        </div>\\n\\n        \\n        <div class=\\\"col-sm-2\\\">\\n          <!-- <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.status\\\" placeholder=\\\"{{'Search Status' | translate}}\\\"> -->\\n        </div>\\n        <div class=\\\"col-sm-1 ml-3\\\">\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary\\\">\\n            {{'Search' | translate }}</button>\\n        </div>\\n        <div class=\\\"col-lg-2 ml-4\\\">\\n          <button (click)=\\\"forward('/course')\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">{{'Add Course' | translate}}\\n          </button>\\n        </div>\\n\\n        <div class=\\\"col-sm-1\\\">\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger\\\">\\n            {{'Delete'| translate}}</button>\\n        </div>\\n      </div>\\n\\n\\n      <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n        {{form.message}}\\n      </div>\\n      <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n        {{form.message}}\\n      </div>\\n\\n\\n      <div class=\\\"p-1\\\">\\n        <div class=\\\"table-responsive\\\">\\n          <table class=\\\"table table-bordered table-striped table-hover font-weight-bold text-white\\\">\\n            <thead class=\\\"thead-light text-uppercase\\\">\\n              <tr>\\n                <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" name=\\\"list_name\\\" value=\\\"h1\\\"\\n                    (change)=\\\"checkUncheckAll($event)\\\" /></th>\\n                <th>{{'S.No.' | translate }}</th>\\n                <th>{{'Name' | translate }}</th>\\n                <th>{{'Duration' | translate }}</th>\\n                <th>{{'Description' | translate }}</th>\\n                <th>{{'Edit' | translate }}</th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr *ngFor=\\\"let m of form.list; let i = index\\\">\\n                <td> <input type=\\\"checkbox\\\" #checkboxes (change)=\\\"checklistUpdate()\\\" name=\\\"list_name\\\" id=\\\"{{m.id}}\\\" value=\\\"{{isMasterSel}}\\\" />\\n                </td>\\n                <td> {{(form.pageNo*5)+i+ 1}} </td>\\n                <td> {{ m.courseName}} </td>\\n                <td> {{ m.duration }} </td>\\n                <td> {{ m.description }} </td>\\n                <td>\\n                  <a (click)=\\\"forward( '/course/' +  m.id)\\\" style=\\\"cursor: pointer;\\\">\\n                    <i class=\\\"fa fa-edit text-info\\\"></i>\\n                  </a>\\n                  <!-- /\\n                  <a (click)=\\\"delete(m.id)\\\" style=\\\"cursor: pointer;\\\">\\n                    <i class=\\\"fa fa-trash text-danger\\\"></i>\\n                  </a> -->\\n                </td>\\n\\n              </tr>\\n              \\n            </tbody>\\n          </table>\\n          <table style=\\\"width: 100%;\\\">\\n            <tr>\\n              <td style=\\\"width: 50%;\\\">\\n          <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\"> {{'Previous' | translate\\n            }} </button></td>\\n            <td *ngIf=\\\"form.list.length!=0\\\" style=\\\"width: 50%;\\\"></td>\\n            <td *ngIf=\\\"form.list.length==0\\\" style=\\\"width: 50%;\\\"><a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/courselist']\\\"  (click)=\\\"exit()\\\">{{'Back' | translate}}</a></td>\\n\\n        \\n            <td><button (click)=\\\"next()\\\" [disabled]=\\\"nextList==0\\\" type=\\\"button\\\" class=\\\"btn btn-info\\\"> {{'Next' |\\n              translate }}</button></td>\\n            </tr>\\n            </table>\\n\\n        </div>\\n      </div>\\n\\n    </div>\\n\\n  </div>\\n</div>\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\n\nimport { ServiceLocatorService } from '../service-locator.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { BaseListCtl } from '../base-list.component';\n\n@Component({\n  selector: 'app-course-list',\n  templateUrl: './course-list.component.html',\n  styleUrls: ['./course.component.css']\n})\nexport class CourseListComponent  extends BaseListCtl {\n\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute) {\n    super( locator.endpoints.COURSE, locator, route);\n  }\n\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvdXJzZS9jb3Vyc2UuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<app-navbar></app-navbar>\\n<style>\\n  .grad{\\n background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\n background-repeat: no repeat;\\n background-size: 100%;\\n padding-bottom: 25px\\n ;\\n }\\n</style>\\n<div class=\\\"row \\\" style=\\\"padding-top: 3%; padding-bottom:15%;\\nbackground: url(assets/files/wall.jpg) no-repeat center center;\\nbackground-attachment: fixed;\\nbackground-size: cover;width:auto;\\n  height: auto;\\\">\\n\\n  <div class=\\\"col-sm-4\\\"></div>\\n  <div class=\\\"col-sm-4\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-body shadow-lg grad\\\">\\n        <form>\\n          <h2 *ngIf=\\\"!form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\" style=\\\"text-align: center;\\\">{{'Add Course' | translate }}</h2>\\n          <h2 *ngIf=\\\"form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\" style=\\\"text-align: center;\\\">{{'Update Course' | translate }}</h2>\\n\\n          <div *ngIf=\\\"form.error && form.message != null\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{form.message}}\\n          </div>\\n          <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{form.message}}\\n          </div>\\n\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'Course Name' | translate }}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-file grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"courseName\\\" [(ngModel)]=\\\"form.data.courseName\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter Course Name' | translate }}\\\">\\n              </div>\\n            </div><span class=\\\"alertRedColor\\\"> {{form.inputerror.courseName}} </span>\\n          </div>\\n\\n\\n\\n\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'Duration' | translate }}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\" >\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-clock-o grey-text\\\"></i> </div>\\n                </div>\\n            \\n                <select class=\\\"form-control\\\" name=\\\"duration\\\"\\n                  [(ngModel)]=\\\"form.data.duration\\\" style=\\\"cursor: pointer;\\\">\\n                  <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{'Please select' | translate }}</option>\\n                  <option [value]=\\\"1\\\">1 Year</option>\\n                  <option [value]=\\\"2\\\">2 Year</option>\\n                  <option [value]=\\\"3\\\">3 Year</option>\\n                  <option [value]=\\\"4\\\">4 Year</option>\\n                  <option [value]=\\\"5\\\">5 Year</option>\\n\\n                </select>\\n              </div>\\n              <span class=\\\"alertRedColor\\\"> {{form.inputerror.duration}} </span>\\n            </div>\\n          </div>\\n\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'Description' | translate }}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-bars grey-text\\\"></i> </div>\\n                </div>\\n                <textarea class=\\\"form-control\\\" placeholder=\\\"{{'Enter Description' | translate }}\\\" name=\\\"description\\\"\\n                  [(ngModel)]=\\\"form.data.description\\\"></textarea>\\n              </div>\\n            </div><span class=\\\"alertRedColor\\\"> {{form.inputerror.description}} </span>\\n          </div>\\n\\n\\n          <div class=\\\"row pt-3 pl-3 pb-3\\\">\\n            <div class=\\\"pt-2\\\">\\n              <button *ngIf=\\\"!form.data.id>0\\\" (click)=\\\"submit()\\\" [disabled]=\\\"!validate()\\\" class=\\\"btn btn-success mr-2\\\">\\n                {{'Save' | translate }}</button>\\n            </div>\\n            <div class=\\\"pt-2\\\">\\n              <button *ngIf=\\\"form.data.id>0\\\" (click)=\\\"submit()\\\" class=\\\"btn btn-success mr-2\\\">\\n                {{'Update' | translate }}</button>\\n            </div>\\n            <div class=\\\"pl-3 pt-2\\\">\\n              <button (click)=\\\"forward('/courselist')\\\" type=\\\"button\\\" class=\\\"btn btn-warning mr-1\\\">{{'List\\n                ' | translate }}              </button>\\n            </div>\\n          </div>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<app-footer></app-footer>\"","\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { HttpServiceService } from '../http-service.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { DataValidator } from '../utility/data-validator';\nimport { ServiceLocatorService } from '../service-locator.service';\nimport { BaseCtl } from '../base.component';\n\n@Component({\n  selector: 'app-course',\n  templateUrl: './course.component.html',\n  styleUrls: ['./course.component.css']\n})\nexport class CourseComponent extends BaseCtl {\n\n  selected = null;\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute) {\n    super(locator.endpoints.COURSE, locator, route);\n  }\n  validate() {\n    return this.validateForm(this.form.data);\n  }\n \n\n  validateForm(form) {\n    let flag = true;\n    let validator = this.serviceLocator.dataValidator;\n    flag = flag && validator.isNotNullObject(form.courseName);\n    flag = flag && validator.isNotNullObject(form.duration);\n    flag = flag && validator.isNotNullObject(form.description);\n    return flag;\n  }\n\n  populateForm(form, data) {\n    form.id = data.id;\n    form.courseName = data.courseName;\n    form.duration = data.duration;\n    form.description = data.description;\n    console.log('Populated Form', form);\n  }\n}\n\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2N1c3RvbWVyL2N1c3RvbWVyLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<app-navbar></app-navbar>\\n<style>\\n  .grad {\\n    background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\n    background-repeat: no-repeat;\\n    background-size: 100%;\\n    padding-bottom: 25px;\\n  }\\n\\n  .input-group-addon {\\n    box-shadow: 9px 8px 7px #001a33;\\n  }\\n\\n  .required-field {\\n    color: red;\\n    font-weight: bold;\\n  }\\n\\n  .alertRedColor {\\n    color: red;\\n  }\\n\\n  .card-body {\\n    padding: 2rem;\\n  }\\n\\n  .input-group-text i {\\n    width: 1.5rem;\\n  }\\n\\n  .btn-primary,\\n  .btn-success,\\n  .btn-warning {\\n    width: 100%;\\n  }\\n\\n  .form-control {\\n    height: calc(2.25rem + 2px);\\n  }\\n\\n  .form-group {\\n    margin-bottom: 1.5rem;\\n  }\\n\\n  .input-group-prepend .input-group-text {\\n    background-color: #e9ecef;\\n    border: 1px solid #ced4da;\\n  }\\n\\n  .input-group-prepend .input-group-text i {\\n    color: #495057;\\n  }\\n\\n  .row {\\n    margin-left: 0;\\n    margin-right: 0;\\n  }\\n\\n  .textarea-height {\\n    height: 100px;\\n  }\\n\\n  .card {\\n    margin: auto;\\n    max-width: 500px;\\n  }\\n</style>\\n\\n<div class=\\\"container-fluid\\\"\\n  style=\\\"padding: 2% 0; background: url('assets/files/wall.jpg') no-repeat center center; background-attachment: fixed; background-size: cover; width: 100%; height: auto;\\\">\\n  <div class=\\\"row justify-content-center\\\">\\n    <div class=\\\"col-md-6\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-body input-group-addon grad\\\">\\n          <form name=\\\"userForm\\\">\\n            <h2 *ngIf=\\\"!form.data.id\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{ 'Add Customer' |\\n              translate }}\\n            </h2>\\n            <h2 *ngIf=\\\"form.data.id\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{ 'Update Customer' |\\n              translate }}\\n            </h2>\\n\\n            <div *ngIf=\\\"!form.error && form.message\\\" class=\\\"alert alert-success alert-dismissible\\\">\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n              {{ form.message }}\\n            </div>\\n\\n            <div *ngIf=\\\"form.error && form.message\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n              {{ form.message }}\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label><b>{{ 'Gender' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-flag grey-text\\\"></i></div>\\n                </div>\\n                <select class=\\\"form-control\\\" name=\\\"genderId\\\" [(ngModel)]=\\\"form.data.genderId\\\"\\n                  aria-label=\\\"ngSelected\\\">\\n                  <option [ngValue]=\\\"undefined\\\">{{ 'Select gender' | translate }}</option>\\n                  <option *ngFor=\\\"let obj of form.preload.genderList\\\" [value]=\\\"obj.key\\\">{{ obj.value }}</option>\\n                </select>\\n              </div>\\n              <span *ngIf=\\\"form.inputerror.genderId\\\" class=\\\"alertRedColor\\\">{{form.inputerror.genderId}}</span>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label><b>{{ 'Name' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i></div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"name\\\" [(ngModel)]=\\\"form.data.name\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{ 'Enter name' | translate }}\\\">\\n              </div>\\n              <span *ngIf=\\\"form.inputerror.name\\\" class=\\\"alertRedColor\\\">{{form.inputerror.name}}</span>\\n            </div>\\n\\n\\n            <div class=\\\"form-group\\\">\\n              <label><b>{{ 'Phone Number' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-phone grey-text\\\"></i></div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"phoneNumber\\\" [(ngModel)]=\\\"form.data.phoneNumber\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{ 'Enter phoneNumber' | translate }}\\\" maxlength=\\\"10\\\" (keypress)=\\\"validatePhone($event)\\\">\\n\\n\\n              </div>\\n              <span *ngIf=\\\"form.inputerror.phoneNumber\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.phoneNumber}}</span>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label><b>{{ 'Date of Birth' | translate }}</b><span class=\\\"required-field\\\"></span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-calendar-alt grey-text\\\"></i></div>\\n                </div>\\n                <input type=\\\"date\\\" name=\\\"dateOfBirth\\\" [value]=\\\"form.data.dateOfBirth | date:'yyyy-MM-dd'\\\"\\n                  (input)=\\\"form.data.dateOfBirth=parseDate($event.target.value)\\\" class=\\\"form-control\\\" required />\\n              </div>\\n              <span *ngIf=\\\"form.inputerror.dateOfBirth\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.dateOfBirth\\n                }}</span>\\n            </div>\\n\\n            <div class=\\\"row pt-2 pb-3 justify-content-center\\\">\\n              <div class=\\\"col-md-4\\\">\\n                <button *ngIf=\\\"!form.data.id\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{ 'Save' | translate\\n                  }}</button>\\n              </div>\\n              <div class=\\\"col-md-4\\\">\\n                <button *ngIf=\\\"form.data.id\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{ 'Update' | translate\\n                  }}</button>\\n              </div>\\n              <div class=\\\"col-md-4\\\">\\n                <a class=\\\"btn btn-warning\\\" type=\\\"button\\\" [routerLink]=\\\"['/customerlist']\\\">{{ 'List' | translate\\n                  }}</a>\\n              </div>\\n            </div>\\n          </form>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { BaseCtl } from '../base.component';\nimport { ServiceLocatorService } from '../service-locator.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-customer',\n  templateUrl: './customer.component.html',\n  styleUrls: ['./customer.component.css']\n})\nexport class CustomerComponent extends BaseCtl {\n\n  getKey = false;\n  selected = null;\n  userForm: FormGroup = null;\n  uploadForm: FormGroup;\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\n    super(locator.endpoints.CUSTOMER, locator, route);\n  }\n\n  submit() {\n    var _self = this;\n    console.log('in submit');\n    console.log(this.form);\n    console.log(this.form.data);\n\n    this.serviceLocator.httpService.post(this.api.save, this.form.data, function (res) {\n      _self.form.message = '';\n      _self.form.inputerror = {}; // Clear input errors here\n\n      if (res.success) {\n        _self.form.error = false; // Set error to false on success\n        _self.form.message = \"Data is saved\";\n        _self.form.data.id = res.result.data;\n        console.log(_self.form.data.id);\n        console.log(\"----------Chetan----------.\");\n\n        // Clear form data if needed\n        // _self.form.data = {};\n\n      } else {\n        _self.form.error = true;\n        if (res.result.inputerror) {\n          _self.form.inputerror = res.result.inputerror;\n        }\n        _self.form.message = res.result.message;\n      }\n      console.log('FORM', _self.form);\n    });\n  }\n\n  submit1() {\n    var _self = this;\n    console.log(this.form + \"submit running start\");\n    console.log(this.form.data + \"form data going to be submit\");\n    this.serviceLocator.httpService.post(this.api.search, this.form.data, function (res) {\n      _self.form.message = '';\n      _self.form.inputerror = {};\n      _self.form.data.id = res.result.data;\n\n\n      if (res.success) {\n        _self.form.message = \"Data is saved\";\n        _self.form.data.id = res.result.data;\n\n\n        console.log(_self.form.data.id);\n        console.log(\"--------------------.\");\n\n      } else {\n        _self.form.error = true;\n        _self.form.inputerror = res.result.inputerror;\n        _self.form.message = res.result.message;\n      }\n      _self.form.data.id = res.result.data;\n      console.log('FORM', _self.form);\n    });\n  }\n\n\n\n\n  onUpload(userform: FormData) {\n    this.submit();\n    console.log(this.form.data.id + '---- after submit');\n\n  }\n\n\n  validateForm(form) {\n    let flag = true;\n    let validator = this.serviceLocator.dataValidator;\n    flag = flag && validator.isNotNullObject(form.genderId);\n    console.log(form.genderId);\n    flag = flag && validator.isNotNullObject(form.name);\n    console.log(form.name);\n    flag = flag && validator.isNotNullObject(form.phoneNumber);\n    console.log(form.phoneNumber);\n    flag = flag && validator.isNotNullObject(form.dateOfBirth);\n    console.log(form.dateOfBirth);\n\n\n    return flag;\n  }\n\n  populateForm(form, data) {\n    form.id = data.id;\n    console.log(form.id + 'populate form in shoppingcomponent');\n    form.name = data.name;\n    form.phoneNumber = data.phoneNumber;\n    form.dateOfBirth = data.dateOfBirth;\n    form.genderId = data.genderId;\n\n\n  }\n\n  validatePhone(event: KeyboardEvent) {\n    const input = event.key;\n    // Check if the input is a number or backspace\n    if ((isNaN(Number(input)) && input !== 'Backspace') || (input === ' ')) {\n      event.preventDefault();\n    }\n    // Limit the input to 10 characters\n    if (this.form.data.phone && this.form.data.phone.length >= 10 && input !== 'Backspace') {\n      event.preventDefault();\n    }\n  }\n\n\n  validateAlphabetInput(event) {\n    const charCode = event.which || event.keyCode;\n    const charStr = String.fromCharCode(charCode);\n\n    // Regular expression to test if the character is a letter\n    if (!/^[a-zA-Z]+$/.test(charStr)) {\n      event.preventDefault();\n    }\n  }\n\n\n\n  parseDate(dateString: string): Date {\n    if (dateString) {\n      return new Date(dateString);\n    }\n    return null;\n  }\n  test() {\n\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2N1c3RvbWVyL2N1c3RvbWVybGlzdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-navbar></app-navbar>\\n\\n<style>\\n  #nnn {\\n    background: none;\\n    border: none;\\n    cursor: pointer;\\n  }\\n\\n  .panel-heading {\\n    height: 50px;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n  }\\n\\n  .search-inputs {\\n    margin-top: 20px;\\n  }\\n\\n  .search-inputs .form-control,\\n  .search-inputs .btn {\\n    margin-bottom: 10px;\\n  }\\n\\n  .content-wrapper {\\n    background: url(assets/files/wall.jpg) no-repeat center center;\\n    background-attachment: fixed;\\n    background-size: cover;\\n    width: auto;\\n    height: 105vh;\\n    padding: 20px;\\n  }\\n\\n  .table-responsive {\\n    margin-top: 20px;\\n  }\\n</style>\\n\\n<div class=\\\"content-wrapper\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"panel panel-primary\\\">\\n      <div class=\\\"panel-heading\\\">\\n        <h1 class=\\\"text-primary font-weight-bold\\\">{{ 'Customer List' | translate }}</h1>\\n      </div>\\n\\n      <div class=\\\"row search-inputs justify-content-center\\\">\\n        <div class=\\\"col-md-3\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.name\\\"\\n            placeholder=\\\"{{ 'Search name' | translate }}\\\" (input)=\\\"validateInput($event, 'name')\\\">\\n          <div *ngIf=\\\"!isValidNameInput\\\" class=\\\"text-danger\\\">{{ nameErrorMessage }}</div>\\n        </div>\\n        <div class=\\\"col-md-3\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.phoneNumber\\\"\\n            placeholder=\\\"{{ 'Search phoneNumber' | translate }}\\\" (input)=\\\"validateInput($event, 'phoneNumber')\\\">\\n          <div *ngIf=\\\"!isValidMobileInput\\\" class=\\\"text-danger\\\">{{ mobileErrorMessage }}</div>\\n        </div>\\n        <div class=\\\"col-md-3\\\">\\n          <input type=\\\"date\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.dateOfBirth\\\"\\n            (ngModelChange)=\\\"formatDate($event)\\\" placeholder=\\\"{{ 'Search dateOfBirth' | translate }}\\\">\\n        </div>\\n        <div class=\\\"col-md-3\\\">\\n          <select class=\\\"form-control\\\" name=\\\"genderId\\\" [(ngModel)]=\\\"form.searchParams.genderId\\\">\\n            <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{ 'Select gender' | translate }}</option>\\n            <option *ngFor=\\\"let obj of form.preload.genderList\\\" [value]=\\\"obj.key\\\">{{ obj.value }}</option>\\n          </select>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"row mt-2 justify-content-center\\\">\\n        <div class=\\\"col-md-2\\\">\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary btn-block\\\">{{ 'Search' | translate }}</button>\\n        </div>\\n        <div class=\\\"col-md-2\\\">\\n          <button (click)=\\\"forward('/customer')\\\" type=\\\"button\\\" class=\\\"btn btn-success btn-block\\\">{{ 'Add customer' |\\n            translate }}</button>\\n        </div>\\n        <div class=\\\"col-md-2\\\">\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger btn-block\\\">{{ 'Delete' | translate }}</button>\\n        </div>\\n      </div>\\n\\n      <div *ngIf=\\\"form.error || form.message\\\" class=\\\"row mt-2 justify-content-center\\\">\\n        <div class=\\\"col-md-6\\\">\\n          <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{ form.message }}\\n          </div>\\n          <div *ngIf=\\\"!form.error && form.message\\\" class=\\\"alert alert-success alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{ form.message }}\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"table-responsive mt-3\\\">\\n        <table class=\\\"table table-bordered table-hover font-weight-bold text-dark\\\">\\n          <thead class=\\\"thead-dark text-uppercase\\\">\\n            <tr align=\\\"center\\\">\\n              <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" name=\\\"list_name\\\"\\n                  (change)=\\\"checkUncheckAll($event)\\\" /></th>\\n              <th>{{ 'S.No' }}</th>\\n              <th>{{ 'name' }}</th>\\n              <th>{{ 'Phone Number' }}</th>\\n              <th>{{ 'Date Of Birth' }}</th>\\n              <th>{{ 'gender' }}</th>\\n              <th>{{ 'Edit' }}</th>\\n            </tr>\\n          </thead>\\n          <tbody>\\n            <tr *ngFor=\\\"let m of form.list; let i = index\\\" align=\\\"center\\\">\\n              <td><input type=\\\"checkbox\\\" #checkboxes (change)=\\\"checklistUpdate()\\\" name=\\\"list_name\\\" [id]=\\\"m.id\\\" /></td>\\n              <td>{{ (form.pageNo * 5) + i + 1 }}</td>\\n              <td>{{ m.name }}</td>\\n              <td>{{ m.phoneNumber }}</td>\\n              <td>{{ convertToLocalDate(m.dateOfBirth) }}</td>\\n              <td>{{ m.genderName }}</td>\\n              <td>\\n                <button class=\\\"fa fa-edit text-primary\\\" id=\\\"nnn\\\" (click)=\\\"forward('/customer/' + m.id)\\\"></button>\\n              </td>\\n            </tr>\\n          </tbody>\\n        </table>\\n      </div>\\n\\n      <div class=\\\"d-flex justify-content-between mt-3\\\">\\n        <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\">{{ 'Previous' | translate\\n          }}</button>\\n        <div *ngIf=\\\"form.list.length == 0\\\">\\n          <a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/customerlist']\\\" (click)=\\\"exit()\\\">{{ 'Back' |\\n            translate }}</a>\\n        </div>\\n        <button (click)=\\\"next()\\\" [disabled]=\\\"nextList == 0\\\" class=\\\"btn btn-info\\\">{{ 'Next' | translate }}</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\nimport { BaseListCtl } from '../base-list.component';\nimport { ServiceLocatorService } from '../service-locator.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-customerlist',\n  templateUrl: './customerlist.component.html',\n  styleUrls: ['./customerlist.component.css']\n})\nexport class CustomerlistComponent extends BaseListCtl implements OnInit {\n\n  public form = {\n    error: false,\n    message: null,\n    preload: [],\n    data: { id: null },\n    inputerror: {},\n    searchParams: {\n\n      name: '',\n      mobile: '',\n      date: '', // Initialize date field\n      dateOfJoining: '',\n      experienceId: ''\n    },\n    searchMessage: null,\n    list: [],\n    pageNo: 0\n  };\n\n  isValidMobileInput: boolean = true;\n  isValidNameInput: boolean = true;\n  nameErrorMessage: string = '';\n  mobileErrorMessage: string = '';\n\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\n    super(locator.endpoints.CUSTOMER, locator, route);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n  }\n\n  // Format date function\n  formatDate(event: any) {\n    const selectedDate = new Date(event);\n    const formattedDate = selectedDate.toISOString().split('T')[0];\n    this.form.searchParams.date = formattedDate;\n  }\n\n  // Convert date to local format for display\n  convertToLocalDate(dateString: string): string {\n    const date = new Date(dateString);\n    // Format date to 'MM/DD/YYYY'\n    const options = { year: 'numeric', month: '2-digit', day: '2-digit' };\n    return date.toLocaleDateString(undefined);\n  }\n\n  // Validate input for name and mobile fields\n  validateInput(event: any, field: string) {\n    const value = event.target.value;\n    if (field === 'phoneNumber') {\n      this.isValidMobileInput = /^[0-9]*$/.test(value); // Check if the input contains only numbers\n      if (!this.isValidMobileInput) {\n        this.mobileErrorMessage = 'Please type a 10 digit number';\n      } else {\n        this.mobileErrorMessage = '';\n      }\n    } else if (field === 'name') {\n      this.isValidNameInput = /^[A-Za-z\\s]*$/.test(value); // Check if the input contains only letters and spaces\n      if (!this.isValidNameInput) {\n        this.nameErrorMessage = 'Please type alphabets only';\n      } else {\n        this.nameErrorMessage = '';\n      }\n    }\n  }\n\n\n  // Submit method\n  submit() {\n    // Reset page number before searching\n    this.form.pageNo = 0;\n    // Call the search method after formatting the date\n    this.search();\n  }\n\n\n  // Search method\n  search() {\n    // Clear previous search message\n    this.form.searchMessage = null;\n    // Perform the search operation with the search parameters\n    super.search();\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rhc2hib2FyZC9kYXNoYm9hcmQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<style>\\n  body{\\n  \\n  background-image: url('<%=ORSView.APP_CONTEXT%>/img/201.webp');\\n      background-size: 100%;\\n  \\n  }\\n  .cl{\\n    font-family: Lucida Calligraphy; \\n    }\\n  </style>\\n<app-navbar></app-navbar>\\n  \\n  <div class=\\\"row \\\" style=\\\"padding-bottom: 14%;\\n  background: url(assets/files/62.jpg) no-repeat center center;\\n  background-attachment: fixed;\\n  background-size: cover;     \\n    height: 90vh;\\\">\\n  \\n  <p class=\\\"text-cs1 font-family ml-4 font-weight-bold\\\" style=\\\"padding-top: 1%; padding-left: 36%;\\n  font-size: 45px; color: rgb(4, 204, 226);\\\">{{'WELCOME TO ORS' | translate}}</p>\\n  \\n  </div>\\n\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VtcGxveWVlL2VtcGxveWVlLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<app-navbar></app-navbar>\\n<style>\\n  .grad {\\n    background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\n    background-repeat: no-repeat;\\n    background-size: 100%;\\n    padding-bottom: 25px;\\n  }\\n\\n  .input-group-addon {\\n    box-shadow: 9px 8px 7px #001a33;\\n  }\\n\\n  .required-field {\\n    color: red;\\n    font-weight: bold;\\n  }\\n\\n  .alertRedColor {\\n    color: red;\\n  }\\n\\n  .card-body {\\n    padding: 2rem;\\n  }\\n\\n  .input-group-text i {\\n    width: 1.5rem;\\n  }\\n\\n  .btn-primary,\\n  .btn-success,\\n  .btn-warning {\\n    width: 100%;\\n  }\\n\\n  .form-control {\\n    height: calc(2.25rem + 2px);\\n  }\\n\\n  .form-group {\\n    margin-bottom: 1.5rem;\\n  }\\n\\n  .input-group-prepend .input-group-text {\\n    background-color: #e9ecef;\\n    border: 1px solid #ced4da;\\n  }\\n\\n  .input-group-prepend .input-group-text i {\\n    color: #495057;\\n  }\\n\\n  .row {\\n    margin-left: 0;\\n    margin-right: 0;\\n  }\\n\\n  .textarea-height {\\n    height: 100px;\\n  }\\n\\n  .card {\\n    margin: auto;\\n    max-width: 500px;\\n  }\\n</style>\\n\\n<div class=\\\"container-fluid\\\"\\n  style=\\\"padding: 2% 0; background: url('assets/files/wall.jpg') no-repeat center center; background-attachment: fixed; background-size: cover; width: 100%; height: auto;\\\">\\n  <div class=\\\"row justify-content-center\\\">\\n    <div class=\\\"col-md-6\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-body input-group-addon grad\\\">\\n          <form name=\\\"userForm\\\">\\n            <h2 *ngIf=\\\"!form.data.id\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{ 'Add Employee' |\\n              translate }}\\n            </h2>\\n            <h2 *ngIf=\\\"form.data.id\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{ 'Update Employee' |\\n              translate }}\\n            </h2>\\n\\n            <div *ngIf=\\\"!form.error && form.message\\\" class=\\\"alert alert-success alert-dismissible\\\">\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n              {{ form.message }}\\n            </div>\\n\\n            <div *ngIf=\\\"form.error && form.message\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n              {{ form.message }}\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label><b>{{ 'Department' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-flag grey-text\\\"></i></div>\\n                </div>\\n                <select class=\\\"form-control\\\" name=\\\"departmentId\\\" [(ngModel)]=\\\"form.data.departmentId\\\"\\n                  aria-label=\\\"ngSelected\\\">\\n                  <option [ngValue]=\\\"undefined\\\">{{ 'Select department' | translate }}</option>\\n                  <option *ngFor=\\\"let obj of form.preload.departmentList\\\" [value]=\\\"obj.key\\\">{{ obj.value }}</option>\\n                </select>\\n              </div>\\n              <span *ngIf=\\\"form.inputerror.departmentId\\\" class=\\\"alertRedColor\\\">{{form.inputerror.departmentId}}</span>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label><b>{{ 'Name' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i></div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"name\\\" [(ngModel)]=\\\"form.data.name\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{ 'Enter name' | translate }}\\\" (keypress)=\\\"validateAlphabetInput($event)\\\">\\n              </div>\\n              <span *ngIf=\\\"form.inputerror.name\\\" class=\\\"alertRedColor\\\">{{form.inputerror.name}}</span>\\n            </div>\\n\\n\\n            <div class=\\\"form-group\\\">\\n              <label><b>{{ 'Last Employer Name' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i></div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"lastEmployerName\\\" [(ngModel)]=\\\"form.data.lastEmployerName\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{ 'Enter last Employer Name' | translate }}\\\" (keypress)=\\\"validateAlphabetInput($event)\\\">\\n              </div>\\n              <span *ngIf=\\\"form.inputerror.lastEmployerName\\\" class=\\\"alertRedColor\\\">{{form.inputerror.lastEmployerName}}</span>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label><b>{{ 'Date Of Joining' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-calendar-alt grey-text\\\"></i></div>\\n                </div>\\n                <input type=\\\"date\\\" name=\\\"dateOfJoining\\\" [value]=\\\"form.data.dateOfJoining | date:'yyyy-MM-dd'\\\"\\n                  (input)=\\\"form.data.dateOfJoining=parseDate($event.target.value)\\\" class=\\\"form-control\\\" required />\\n              </div>\\n              <span *ngIf=\\\"form.inputerror.dateOfJoining\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.dateOfJoining\\n                }}</span>\\n            </div>\\n\\n\\n            <div class=\\\"row pt-2 pb-3 justify-content-center\\\">\\n              <div class=\\\"col-md-4\\\">\\n                <button *ngIf=\\\"!form.data.id\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{ 'Save' | translate\\n                  }}</button>\\n              </div>\\n              <div class=\\\"col-md-4\\\">\\n                <button *ngIf=\\\"form.data.id\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{ 'Update' | translate\\n                  }}</button>\\n              </div>\\n              <div class=\\\"col-md-4\\\">\\n                <a class=\\\"btn btn-warning\\\" type=\\\"button\\\" [routerLink]=\\\"['/employeelist']\\\">{{ 'List' | translate\\n                  }}</a>\\n              </div>\\n            </div>\\n          </form>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { BaseCtl } from '../base.component';\nimport { ServiceLocatorService } from '../service-locator.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-employee',\n  templateUrl: './employee.component.html',\n  styleUrls: ['./employee.component.css']\n})\nexport class EmployeeComponent extends BaseCtl {\n\n  getKey = false;\n  selected = null;\n  userForm: FormGroup = null;\n  uploadForm: FormGroup;\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\n    super(locator.endpoints.EMPLOYEE, locator, route);\n  }\n\n  submit() {\n    var _self = this;\n    console.log('in submit');\n    console.log(this.form);\n    console.log(this.form.data);\n\n    this.serviceLocator.httpService.post(this.api.save, this.form.data, function (res) {\n      _self.form.message = '';\n      _self.form.inputerror = {}; // Clear input errors here\n\n      if (res.success) {\n        _self.form.error = false; // Set error to false on success\n        _self.form.message = \"Data is saved\";\n        _self.form.data.id = res.result.data;\n        console.log(_self.form.data.id);\n        console.log(\"----------Chetan----------.\");\n\n        // Clear form data if needed\n        // _self.form.data = {};\n\n      } else {\n        _self.form.error = true;\n        if (res.result.inputerror) {\n          _self.form.inputerror = res.result.inputerror;\n        }\n        _self.form.message = res.result.message;\n      }\n      console.log('FORM', _self.form);\n    });\n  }\n\n  submit1() {\n    var _self = this;\n    console.log(this.form + \"submit running start\");\n    console.log(this.form.data + \"form data going to be submit\");\n    this.serviceLocator.httpService.post(this.api.search, this.form.data, function (res) {\n      _self.form.message = '';\n      _self.form.inputerror = {};\n      _self.form.data.id = res.result.data;\n\n\n      if (res.success) {\n        _self.form.message = \"Data is saved\";\n        _self.form.data.id = res.result.data;\n\n\n        console.log(_self.form.data.id);\n        console.log(\"--------------------.\");\n\n      } else {\n        _self.form.error = true;\n        _self.form.inputerror = res.result.inputerror;\n        _self.form.message = res.result.message;\n      }\n      _self.form.data.id = res.result.data;\n      console.log('FORM', _self.form);\n    });\n  }\n\n\n\n\n  onUpload(userform: FormData) {\n    this.submit();\n    console.log(this.form.data.id + '---- after submit');\n\n  }\n\n\n  validateForm(form) {\n    let flag = true;\n    let validator = this.serviceLocator.dataValidator;\n    flag = flag && validator.isNotNullObject(form.departmentId);\n    console.log(form.departmentId);\n    flag = flag && validator.isNotNullObject(form.name);\n    console.log(form.name);\n    flag = flag && validator.isNotNullObject(form.lastEmployerName);\n    console.log(form.lastEmployerName);\n    flag = flag && validator.isNotNullObject(form.dateOfJoining);\n    console.log(form.dateOfJoining);\n\n    return flag;\n  }\n\n  populateForm(form, data) {\n    form.id = data.id;\n    console.log(form.id + 'populate form in shoppingcomponent');\n    form.name = data.name;\n    form.lastEmployerName = data.lastEmployerName;\n    form.dateOfJoining = data.dateOfJoining;\n    form.departmentId = data.departmentId;\n\n\n  }\n\n  validatePhone(event: KeyboardEvent) {\n    const input = event.key;\n    // Check if the input is a number or backspace\n    if ((isNaN(Number(input)) && input !== 'Backspace') || (input === ' ')) {\n      event.preventDefault();\n    }\n    // Limit the input to 10 characters\n    if (this.form.data.phone && this.form.data.phone.length >= 10 && input !== 'Backspace') {\n      event.preventDefault();\n    }\n  }\n\n\n  validateAlphabetInput(event) {\n    const charCode = event.which || event.keyCode;\n    const charStr = String.fromCharCode(charCode);\n\n    // Regular expression to test if the character is a letter\n    if (!/^[a-zA-Z]+$/.test(charStr)) {\n      event.preventDefault();\n    }\n  }\n\n\n\n  parseDate(dateString: string): Date {\n    if (dateString) {\n      return new Date(dateString);\n    }\n    return null;\n  }\n  test() {\n\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VtcGxveWVlL2VtcGxveWVlbGlzdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-navbar></app-navbar>\\n\\n<style>\\n  #nnn {\\n    background: none;\\n    border: none;\\n    cursor: pointer;\\n  }\\n\\n  .panel-heading {\\n    height: 50px;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n  }\\n\\n  .search-inputs {\\n    margin-top: 20px;\\n  }\\n\\n  .search-inputs .form-control,\\n  .search-inputs .btn {\\n    margin-bottom: 10px;\\n  }\\n\\n  .content-wrapper {\\n    background: url(assets/files/wall.jpg) no-repeat center center;\\n    background-attachment: fixed;\\n    background-size: cover;\\n    width: auto;\\n    height: 105vh;\\n    padding: 20px;\\n  }\\n\\n  .table-responsive {\\n    margin-top: 20px;\\n  }\\n</style>\\n\\n<div class=\\\"content-wrapper\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"panel panel-primary\\\">\\n      <div class=\\\"panel-heading\\\">\\n        <h1 class=\\\"text-primary font-weight-bold\\\">{{ 'Employee List' | translate }}</h1>\\n      </div>\\n\\n      <div class=\\\"row search-inputs justify-content-center\\\">\\n        <div class=\\\"col-md-3\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.name\\\"\\n            placeholder=\\\"{{ 'Search Name' | translate }}\\\" (input)=\\\"validateInput($event, 'name')\\\">\\n          <div *ngIf=\\\"!isValidNameInput\\\" class=\\\"text-danger\\\">{{ nameErrorMessage }}</div>\\n        </div>\\n        <!--  <div class=\\\"col-md-3\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.mobile\\\"\\n            placeholder=\\\"{{ 'Search mobile' | translate }}\\\" (input)=\\\"validateInput($event, 'mobile')\\\">\\n          <div *ngIf=\\\"!isValidMobileInput\\\" class=\\\"text-danger\\\">{{ mobileErrorMessage }}</div>\\n        </div> -->\\n\\n        <div class=\\\"col-md-3\\\">\\n          <input type=\\\"date\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.dateOfJoining\\\"\\n            (ngModelChange)=\\\"formatDate($event)\\\" placeholder=\\\"{{ 'Search dateOfJoining' | translate }}\\\">\\n        </div>\\n\\n        <div class=\\\"col-md-3\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.lastEmployerName\\\"\\n            placeholder=\\\"{{ 'Search lastEmployerName' | translate }}\\\">\\n        </div>\\n\\n\\n        <div class=\\\"col-md-3\\\">\\n          <select class=\\\"form-control\\\" name=\\\"departmentId\\\" [(ngModel)]=\\\"form.searchParams.departmentId\\\">\\n            <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{ 'Select department' | translate }}</option>\\n            <option *ngFor=\\\"let obj of form.preload.departmentList\\\" [value]=\\\"obj.key\\\">{{ obj.value }}</option>\\n          </select>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"row mt-2 justify-content-center\\\">\\n        <div class=\\\"col-md-2\\\">\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary btn-block\\\">{{ 'Search' | translate }}</button>\\n        </div>\\n        <div class=\\\"col-md-2\\\">\\n          <button (click)=\\\"forward('/employee')\\\" type=\\\"button\\\" class=\\\"btn btn-success btn-block\\\">{{ 'Add Employee' |\\n            translate }}</button>\\n        </div>\\n        <div class=\\\"col-md-2\\\">\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger btn-block\\\">{{ 'Delete' | translate }}</button>\\n        </div>\\n      </div>\\n\\n      <div *ngIf=\\\"form.error || form.message\\\" class=\\\"row mt-2 justify-content-center\\\">\\n        <div class=\\\"col-md-6\\\">\\n          <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{ form.message }}\\n          </div>\\n          <div *ngIf=\\\"!form.error && form.message\\\" class=\\\"alert alert-success alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{ form.message }}\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"table-responsive mt-3\\\">\\n        <table class=\\\"table table-bordered table-hover font-weight-bold text-dark\\\">\\n          <thead class=\\\"thead-dark text-uppercase\\\">\\n            <tr align=\\\"center\\\">\\n              <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" name=\\\"list_name\\\"\\n                  (change)=\\\"checkUncheckAll($event)\\\" /></th>\\n              <th>{{ 'S.No' }}</th>\\n              <th>{{ 'name' }}</th>\\n              <th>{{ 'last employer name' }}</th>\\n              <th>{{ 'date of joining' }}</th>\\n              <th>{{ 'department' }}</th>\\n              <th>{{ 'Edit' }}</th>\\n            </tr>\\n          </thead>\\n          <tbody>\\n            <tr *ngFor=\\\"let m of form.list; let i = index\\\" align=\\\"center\\\">\\n              <td><input type=\\\"checkbox\\\" #checkboxes (change)=\\\"checklistUpdate()\\\" name=\\\"list_name\\\" [id]=\\\"m.id\\\" /></td>\\n              <td>{{ (form.pageNo * 5) + i + 1 }}</td>\\n              <td>{{ m.name }}</td>\\n              <td>{{ m.lastEmployerName }}</td>\\n              <td>{{ convertToLocalDate(m.dateOfJoining) }}</td>\\n              <td>{{ m.departmentName }}</td>\\n              <td>\\n                <button class=\\\"fa fa-edit text-primary\\\" id=\\\"nnn\\\" (click)=\\\"forward('/inventory/' + m.id)\\\"></button>\\n              </td>\\n            </tr>\\n          </tbody>\\n        </table>\\n      </div>\\n\\n      <div class=\\\"d-flex justify-content-between mt-3\\\">\\n        <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\">{{ 'Previous' | translate\\n          }}</button>\\n        <div *ngIf=\\\"form.list.length == 0\\\">\\n          <a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/employeelist']\\\" (click)=\\\"exit()\\\">{{ 'Back' |\\n            translate }}</a>\\n        </div>\\n        <button (click)=\\\"next()\\\" [disabled]=\\\"nextList == 0\\\" class=\\\"btn btn-info\\\">{{ 'Next' | translate }}</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\nimport { BaseListCtl } from '../base-list.component';\nimport { ServiceLocatorService } from '../service-locator.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-employeelist',\n  templateUrl: './employeelist.component.html',\n  styleUrls: ['./employeelist.component.css']\n})\nexport class EmployeelistComponent extends BaseListCtl implements OnInit {\n\n  public form = {\n    error: false,\n    message: null,\n    preload: [],\n    data: { id: null },\n    inputerror: {},\n    searchParams: {\n\n      name: '',\n      lastEmployerName: '',\n      date: '', // Initialize date field\n      dateOfJoining: '',\n      departmentId: ''\n    },\n    searchMessage: null,\n    list: [],\n    pageNo: 0\n  };\n\n  isValidMobileInput: boolean = true;\n  isValidNameInput: boolean = true;\n  nameErrorMessage: string = '';\n  mobileErrorMessage: string = '';\n\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\n    super(locator.endpoints.EMPLOYEE, locator, route);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n  }\n\n  // Format date function\n  formatDate(event: any) {\n    const selectedDate = new Date(event);\n    const formattedDate = selectedDate.toISOString().split('T')[0];\n    this.form.searchParams.date = formattedDate;\n  }\n\n  // Convert date to local format for display\n  convertToLocalDate(dateString: string): string {\n    const date = new Date(dateString);\n    // Format date to 'MM/DD/YYYY'\n    const options = { year: 'numeric', month: '2-digit', day: '2-digit' };\n    return date.toLocaleDateString(undefined, options);\n  }\n\n  // Validate input for name and mobile fields\n  validateInput(event: any, field: string) {\n    const value = event.target.value;\n    if (field === 'mobile') {\n      this.isValidMobileInput = /^[0-9]*$/.test(value); // Check if the input contains only numbers\n      if (!this.isValidMobileInput) {\n        this.mobileErrorMessage = 'Please type numbers only';\n      } else {\n        this.mobileErrorMessage = '';\n      }\n    } else if (field === 'name') {\n      this.isValidNameInput = /^[A-Za-z\\s]*$/.test(value); // Check if the input contains only letters and spaces\n      if (!this.isValidNameInput) {\n        this.nameErrorMessage = 'Please type alphabets only';\n      } else {\n        this.nameErrorMessage = '';\n      }\n    }\n  }\n\n\n  // Submit method\n  submit() {\n    // Reset page number before searching\n    this.form.pageNo = 0;\n    // Call the search method after formatting the date\n    this.search();\n  }\n\n\n  // Search method\n  search() {\n    // Clear previous search message\n    this.form.searchMessage = null;\n    // Perform the search operation with the search parameters\n    super.search();\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class EndpointServiceService {\n  constructor() {}\n\n  public SERVER_URL = \"http://localhost:8084\";\n  public MESSAGE = this.SERVER_URL + \"/Message\";\n  public USER = this.SERVER_URL + \"/User\";\n  public SHOPPING = this.SERVER_URL + \"/Shopping\";\n  public PAYMENT = this.SERVER_URL + \"/Payment\";\n  public CLIENT = this.SERVER_URL + \"/Client\";\n  public ATMS = this.SERVER_URL + \"/ATMs\";\n  public CUSTOMER = this.SERVER_URL + \"/Customer\";\n  public TRANSACTIONS = this.SERVER_URL + \"/Transactions\";\n  public ROUTE = this.SERVER_URL + \"/Route\";\n  public LOANS = this.SERVER_URL + \"/Loans\";\n  public PROJECT = this.SERVER_URL + \"/Project\";\n  public JOB = this.SERVER_URL + \"/Job\";\n  public ISSUE = this.SERVER_URL + \"/Issue\";\n  public PRIORITY = this.SERVER_URL + \"/Priority\";\n  public EMPLOYEE = this.SERVER_URL + \"/Employee\";\n  public TRANSPORTATION = this.SERVER_URL + \"/Transportation\";\n  public COMPANY = this.SERVER_URL + \"/Company\";\n  public ROLE = this.SERVER_URL + \"/Role\";\n  public SUPPLIER = this.SERVER_URL + \"/Supplier\";\n  public INVENTORY = this.SERVER_URL + \"/Inventory\";\n  public VEHICLETRACKING = this.SERVER_URL + \"/VehicleTracking\";\n  public PRODUCTDETAILS = this.SERVER_URL + \"/ProductDetails\";\n  public PRODUCT = this.SERVER_URL + \"/Product\";\n  public PATIENT = this.SERVER_URL + \"/Patient\";\n  public COLLEGE = this.SERVER_URL + \"/College\";\n  public MARKSHEET = this.SERVER_URL + \"/Marksheet\";\n  public STUDENT = this.SERVER_URL + \"/Student\";\n  public SUBJECT = this.SERVER_URL + \"/Subject\";\n  public FACULTY = this.SERVER_URL + \"/Faculty\";\n  public OWNER = this.SERVER_URL + \"/Owner\";\n  public COURSE = this.SERVER_URL + \"/Course\";\n  public TIMETABLE = this.SERVER_URL + \"/TimeTable\";\n  public JASPERREPORT = this.SERVER_URL + \"/Jasper\";\n  public ORDER = this.SERVER_URL + \"/Order\";\n}\n","module.exports = \"<app-navbar></app-navbar>\\n<div class=\\\"content-wrapper\\\" style=\\\"padding-top: 3%;padding-bottom: 15%; \\nbackground: url(assets/files/gettyimages-1132439283-640x640.jpg) no-repeat center center;\\nbackground-attachment: fixed;\\nbackground-size: cover;width:auto;\\n  height: 90vh;\\\">\\n  <div class=\\\"container-fluid\\\">\\n\\n    <div class=\\\"panel panel-primary\\\">\\n      <div class=\\\"panel-heading\\\" style=\\\"height: 70px;\\\">\\n        <div class=\\\"text-center\\\">\\n          <h1 class=\\\"text-primary font-weight-bold\\\">{{'Faculty List' | translate }}</h1>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"row p-1\\\">\\n        <div class=\\\"col-sm-1\\\"></div>\\n        <div class=\\\"col-sm-2\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.collegeName\\\"\\n            placeholder=\\\"{{'Search College' | translate}}\\\">\\n\\n        </div>\\n        <div class=\\\"col-sm-2\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.subjectName\\\"\\n            placeholder=\\\"{{'Search Subject' | translate}}\\\">\\n\\n        </div>\\n        <!-- <div class=\\\"col-sm-2\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.loginId\\\" placeholder=\\\"{{'Search Email' | translate}}\\\">\\n        </div> -->\\n\\n        \\n\\n        \\n        <div class=\\\"col-sm-2\\\">\\n          <!-- <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.status\\\" placeholder=\\\"{{'Search Status' | translate}}\\\"> -->\\n        </div>\\n        <div class=\\\"col-sm-1 ml-3\\\">\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary\\\">\\n            {{'Search' | translate }}</button>\\n        </div>\\n        <div class=\\\"col-lg-2 ml-4\\\">\\n          <button (click)=\\\"forward('/faculty')\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">{{'Add Faculty' | translate}}\\n          </button>\\n        </div>\\n\\n        <div class=\\\"col-sm-1\\\">\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger\\\">\\n            {{'Delete'| translate}}</button>\\n        </div>\\n      </div>\\n\\n      \\n      <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n        {{form.message}}\\n      </div>\\n      <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n        {{form.message}}\\n      </div>\\n\\n      <div class=\\\"p-1\\\">\\n        <div class=\\\"table-responsive\\\">\\n          <table class=\\\"table table-bordered table-striped table-hover\\\">\\n            <thead class=\\\"thead-light text-uppercase\\\">\\n              <tr>\\n                <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" name=\\\"list_name\\\" value=\\\"h1\\\" (change)=\\\"checkUncheckAll($event)\\\"/></th>\\n                <th>{{'S.No.' | translate}}</th>\\n                <th>{{'Name' | translate}}</th>\\n                <th>{{'DOB' | translate}}</th>\\n                <th>{{'Gender' | translate}}</th>\\n                <th>{{'College' | translate}}</th>\\n                <th>{{'Course' | translate}}</th>\\n                <th>{{'Subject' | translate}}</th>\\n                <th>{{'Mobile' | translate}}</th>\\n                <th>{{'Email' | translate}}</th>\\n                <th>{{'Qualification' | translate}}</th>\\n                <th>{{'Edit' | translate}}</th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr *ngFor=\\\"let m of form.list; let i = index\\\">\\n                <td> <input type=\\\"checkbox\\\"  #checkboxes (change)=\\\"checklistUpdate()\\\"  name=\\\"list_name\\\"  id=\\\"{{m.id}}\\\" value=\\\"{{isMasterSel}}\\\"/>\\n                </td>\\n                <td>{{(form.pageNo*5)+i+ 1}} </td>\\n                <td>{{ m.firstName }} {{m.lastName}} </td>\\n                <td>{{m.dob | date : 'dd-MM-yyyy'}} </td>\\n                <td>{{ m.gender }} </td>\\n                <td>{{m.collegeName}}</td>\\n                <td>{{m.courseName}}</td>\\n                <td>{{m.subjectName}}</td>\\n                <td>{{ m.phoneNo}}</td>\\n                <td>{{m.email}}</td>\\n                <td>{{m.qualification}}</td>\\n                <td>\\n                  <a (click)=\\\"forward( '/faculty/' +  m.id)\\\" style=\\\"cursor: pointer;\\\">\\n                    <i class=\\\"fa fa-edit text-info\\\"></i>\\n                  </a>\\n                  <!-- /\\n                  <a (click)=\\\"delete(m.id)\\\" style=\\\"cursor: pointer;\\\">\\n                    <i class=\\\"fa fa-trash  text-danger\\\"></i>\\n                  </a> -->\\n                </td>\\n\\n              </tr>\\n            </tbody>\\n          </table>\\n          <table style=\\\"width: 100%;\\\">\\n            <tr>\\n              <td style=\\\"width: 50%;\\\">\\n          <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\"> {{'Previous' | translate\\n            }} </button></td>\\n            <td *ngIf=\\\"form.list.length!=0\\\" style=\\\"width: 50%;\\\"></td>\\n            <td *ngIf=\\\"form.list.length==0\\\" style=\\\"width: 50%;\\\"><a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/facultylist']\\\"  (click)=\\\"exit()\\\">{{'Back' | translate}}</a></td>\\n\\n\\n        \\n            <td><button (click)=\\\"next()\\\" [disabled]=\\\"nextList==0\\\" type=\\\"button\\\" class=\\\"btn btn-info\\\"> {{'Next' |\\n              translate }}</button></td>\\n            </tr>\\n            </table>\\n\\n            \\n        </div>\\n      </div>\\n\\n    </div>\\n\\n  </div>\\n</div>\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\nimport { BaseCtl } from '../base.component';\nimport { ServiceLocatorService } from '../service-locator.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { BaseListCtl } from '../base-list.component';\n\n@Component({\n  selector: 'app-faculty-list',\n  templateUrl: './faculty-list.component.html',\n  styleUrls: ['./faculty.component.css']\n})\nexport class FacultyListComponent  extends BaseListCtl {\n\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute) {\n    super( locator.endpoints.FACULTY, locator, route);\n  }\n\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ZhY3VsdHkvZmFjdWx0eS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-navbar></app-navbar>\\n<style>\\n  .grad {\\n    background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\n    background-repeat: no repeat;\\n    background-size: 100%;\\n    padding-bottom: 25px;\\n  }\\n</style>\\n<div class=\\\"row \\\" style=\\\"padding-top: 3%; padding-bottom:3%;\\nbackground: url(assets/files/wall.jpg) no-repeat center center;\\nbackground-attachment: fixed;\\nbackground-size: cover;width:auto;\\n  height: auto;\\\">\\n\\n  <div class=\\\"col-sm-4\\\"></div>\\n  <div class=\\\"col-sm-4\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-body shadow-lg grad\\\">\\n        <form>\\n          <h2 *ngIf=\\\"!form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\" style=\\\"text-align: center;\\\">{{'Add Faculty'\\n            | translate}}</h2>\\n          <h2 *ngIf=\\\"form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\" style=\\\"text-align: center;\\\">{{'Update\\n            Faculty' | translate}}</h2>\\n\\n          <div *ngIf=\\\"form.error && form.message != null\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{form.message}}\\n          </div>\\n          <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{form.message}}\\n          </div>\\n\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'First Name' | translate}}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"firstName\\\" [(ngModel)]=\\\"form.data.firstName\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter First Name' | translate}}\\\">\\n              </div>\\n            </div>\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.firstName}} </span>\\n          </div>\\n\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'Last Name' | translate}}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user-circle grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"lastName\\\" [(ngModel)]=\\\"form.data.lastName\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter Last Name' | translate}}\\\">\\n              </div>\\n            </div>\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.lastName}} </span>\\n          </div>\\n\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'Email' | translate}} </b>\\n              <span class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"email\\\" [(ngModel)]=\\\"form.data.email\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter Email Id' | translate}}\\\">\\n              </div>\\n            </div>\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.email}} </span>\\n          </div>\\n\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'Qualification' | translate}}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-graduation-cap grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"qualification\\\" [(ngModel)]=\\\"form.data.qualification\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter Your Qualification' | translate}}\\\">\\n              </div>\\n            </div>\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.qualification}} </span>\\n          </div>\\n\\n\\n\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'Subject' | translate}}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-file grey-text\\\"></i> </div>\\n                </div>\\n                <select class=\\\"form-control\\\" name=\\\"subjectId\\\" [(ngModel)]=\\\"form.data.subjectId\\\"\\n                  style=\\\"cursor: pointer;\\\">\\n                  <option *ngFor=\\\"let obj of form.preload.subjectList\\\" [value]=\\\"obj.key\\\">{{obj.value}}</option>\\n                </select>\\n              </div>\\n              <span class=\\\"alertRedColor\\\"> {{form.inputerror.subject}} </span>\\n            </div>\\n          </div>\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'College' | translate}}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-university grey-text\\\"></i> </div>\\n                </div>\\n\\n\\n                <select class=\\\"form-control\\\" name=\\\"collegeId\\\" [(ngModel)]=\\\"form.data.collegeId\\\"\\n                  style=\\\"cursor: pointer;\\\">\\n                  <option *ngFor=\\\"let obj of form.preload.collegeList\\\" [value]=\\\"obj.key\\\">{{obj.value}}</option>\\n                </select>\\n              </div>\\n            </div>\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.qualification}} </span>\\n          </div>\\n\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'Course' | translate}}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-list grey-text\\\"></i> </div>\\n                </div>\\n                <select class=\\\"form-control\\\" name=\\\"courseId\\\" [(ngModel)]=\\\"form.data.courseId\\\" style=\\\"cursor: pointer;\\\">\\n                  <option *ngFor=\\\"let obj of form.preload.courseList\\\" [value]=\\\"obj.key\\\">{{obj.value}}</option>\\n                </select>\\n              </div>\\n            </div>\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.qualification}} </span>\\n          </div>\\n\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'Gender' | translate}}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-venus grey-text\\\"></i> </div>\\n                </div>\\n                <select class=\\\"form-control\\\" name=\\\"gender\\\" [(ngModel)]=\\\"form.data.gender\\\">\\n                  <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{'Please select' | translate}}</option>\\n                  <option value=\\\"Male\\\">{{'Male' | translate}} </option>\\n                  <option value=\\\"Female\\\">{{'Female' | translate}} </option>\\n                </select>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'Mobile No' | translate}} </b>\\n              <span class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-phone grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"phoneNo\\\" [(ngModel)]=\\\"form.data.phoneNo\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter Mobile Number' | translate}}\\\">\\n              </div>\\n            </div>\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.phoneNo}} </span>\\n          </div>\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'DOB' | translate}}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-table grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"date\\\" name=\\\"dob\\\" [value]=\\\"form.data.dob| date:'yyyy-MM-dd'\\\"\\n                  (input)=\\\"form.data.dob=parseDate($event.target.value)\\\" class=\\\"form-control form-control-sm\\\"\\n                  required />\\n              </div>\\n            </div>\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.dob}} </span>\\n          </div>\\n\\n          <div class=\\\"row pt-3 pl-3 pb-3\\\">\\n            <div class=\\\"pt-2\\\">\\n              <button *ngIf=\\\"!form.data.id>0\\\" (click)=\\\"submit()\\\" [disabled]=\\\"!validate()\\\" class=\\\"btn btn-success mr-2\\\">\\n                {{'Save' | translate}}</button>\\n            </div>\\n            <div class=\\\"pt-2\\\">\\n              <button *ngIf=\\\"form.data.id>0\\\" (click)=\\\"submit()\\\" class=\\\"btn btn-success mr-2\\\">\\n                {{'Update' | translate}}</button>\\n            </div>\\n            <div class=\\\"pt-2\\\">\\n              <button (click)=\\\"forward('/facultylist')\\\" type=\\\"button\\\" class=\\\"btn btn-warning mr-1\\\">{{'List' |\\n                translate}}\\n              </button>\\n            </div>\\n          </div>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\nimport { ServiceLocatorService } from '../service-locator.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { BaseCtl } from '../base.component';\n\n@Component({\n  selector: 'app-faculty',\n  templateUrl: './faculty.component.html',\n  styleUrls: ['./faculty.component.css']\n})\nexport class FacultyComponent extends BaseCtl {\n\n  selected = null;\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute) {\n    super(locator.endpoints.FACULTY, locator, route);\n  }\n\n  \n  validate() {\n    return this.validateForm(this.form.data);\n  }\n\n  validateForm(form) {\n    let flag = true;\n    let validator = this.serviceLocator.dataValidator;\n    flag = flag && validator.isNotNullObject(form.firstName);\n    console.log(form.firstName)\n    flag = flag && validator.isNotNullObject(form.lastName);\n    console.log(form.lastName)\n    flag = flag && validator.isNotNullObject(form.email);\n    console.log(form.email)\n    flag = flag && validator.isNotNullObject(form.qualification);\n    console.log(form.qualification)\n    flag = flag && validator.isNotNullObject(form.gender);\n    console.log(form.gender)\n    flag = flag && validator.isNotNullObject(form.phoneNo);\n    console.log(form.phoneNo+\"in validateForm----------------------------\");\n    \n    flag = flag && validator.isNotNullObject(form.courseId);\n    console.log(form.courseId)\n    flag = flag && validator.isNotNullObject(form.collegeId);\n    console.log(form.collegeId)\n    flag = flag && validator.isNotNullObject(form.subjectId);\n    console.log(form.subjectId)\n    return flag;\n  }\n\n  populateForm(form, data) {\n    form.id = data.id;\n    form.subjectId = data.subjectId;\n    console.log(form.subjectId+'subject--');\n    form.collegeId = data.collegeId;\n    form.courseId = data.courseId;\n    console.log(form.courseId+'course ----');\n    form.firstName = data.firstName;\n    form.lastName = data.lastName;\n    form.email = data.email;\n    form.qualification = data.qualification;\n    form.gender = data.gender;\n    form.dob = data.dob;\n    form.phoneNo = data.phoneNo;\n    console.log(\"phoneno----------------\"+form.phoneNo);\n    \n  }\n  parseDate(dateString: string): Date {\n    if (dateString) {\n      return new Date(dateString);\n    }\n    return null;\n  }\n  \n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ZpbGUvZmlsZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"container row\\\">\\n\\n    <div class=\\\"col-md-12\\\">\\n\\n        <h1 class=\\\"text-primary pt-4\\\">Upload Image Test Page</h1>\\n\\n    </div>\\n\\n</div>\\n\\n<div class=\\\"container row pl-4\\\">\\n <div class=\\\"form-group\\\">\\n        <input type=\\\"file\\\" id=\\\"file\\\" (change)=\\\"handleFileInput($event.target.files)\\\">\\n    </div>\\n\\n    <div class=\\\"col-md-6\\\">\\n\\n        <input type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"onUpload()\\\" value=\\\"upload\\\">\\n\\n    </div>\\n\\n</div>\\n\\n<hr />\\n<!--   \\n  <div class=\\\"container row\\\">\\n  \\n      <div class=\\\"col-md-12\\\">\\n  \\n          <div *ngIf=message>{{message}}</div>\\n  \\n      </div>\\n  \\n  </div>\\n  \\n  \\n  <div class=\\\"container row\\\">\\n  \\n      <div class=\\\"col-md-6\\\">\\n\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" placeholder=\\\"image name\\\" [(ngModel)]=\\\"imageName\\\"\\n  \\n              name=\\\"name\\\" />\\n  \\n      </div>\\n  \\n      <div class=\\\"col-md-6\\\">\\n  \\n          <input type=\\\"button\\\" (click)=\\\"getImage()\\\" value=\\\"Get Image\\\">\\n  \\n      </div>\\n  \\n  </div>\\n  \\n  \\n  <div class=\\\"container row\\\">\\n  \\n      <div class=\\\"col-md-12\\\">\\n            <div *ngIf=retrievedImage>\\n  \\n              <img [src]=\\\"retrievedImage\\\">\\n  \\n          </div>\\n  \\n      </div>\\n  \\n  </div> -->\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-file',\n  templateUrl: './file.component.html',\n  styleUrls: ['./file.component.css']\n})\n\n  export class FileComponent implements OnInit {\n\n    ngOnInit() {}\n\n  \n    fileToUpload: File = null;\n    constructor(private formBuilder: FormBuilder, private httpClient: HttpClient) { }\n\n    handleFileInput(files: FileList) {\n      this.fileToUpload = files.item(0);\n      console.log(this.fileToUpload);\n  }\n\n  onUpload() {\n    this.onSubmit(this.fileToUpload).subscribe(data => {\n      console.log(this.fileToUpload);\n      }, error => {\n        console.log(error);\n      });\n    \n  }\n    \n    \n    onSubmit(fileToUpload: File) {\n      const formData = new FormData();\n\n      formData.append('file', fileToUpload);\n      return this.httpClient.post(\"http://localhost:8080/User/profilePic/1\", formData,);\n    }\n\n}\n","module.exports = \"footer{\\n    position: fixed;\\n    \\n    bottom: 0px;\\n    height: 40px;\\n    width: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZm9vdGVyL2Zvb3Rlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZUFBZTs7SUFFZixXQUFXO0lBQ1gsWUFBWTtJQUNaLFdBQVc7QUFDZiIsImZpbGUiOiJzcmMvYXBwL2Zvb3Rlci9mb290ZXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImZvb3RlcntcbiAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgXG4gICAgYm90dG9tOiAwcHg7XG4gICAgaGVpZ2h0OiA0MHB4O1xuICAgIHdpZHRoOiAxMDAlO1xufSJdfQ== */\"","module.exports = \"<footer class=\\\"text-center \\\"\\n style=\\\"background: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\\">\\n  <!-- Copyright -->\\n  <div class=\\\"text-center pt-2 pb-2 text-light\\\" >\\n    &copy; {{'COPYRIGHT' | translate}}\\n    <a class=\\\"text-light\\\" href=\\\"\\\">{{'NCS PVT. LTD' | translate}}</a>\\n  </div>\\n  <!-- Copyright -->\\n</footer>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { CookieService } from 'ngx-cookie-service';\nimport { Router } from '@angular/router'\n\n\n@Injectable()\n\nexport class HttpServiceService {\n\n\n\n  form = {\n    message: '',\n    error: false\n  };\n\n\n  userparams = {\n    url: '',\n    sessionExpiredMsg: '',\n    methodType: '',\n  };\n\n\n  constructor(private router: Router, private httpClient: HttpClient) {\n\n  }\n\n\n  get(endpoint, callback) {\n    var self = this;\n    return this.httpClient.get(endpoint, { withCredentials: true }).subscribe((data) => {\n      console.log('Data :: ' + data);\n      callback(data);\n\n    }, error => {\n      console.log('ORS Error--', error);\n      if (error.status === 401) {\n        localStorage.clear();\n        self.userparams.url = this.router.url;\n        this.router.navigate(['/login'], {\n        queryParams: { errorMessage: error.error.error },\n        })\n\n      }\n    });\n  }\n\n  post(endpoint, bean, callback) {\n    var self = this;\n    return this.httpClient.post(endpoint, bean, { withCredentials: true }).subscribe((data) => {\n      console.log(data);\n      callback(data);\n\n    }, error => {\n      console.log('ORS Error--', error);\n      if (error.status === 401) {\n        localStorage.clear();\n        this.router.navigate(['/login'], {\n        queryParams: { errorMessage: error.error.error },\n        })\n      }\n    }); \n  }\n\n\n}\n\n\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ludmVudG9yeS9pbnZlbnRvcnkuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<app-navbar></app-navbar>\\n<style>\\n  .grad {\\n    background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\n    background-repeat: no-repeat;\\n    background-size: 100%;\\n    padding-bottom: 25px;\\n  }\\n\\n  .input-group-addon {\\n    box-shadow: 9px 8px 7px #001a33;\\n  }\\n\\n  .required-field {\\n    color: red;\\n    font-weight: bold;\\n  }\\n\\n  .alertRedColor {\\n    color: red;\\n  }\\n\\n  .card-body {\\n    padding: 2rem;\\n  }\\n\\n  .input-group-text i {\\n    width: 1.5rem;\\n  }\\n\\n  .btn-primary,\\n  .btn-success,\\n  .btn-warning {\\n    width: 100%;\\n  }\\n\\n  .form-control {\\n    height: calc(2.25rem + 2px);\\n  }\\n\\n  .form-group {\\n    margin-bottom: 1.5rem;\\n  }\\n\\n  .input-group-prepend .input-group-text {\\n    background-color: #e9ecef;\\n    border: 1px solid #ced4da;\\n  }\\n\\n  .input-group-prepend .input-group-text i {\\n    color: #495057;\\n  }\\n\\n  .row {\\n    margin-left: 0;\\n    margin-right: 0;\\n  }\\n\\n  .textarea-height {\\n    height: 100px;\\n  }\\n\\n  .card {\\n    margin: auto;\\n    max-width: 500px;\\n  }\\n</style>\\n\\n<div class=\\\"container-fluid\\\"\\n  style=\\\"padding: 2% 0; background: url('assets/files/wall.jpg') no-repeat center center; background-attachment: fixed; background-size: cover; width: 100%; height: auto;\\\">\\n  <div class=\\\"row justify-content-center\\\">\\n    <div class=\\\"col-md-6\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-body input-group-addon grad\\\">\\n          <form name=\\\"userForm\\\">\\n            <h2 *ngIf=\\\"!form.data.id\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{ 'Add Inventory' |\\n              translate }}\\n            </h2>\\n            <h2 *ngIf=\\\"form.data.id\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{ 'Update Inventory' |\\n              translate }}\\n            </h2>\\n\\n            <div *ngIf=\\\"!form.error && form.message\\\" class=\\\"alert alert-success alert-dismissible\\\">\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n              {{ form.message }}\\n            </div>\\n\\n            <div *ngIf=\\\"form.error && form.message\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n              {{ form.message }}\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label><b>{{ 'Product' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-flag grey-text\\\"></i></div>\\n                </div>\\n                <select class=\\\"form-control\\\" name=\\\"productId\\\" [(ngModel)]=\\\"form.data.productId\\\"\\n                  aria-label=\\\"ngSelected\\\">\\n                  <option [ngValue]=\\\"undefined\\\">{{ 'Select product' | translate }}</option>\\n                  <option *ngFor=\\\"let obj of form.preload.productList\\\" [value]=\\\"obj.key\\\">{{ obj.value }}</option>\\n                </select>\\n              </div>\\n              <span *ngIf=\\\"form.inputerror.productId\\\" class=\\\"alertRedColor\\\">{{form.inputerror.productId}}</span>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label><b>{{ 'Supplier Name' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i></div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"supplierName\\\" [(ngModel)]=\\\"form.data.supplierName\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{ 'Enter supplierName' | translate }}\\\" (keypress)=\\\"validateAlphabetInput($event)\\\">\\n              </div>\\n              <span *ngIf=\\\"form.inputerror.supplierName\\\" class=\\\"alertRedColor\\\">{{form.inputerror.supplierName}}</span>\\n            </div>\\n\\n\\n            <div class=\\\"form-group\\\">\\n              <label><b>{{ 'Quantity' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-phone grey-text\\\"></i></div>\\n                </div>\\n                <input type=\\\"number\\\" name=\\\"quantity\\\" [(ngModel)]=\\\"form.data.quantity\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{ 'Enter quantity' | translate }}\\\">\\n\\n\\n              </div>\\n              <span *ngIf=\\\"form.inputerror.quantity\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.quantity}}</span>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label><b>{{ 'Last Updated Date' | translate }}</b><span class=\\\"required-field\\\"></span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-calendar-alt grey-text\\\"></i></div>\\n                </div>\\n                <input type=\\\"date\\\" name=\\\"lastUpdatedDate\\\" [value]=\\\"form.data.lastUpdatedDate | date:'yyyy-MM-dd'\\\"\\n                  (input)=\\\"form.data.lastUpdatedDate=parseDate($event.target.value)\\\" class=\\\"form-control\\\" required />\\n              </div>\\n              <span *ngIf=\\\"form.inputerror.lastUpdatedDate\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.lastUpdatedDate\\n                }}</span>\\n            </div>\\n\\n\\n            <div class=\\\"row pt-2 pb-3 justify-content-center\\\">\\n              <div class=\\\"col-md-4\\\">\\n                <button *ngIf=\\\"!form.data.id\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{ 'Save' | translate\\n                  }}</button>\\n              </div>\\n              <div class=\\\"col-md-4\\\">\\n                <button *ngIf=\\\"form.data.id\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{ 'Update' | translate\\n                  }}</button>\\n              </div>\\n              <div class=\\\"col-md-4\\\">\\n                <a class=\\\"btn btn-warning\\\" type=\\\"button\\\" [routerLink]=\\\"['/inventorylist']\\\">{{ 'List' | translate\\n                  }}</a>\\n              </div>\\n            </div>\\n          </form>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { BaseCtl } from '../base.component';\nimport { ServiceLocatorService } from '../service-locator.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-inventory',\n  templateUrl: './inventory.component.html',\n  styleUrls: ['./inventory.component.css']\n})\nexport class InventoryComponent extends BaseCtl {\n\n  getKey = false;\n  selected = null;\n  userForm: FormGroup = null;\n  uploadForm: FormGroup;\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\n    super(locator.endpoints.INVENTORY, locator, route);\n  }\n\n  submit() {\n    var _self = this;\n    console.log('in submit');\n    console.log(this.form);\n    console.log(this.form.data);\n  \n    this.serviceLocator.httpService.post(this.api.save, this.form.data, function (res) {\n      _self.form.message = '';\n      _self.form.inputerror = {}; // Clear input errors here\n  \n      if (res.success) {\n        _self.form.error = false; // Set error to false on success\n        _self.form.message = \"Data is saved\";\n        _self.form.data.id = res.result.data;\n        console.log(_self.form.data.id);\n        console.log(\"----------Chetan----------.\");\n  \n        // Clear form data if needed\n        // _self.form.data = {};\n  \n      } else {\n        _self.form.error = true;\n        if (res.result.inputerror) {\n          _self.form.inputerror = res.result.inputerror;\n        }\n        _self.form.message = res.result.message;\n      }\n      console.log('FORM', _self.form);\n    });\n  }\n\n  submit1() {\n    var _self = this;\n    console.log(this.form + \"submit running start\");\n    console.log(this.form.data + \"form data going to be submit\");\n    this.serviceLocator.httpService.post(this.api.search, this.form.data, function (res) {\n      _self.form.message = '';\n      _self.form.inputerror = {};\n      _self.form.data.id = res.result.data;\n\n\n      if (res.success) {\n        _self.form.message = \"Data is saved\";\n        _self.form.data.id = res.result.data;\n\n\n        console.log(_self.form.data.id);\n        console.log(\"--------------------.\");\n\n      } else {\n        _self.form.error = true;\n        _self.form.inputerror = res.result.inputerror;\n        _self.form.message = res.result.message;\n      }\n      _self.form.data.id = res.result.data;\n      console.log('FORM', _self.form);\n    });\n  }\n\n\n\n\n  onUpload(userform: FormData) {\n    this.submit();\n    console.log(this.form.data.id + '---- after submit');\n\n  }\n\n\n  validateForm(form) {\n    let flag = true;\n    let validator = this.serviceLocator.dataValidator;\n    flag = flag && validator.isNotNullObject(form.productId);\n    console.log(form.productId);\n    flag = flag && validator.isNotNullObject(form.supplierName);\n    console.log(form.supplierName);\n    flag = flag && validator.isNotNullObject(form.quantity);\n    console.log(form.quantity);\n    flag = flag && validator.isNotNullObject(form.lastUpdatedDate);\n    console.log(form.lastUpdatedDate);\n\n    return flag;\n  }\n\n  populateForm(form, data) {\n    form.id = data.id;\n    console.log(form.id + 'populate form in shoppingcomponent');\n    form.supplierName = data.supplierName;\n    form.quantity = data.quantity;\n    form.lastUpdatedDate = data.lastUpdatedDate;\n    form.productId = data.productId;\n\n\n  }\n\n  validatePhone(event: KeyboardEvent) {\n    const input = event.key;\n    // Check if the input is a number or backspace\n    if ((isNaN(Number(input)) && input !== 'Backspace') || (input === ' ')) {\n      event.preventDefault();\n    }\n    // Limit the input to 10 characters\n    if (this.form.data.phone && this.form.data.phone.length >= 10 && input !== 'Backspace') {\n      event.preventDefault();\n    }\n  }\n\n\n  validateAlphabetInput(event) {\n    const charCode = event.which || event.keyCode;\n    const charStr = String.fromCharCode(charCode);\n\n    // Regular expression to test if the character is a letter\n    if (!/^[a-zA-Z]+$/.test(charStr)) {\n      event.preventDefault();\n    }\n  }\n\n\n\n  parseDate(dateString: string): Date {\n    if (dateString) {\n      return new Date(dateString);\n    }\n    return null;\n  }\n  test() {\n\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ludmVudG9yeS9pbnZlbnRvcnlsaXN0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<app-navbar></app-navbar>\\n\\n<style>\\n  #nnn {\\n    background: none;\\n    border: none;\\n    cursor: pointer;\\n  }\\n\\n  .panel-heading {\\n    height: 50px;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n  }\\n\\n  .search-inputs {\\n    margin-top: 20px;\\n  }\\n\\n  .search-inputs .form-control,\\n  .search-inputs .btn {\\n    margin-bottom: 10px;\\n  }\\n\\n  .content-wrapper {\\n    background: url(assets/files/wall.jpg) no-repeat center center;\\n    background-attachment: fixed;\\n    background-size: cover;\\n    width: auto;\\n    height: 105vh;\\n    padding: 20px;\\n  }\\n\\n  .table-responsive {\\n    margin-top: 20px;\\n  }\\n</style>\\n\\n<div class=\\\"content-wrapper\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"panel panel-primary\\\">\\n      <div class=\\\"panel-heading\\\">\\n        <h1 class=\\\"text-primary font-weight-bold\\\">{{ 'Inevntory List' | translate }}</h1>\\n      </div>\\n\\n      <div class=\\\"row search-inputs justify-content-center\\\">\\n        <div class=\\\"col-md-3\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.supplierName\\\"\\n            placeholder=\\\"{{ 'Search supplier Name' | translate }}\\\" (input)=\\\"validateInput($event, 'name')\\\">\\n          <div *ngIf=\\\"!isValidNameInput\\\" class=\\\"text-danger\\\">{{ nameErrorMessage }}</div>\\n        </div>\\n        <!--  <div class=\\\"col-md-3\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.mobile\\\"\\n            placeholder=\\\"{{ 'Search mobile' | translate }}\\\" (input)=\\\"validateInput($event, 'mobile')\\\">\\n          <div *ngIf=\\\"!isValidMobileInput\\\" class=\\\"text-danger\\\">{{ mobileErrorMessage }}</div>\\n        </div> -->\\n\\n        <div class=\\\"col-md-3\\\">\\n          <input type=\\\"date\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.lastUpdatedDate\\\"\\n            (ngModelChange)=\\\"formatDate($event)\\\" placeholder=\\\"{{ 'Search lastUpdatedDate' | translate }}\\\">\\n        </div>\\n\\n        <div class=\\\"col-md-3\\\">\\n          <input type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.quantity\\\"\\n            placeholder=\\\"{{ 'Search quantity' | translate }}\\\">\\n        </div>\\n\\n\\n        <div class=\\\"col-md-3\\\">\\n          <select class=\\\"form-control\\\" name=\\\"productId\\\" [(ngModel)]=\\\"form.searchParams.productId\\\">\\n            <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{ 'Select product' | translate }}</option>\\n            <option *ngFor=\\\"let obj of form.preload.productList\\\" [value]=\\\"obj.key\\\">{{ obj.value }}</option>\\n          </select>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"row mt-2 justify-content-center\\\">\\n        <div class=\\\"col-md-2\\\">\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary btn-block\\\">{{ 'Search' | translate }}</button>\\n        </div>\\n        <div class=\\\"col-md-2\\\">\\n          <button (click)=\\\"forward('/inventory')\\\" type=\\\"button\\\" class=\\\"btn btn-success btn-block\\\">{{ 'Add Inventory' |\\n            translate }}</button>\\n        </div>\\n        <div class=\\\"col-md-2\\\">\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger btn-block\\\">{{ 'Delete' | translate }}</button>\\n        </div>\\n      </div>\\n\\n      <div *ngIf=\\\"form.error || form.message\\\" class=\\\"row mt-2 justify-content-center\\\">\\n        <div class=\\\"col-md-6\\\">\\n          <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{ form.message }}\\n          </div>\\n          <div *ngIf=\\\"!form.error && form.message\\\" class=\\\"alert alert-success alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{ form.message }}\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"table-responsive mt-3\\\">\\n        <table class=\\\"table table-bordered table-hover font-weight-bold text-dark\\\">\\n          <thead class=\\\"thead-dark text-uppercase\\\">\\n            <tr align=\\\"center\\\">\\n              <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" name=\\\"list_name\\\"\\n                  (change)=\\\"checkUncheckAll($event)\\\" /></th>\\n              <th>{{ 'S.No' }}</th>\\n              <th>{{ 'supplier name' }}</th>\\n              <th>{{ 'quantity' }}</th>\\n              <th>{{ 'last updated date' }}</th>\\n              <th>{{ 'product' }}</th>\\n              <th>{{ 'Edit' }}</th>\\n            </tr>\\n          </thead>\\n          <tbody>\\n            <tr *ngFor=\\\"let m of form.list; let i = index\\\" align=\\\"center\\\">\\n              <td><input type=\\\"checkbox\\\" #checkboxes (change)=\\\"checklistUpdate()\\\" name=\\\"list_name\\\" [id]=\\\"m.id\\\" /></td>\\n              <td>{{ (form.pageNo * 5) + i + 1 }}</td>\\n              <td>{{ m.supplierName }}</td>\\n              <td>{{ m.quantity }}</td>\\n              <td>{{ convertToLocalDate(m.lastUpdatedDate) }}</td>\\n              <td>{{ m.productName }}</td>\\n              <td>\\n                <button class=\\\"fa fa-edit text-primary\\\" id=\\\"nnn\\\" (click)=\\\"forward('/inventory/' + m.id)\\\"></button>\\n              </td>\\n            </tr>\\n          </tbody>\\n        </table>\\n      </div>\\n\\n      <div class=\\\"d-flex justify-content-between mt-3\\\">\\n        <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\">{{ 'Previous' | translate\\n          }}</button>\\n        <div *ngIf=\\\"form.list.length == 0\\\">\\n          <a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/inventorylist']\\\" (click)=\\\"exit()\\\">{{ 'Back' |\\n            translate }}</a>\\n        </div>\\n        <button (click)=\\\"next()\\\" [disabled]=\\\"nextList == 0\\\" class=\\\"btn btn-info\\\">{{ 'Next' | translate }}</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\nimport { BaseListCtl } from '../base-list.component';\nimport { ServiceLocatorService } from '../service-locator.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-inventorylist',\n  templateUrl: './inventorylist.component.html',\n  styleUrls: ['./inventorylist.component.css']\n})\nexport class InventorylistComponent extends BaseListCtl implements OnInit {\n\n  public form = {\n    error: false,\n    message: null,\n    preload: [],\n    data: { id: null },\n    inputerror: {},\n    searchParams: {\n\n      name: '',\n      mobile: '',\n      date: '', // Initialize date field\n      dateOfJoining: '',\n      experienceId: ''\n    },\n    searchMessage: null,\n    list: [],\n    pageNo: 0\n  };\n\n  isValidMobileInput: boolean = true;\n  isValidNameInput: boolean = true;\n  nameErrorMessage: string = '';\n  mobileErrorMessage: string = '';\n\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\n    super(locator.endpoints.INVENTORY, locator, route);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n  }\n\n  // Format date function\n  formatDate(event: any) {\n    const selectedDate = new Date(event);\n    const formattedDate = selectedDate.toISOString().split('T')[0];\n    this.form.searchParams.date = formattedDate;\n  }\n\n  // Convert date to local format for display\n  convertToLocalDate(dateString: string): string {\n    const date = new Date(dateString);\n    // Format date to 'MM/DD/YYYY'\n    const options = { year: 'numeric', month: '2-digit', day: '2-digit' };\n    return date.toLocaleDateString(undefined, options);\n  }\n\n  // Validate input for name and mobile fields\n  validateInput(event: any, field: string) {\n    const value = event.target.value;\n    if (field === 'mobile') {\n      this.isValidMobileInput = /^[0-9]*$/.test(value); // Check if the input contains only numbers\n      if (!this.isValidMobileInput) {\n        this.mobileErrorMessage = 'Please type numbers only';\n      } else {\n        this.mobileErrorMessage = '';\n      }\n    } else if (field === 'name') {\n      this.isValidNameInput = /^[A-Za-z\\s]*$/.test(value); // Check if the input contains only letters and spaces\n      if (!this.isValidNameInput) {\n        this.nameErrorMessage = 'Please type alphabets only';\n      } else {\n        this.nameErrorMessage = '';\n      }\n    }\n  }\n\n\n  // Submit method\n  submit() {\n    // Reset page number before searching\n    this.form.pageNo = 0;\n    // Call the search method after formatting the date\n    this.search();\n  }\n\n\n  // Search method\n  search() {\n    // Clear previous search message\n    this.form.searchMessage = null;\n    // Perform the search operation with the search parameters\n    super.search();\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2lzc3VlL2lzc3VlLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<app-navbar></app-navbar>\\n\\n<style>\\n  .grad {\\n    background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\n    background-repeat: no-repeat;\\n    background-size: 100%;\\n    padding-bottom: 25px;\\n  }\\n\\n  .input-group-addon {\\n    box-shadow: 9px 8px 7px #001a33;\\n  }\\n\\n  .required-field {\\n    color: red;\\n    font-weight: bold;\\n  }\\n\\n  .alertRedColor {\\n    color: red;\\n  }\\n\\n  .card-body {\\n    padding: 2rem;\\n  }\\n\\n  .input-group-text i {\\n    width: 1.5rem;\\n  }\\n\\n  .btn-primary,\\n  .btn-success,\\n  .btn-warning {\\n    width: 100%;\\n  }\\n\\n  .form-control {\\n    height: calc(2.25rem + 2px);\\n  }\\n\\n  .form-group {\\n    margin-bottom: 1.5rem;\\n  }\\n\\n  .input-group-prepend .input-group-text {\\n    background-color: #e9ecef;\\n    border: 1px solid #ced4da;\\n  }\\n\\n  .input-group-prepend .input-group-text i {\\n    color: #495057;\\n  }\\n\\n  .row {\\n    margin-left: 0;\\n    margin-right: 0;\\n  }\\n\\n  .textarea-height {\\n    height: 100px;\\n  }\\n\\n  .card {\\n    margin: auto;\\n    max-width: 500px;\\n  }\\n\\n  .container-fluid {\\n    padding: 2% 0;\\n    background: url('assets/files/wall.jpg') no-repeat center center;\\n    background-attachment: fixed;\\n    background-size: cover;\\n    width: 100%;\\n    height: auto;\\n  }\\n</style>\\n\\n<div class=\\\"container-fluid\\\">\\n  <div class=\\\"row justify-content-center\\\">\\n    <div class=\\\"col-md-6\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-body input-group-addon grad\\\">\\n          <form name=\\\"userForm\\\">\\n            <h2 *ngIf=\\\"!form.data.id\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{ 'Add Issue' | translate }}\\n            </h2>\\n            <h2 *ngIf=\\\"form.data.id\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{ 'Update Issue' | translate }}\\n            </h2>\\n\\n            <div *ngIf=\\\"!form.error && form.message == 'Data is saved'\\\" class=\\\"alert alert-success alert-dismissible\\\">\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n              {{ form.message }}\\n            </div>\\n\\n            <div *ngIf=\\\"form.error && form.message\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n              {{ form.message }}\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label><b>{{ 'StatusId' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-flag grey-text\\\"></i></div>\\n                </div>\\n                <select class=\\\"form-control\\\" name=\\\"statusId\\\" [(ngModel)]=\\\"form.data.statusId\\\" aria-label=\\\"ngSelected\\\">\\n                  <option [ngValue]=\\\"undefined\\\">{{ 'Select status' | translate }}</option>\\n                  <option *ngFor=\\\"let obj of form.preload.statusList\\\" [value]=\\\"obj.key\\\">{{ obj.value }}</option>\\n                </select>\\n              </div>\\n              <span *ngIf=\\\"form.inputerror.statusId\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.statusId }}</span>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label><b>{{ 'Title' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fas fa-heading\\\"></i></div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"title\\\" [(ngModel)]=\\\"form.data.title\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{ 'Enter title' | translate }}\\\" (keypress)=\\\"validateAlphabetInput($event)\\\">\\n              </div>\\n              <span *ngIf=\\\"form.inputerror.title\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.title }}</span>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label><b>{{ 'Description' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-align-left grey-text\\\"></i></div>\\n                </div>\\n                <textarea name=\\\"description\\\" [(ngModel)]=\\\"form.data.description\\\" class=\\\"form-control textarea-height\\\"\\n                  placeholder=\\\"{{ 'Enter description' | translate }}\\\"></textarea>\\n              </div>\\n              <span *ngIf=\\\"form.inputerror.description\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.description }}</span>\\n            </div>\\n\\n\\n\\n            <div class=\\\"form-group\\\">\\n              <label><b>{{ 'Assign To' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i></div>\\n                </div>\\n                <select class=\\\"form-control\\\" name=\\\"assignTo\\\" id=\\\"assignTo\\\" [(ngModel)]=\\\"form.data.assignTo\\\"\\n                  style=\\\"cursor: pointer;\\\">\\n                  <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{'Please select' | translate }}</option>\\n                  <option value=\\\"Males\\\">{{'Male' | translate }} </option>\\n                  <option value=\\\"Female\\\">{{'Female' | translate }} </option>\\n                  <option value=\\\"Others\\\">{{'Others' | translate }} </option>\\n                </select>\\n              </div>\\n              <span *ngIf=\\\"form.inputerror.assignTo\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.assignTo }}</span>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label><b>{{ 'Open Date' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"far fa-calendar-alt\\\"></i></div>\\n                </div>\\n                <input type=\\\"date\\\" name=\\\"openDate\\\" [value]=\\\"form.data.openDate | date:'yyyy-MM-dd'\\\"\\n                  (input)=\\\"form.data.openDate=parseDate($event.target.value)\\\" class=\\\"form-control\\\" required />\\n              </div>\\n              <span *ngIf=\\\"form.inputerror.openDate\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.openDate }}</span>\\n            </div>\\n\\n            <div class=\\\"row pt-2 pb-3 justify-content-center\\\">\\n              <div class=\\\"col-md-4\\\">\\n                <button *ngIf=\\\"!form.data.id\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{ 'Save' | translate\\n                  }}</button>\\n              </div>\\n              <div class=\\\"col-md-4\\\">\\n                <button *ngIf=\\\"form.data.id\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{ 'Update' | translate\\n                  }}</button>\\n              </div>\\n              <div class=\\\"col-md-4\\\">\\n                <a class=\\\"btn btn-warning\\\" type=\\\"button\\\" [routerLink]=\\\"['/issuelist']\\\">{{ 'List' | translate }}</a>\\n              </div>\\n            </div>\\n          </form>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { BaseCtl } from '../base.component';\nimport { ServiceLocatorService } from '../service-locator.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-issue',\n  templateUrl: './issue.component.html',\n  styleUrls: ['./issue.component.css']\n})\nexport class IssueComponent extends BaseCtl {\n\n  getKey = false;\n  selected = null;\n  userForm: FormGroup = null;\n  uploadForm: FormGroup;\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\n    super(locator.endpoints.ISSUE, locator, route);\n  }\n\n  submit() {\n    var _self = this;\n    console.log('in submit');\n    console.log(this.form);\n    console.log(this.form.data);\n\n    this.serviceLocator.httpService.post(this.api.save, this.form.data, function (res) {\n      _self.form.message = '';\n      _self.form.inputerror = {}; // Clear input errors here\n\n      if (res.success) {\n        _self.form.error = false; // Set error to false on success\n        _self.form.message = \"Data is saved\";\n        _self.form.data.id = res.result.data;\n        console.log(_self.form.data.id);\n        console.log(\"----------Chetan----------.\");\n\n        // Clear form data if needed\n        // _self.form.data = {};\n\n      } else {\n        _self.form.error = true;\n        if (res.result.inputerror) {\n          _self.form.inputerror = res.result.inputerror;\n        }\n        _self.form.message = res.result.message;\n      }\n      console.log('FORM', _self.form);\n    });\n  }\n\n\n\n  submit1() {\n    var _self = this;\n    console.log(this.form + \"submit running start\");\n    console.log(this.form.data + \"form data going to be submit\");\n    this.serviceLocator.httpService.post(this.api.search, this.form.data, function (res) {\n      _self.form.message = '';\n      _self.form.inputerror = {};\n      _self.form.data.id = res.result.data;\n\n\n      if (res.success) {\n        _self.form.message = \"Data is saved\";\n        _self.form.data.id = res.result.data;\n\n\n        console.log(_self.form.data.id);\n        console.log(\"--------------------.\");\n\n      } else {\n        _self.form.error = true;\n        _self.form.inputerror = res.result.inputerror;\n        _self.form.message = res.result.message;\n      }\n      _self.form.data.id = res.result.data;\n      console.log('FORM', _self.form);\n    });\n  }\n\n\n\n\n  onUpload(userform: FormData) {\n    this.submit();\n    console.log(this.form.data.id + '---- after submit');\n\n  }\n\n  validatePaymentTerm() {\n    const paymentTerm = this.form.data.paymentTerm;\n    const paymentTermPattern = /^[a-zA-Z ]*$/; // Only allows alphabetic characters and spaces\n    if (!paymentTermPattern.test(paymentTerm)) {\n      this.form.inputerror.paymentTerm = 'Invalid payment term';\n    } else {\n      delete this.form.inputerror.paymentTerm;\n    }\n  }\n\n\n  validateForm(form) {\n    let flag = true;\n    let validator = this.serviceLocator.dataValidator;\n    flag = flag && validator.isNotNullObject(form.statusId);\n    console.log(form.statusId);\n    flag = flag && validator.isNotNullObject(form.title);\n    console.log(form.title);\n    flag = flag && validator.isNotNullObject(form.assignTo);\n    console.log(form.assignTo);\n    flag = flag && validator.isNotNullObject(form.openDate);\n    console.log(form.openDate);\n    flag = flag && validator.isNotNullObject(form.description);\n    console.log(form.description);\n\n    return flag;\n  }\n\n  populateForm(form, data) {\n    form.id = data.id;\n    console.log(form.id + 'populate form in shoppingcomponent');\n    form.title = data.title;\n    form.description = data.description;\n    form.openDate = data.openDate;\n    form.statusId = data.statusId;\n    form.assignTo = data.assignTo;\n\n\n  }\n\n  validatePhone(event: KeyboardEvent) {\n    const input = event.key;\n    // Check if the input is a number or backspace\n    if ((isNaN(Number(input)) && input !== 'Backspace') || (input === ' ')) {\n      event.preventDefault();\n    }\n    // Limit the input to 10 characters\n    if (this.form.data.phone && this.form.data.phone.length >= 10 && input !== 'Backspace') {\n      event.preventDefault();\n    }\n  }\n\n  validateAlphabetInput(event) {\n    const charCode = event.which || event.keyCode;\n    const charStr = String.fromCharCode(charCode);\n\n    // Regular expression to test if the character is a letter\n    const letterRegex = /^[a-zA-Z\\s]+$/;\n\n    // Test if the input matches the allowed characters\n    if (!letterRegex.test(charStr)) {\n      event.preventDefault();\n    }\n\n    // Optionally, check the entire value against the name format regex\n    const inputElement = event.target;\n    const inputValue = inputElement.value + charStr; // Add the current character to the input value\n\n    // Regex for valid name format \"FirstName LastName\"\n    const nameRegex = /^[A-Z][a-z]+ [A-Z][a-z]+$/;\n\n    // Check if the current value matches the valid name format\n    if (!nameRegex.test(inputValue)) {\n      // Handle invalid input (e.g., disable submit button, show error message)\n      // Example:\n      inputElement.classList.add('invalid'); // Apply CSS class for invalid input\n    } else {\n      inputElement.classList.remove('invalid'); // Remove invalid CSS class if format is valid\n    }\n  }\n\n\n\n\n  parseDate(dateString: string): Date {\n    if (dateString) {\n      return new Date(dateString);\n    }\n    return null;\n  }\n  test() {\n\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2lzc3VlL2lzc3VlbGlzdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-navbar></app-navbar>\\n\\n<style>\\n  #nnn {\\n    background: none;\\n    border: none;\\n    cursor: pointer;\\n  }\\n\\n  .panel-heading {\\n    height: 50px;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n  }\\n\\n  .search-inputs {\\n    margin-top: 20px;\\n  }\\n\\n  .search-inputs .form-control,\\n  .search-inputs .btn {\\n    margin-bottom: 10px;\\n  }\\n\\n  .content-wrapper {\\n    background: url(assets/files/wall.jpg) no-repeat center center;\\n    background-attachment: fixed;\\n    background-size: cover;\\n    width: 100%;\\n    min-height: 100vh;\\n    padding: 20px;\\n  }\\n\\n  .table-responsive {\\n    margin-top: 20px;\\n  }\\n\\n  .btn-block {\\n    display: block;\\n    width: 100%;\\n  }\\n\\n  .alert-dismissible .close {\\n    position: absolute;\\n    top: 0;\\n    right: 0;\\n    padding: 1.25rem 1.5rem;\\n    color: inherit;\\n  }\\n</style>\\n\\n<div class=\\\"content-wrapper\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"panel panel-primary\\\">\\n      <div class=\\\"panel-heading\\\">\\n        <h1 class=\\\"text-primary font-weight-bold\\\">{{ 'Issue List' | translate }}</h1>\\n      </div>\\n\\n      <div class=\\\"row search-inputs justify-content-center\\\">\\n        <div class=\\\"col-md-3\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.title\\\"\\n            placeholder=\\\"{{ 'Search title' | translate }}\\\" (input)=\\\"validateInput($event, 'title')\\\">\\n          <div *ngIf=\\\"!isValidNameInput\\\" class=\\\"text-danger\\\">{{ nameErrorMessage }}</div>\\n        </div>\\n\\n        <div class=\\\"col-md-3\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.description\\\"\\n            placeholder=\\\"{{ 'Search description' | translate }}\\\">\\n        </div>\\n\\n        <div class=\\\"col-md-3\\\">\\n          <select class=\\\"form-control\\\" name=\\\"assignTo\\\" id=\\\"assignTo\\\" [(ngModel)]=\\\"form.searchParams.assignTo\\\"\\n            style=\\\"cursor: pointer;\\\">\\n            <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{'Please select' | translate }}</option>\\n            <option value=\\\"Male\\\">{{'Male' | translate }} </option>\\n            <option value=\\\"Female\\\">{{'Female' | translate }} </option>\\n            <option value=\\\"Others\\\">{{'Others' | translate }} </option>\\n          </select>\\n        </div>\\n\\n        <div class=\\\"col-md-3\\\">\\n          <input type=\\\"date\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.openDate\\\"\\n            (ngModelChange)=\\\"formatDate($event)\\\" placeholder=\\\"{{ 'Search openDate' | translate }}\\\">\\n        </div>\\n\\n        <div class=\\\"col-md-3\\\">\\n          <select class=\\\"form-control\\\" name=\\\"statusId\\\" [(ngModel)]=\\\"form.searchParams.statusId\\\">\\n            <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{ 'Select statusId' | translate }}</option>\\n            <option *ngFor=\\\"let obj of form.preload.statusList\\\" [value]=\\\"obj.key\\\">{{ obj.value }}</option>\\n          </select>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"row mt-2 justify-content-center\\\">\\n        <div class=\\\"col-md-2\\\">\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary btn-block\\\">{{ 'Search' | translate }}</button>\\n        </div>\\n        <div class=\\\"col-md-2\\\">\\n          <button (click)=\\\"forward('/issue')\\\" type=\\\"button\\\" class=\\\"btn btn-success btn-block\\\">{{ 'Add Issue' |\\n            translate }}</button>\\n        </div>\\n        <div class=\\\"col-md-2\\\">\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger btn-block\\\">{{ 'Delete' | translate }}</button>\\n        </div>\\n      </div>\\n\\n      <div *ngIf=\\\"form.error || form.message\\\" class=\\\"row mt-2 justify-content-center\\\">\\n        <div class=\\\"col-md-6\\\">\\n          <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{ form.message }}\\n          </div>\\n          <div *ngIf=\\\"!form.error && form.message\\\" class=\\\"alert alert-success alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{ form.message }}\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"table-responsive mt-3\\\">\\n        <table class=\\\"table table-bordered table-hover font-weight-bold text-dark\\\">\\n          <thead class=\\\"thead-dark text-uppercase\\\">\\n            <tr align=\\\"center\\\">\\n              <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" name=\\\"list_name\\\"\\n                  (change)=\\\"checkUncheckAll($event)\\\" /></th>\\n              <th>{{ 'S.No' }}</th>\\n              <th>{{ 'title' }}</th>\\n              <th>{{ 'description' }}</th>\\n              <th>{{ 'open date' }}</th>\\n              <th>{{ 'status' }}</th>\\n              <th>{{ 'assign to' }}</th>\\n              <th>{{ 'Edit' }}</th>\\n            </tr>\\n          </thead>\\n          <tbody>\\n            <tr *ngFor=\\\"let m of form.list; let i = index\\\" align=\\\"center\\\">\\n              <td><input type=\\\"checkbox\\\" #checkboxes (change)=\\\"checklistUpdate()\\\" name=\\\"list_name\\\" [id]=\\\"m.id\\\" /></td>\\n              <td>{{ (form.pageNo * 5) + i + 1 }}</td>\\n              <td>{{ m.title }}</td>\\n              <td>{{ m.description }}</td>\\n              <td>{{ convertToLocalDate(m.openDate) }}</td>\\n              <td>{{ m.statusName }}</td>\\n              <td>{{ m.assignTo }}</td>\\n              <td>\\n                <button class=\\\"fa fa-edit text-primary\\\" id=\\\"nnn\\\" (click)=\\\"forward('/issue/' + m.id)\\\"></button>\\n              </td>\\n            </tr>\\n          </tbody>\\n        </table>\\n      </div>\\n\\n      <div class=\\\"d-flex justify-content-between mt-3\\\">\\n        <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\">{{ 'Previous' | translate\\n          }}</button>\\n        <div *ngIf=\\\"form.list.length == 0\\\">\\n          <a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/issuelist']\\\" (click)=\\\"exit()\\\">{{ 'Back' |\\n            translate }}</a>\\n        </div>\\n        <button (click)=\\\"next()\\\" [disabled]=\\\"nextList == 0\\\" class=\\\"btn btn-info\\\">{{ 'Next' | translate }}</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<app-footer></app-footer>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { BaseListCtl } from '../base-list.component';\nimport { ServiceLocatorService } from '../service-locator.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-issuelist',\n  templateUrl: './issuelist.component.html',\n  styleUrls: ['./issuelist.component.css']\n})\nexport class IssuelistComponent extends BaseListCtl implements OnInit {\n\n  public form = {\n    error: false,\n    message: null,\n    preload: [],\n    data: { id: null },\n    inputerror: {},\n    searchParams: {\n      title: '',\n      description: '',\n      date: '', // Initialize date field\n      openDate: '',\n      statusId: '',\n      assignTo:''\n    },\n    searchMessage: null,\n    list: [],\n    pageNo: 0\n  };\n\n  isValidMobileInput: boolean = true;\n  isValidNameInput: boolean = true;\n  isValidAllowedSpeed: boolean = true;\n  nameErrorMessage: string = '';\n  mobileErrorMessage: string = '';\n  allowedSpeedErrorMessage: string = '';\n\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\n    super(locator.endpoints.ISSUE, locator, route);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n  }\n\n  // Format date function\n  formatDate(event: any) {\n    const selectedDate = new Date(event);\n    const formattedDate = selectedDate.toISOString().split('T')[0];\n    this.form.searchParams.date = formattedDate;\n  }\n\n  // Convert date to local format for display\n  convertToLocalDate(dateString: string): string {\n    const date = new Date(dateString);\n    const options = { year: 'numeric', month: '2-digit', day: '2-digit' };\n    return date.toLocaleDateString(undefined, options);\n  }\n\n  // Validate input for name, mobile, and allowedSpeed fields\n  validateInput(event: any, field: string) {\n    const value = event.target.value;\n    if (field === 'mobile') {\n      this.isValidMobileInput = /^[0-9]*$/.test(value); // Check if the input contains only numbers\n      if (!this.isValidMobileInput) {\n        this.mobileErrorMessage = 'Please type numbers only';\n      } else {\n        this.mobileErrorMessage = '';\n      }\n    } else if (field === 'name') {\n      this.isValidNameInput = /^[A-Za-z\\s]*$/.test(value); // Check if the input contains only letters and spaces\n      if (!this.isValidNameInput) {\n        this.nameErrorMessage = 'Please type alphabets only';\n      } else {\n        this.nameErrorMessage = '';\n      }\n    } else if (field === 'allowedSpeed') {\n      if (value === '') {\n        this.isValidAllowedSpeed = true; // Treat empty input as valid\n        this.allowedSpeedErrorMessage = '';\n      } else {\n        const speed = parseInt(value, 10);\n        this.isValidAllowedSpeed = speed >= 70 && speed <= 150; // Check if the input is between 70 and 150\n        if (!this.isValidAllowedSpeed) {\n          this.allowedSpeedErrorMessage = 'Please type a valid allowed speed (70-150)';\n        } else {\n          this.allowedSpeedErrorMessage = '';\n        }\n      }\n    }\n  }\n\n  // Submit method\n  submit() {\n    // Reset page number before searching\n    this.form.pageNo = 0;\n    // Call the search method after formatting the date\n    this.search();\n  }\n\n  // Search method\n  search() {\n    // Clear previous search message\n    this.form.searchMessage = null;\n    // Perform the search operation with the search parameters\n    super.search();\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2pvYi9qb2IuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<app-navbar></app-navbar>\\n\\n<style>\\n  .grad {\\n    background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\n    background-repeat: no-repeat;\\n    background-size: 100%;\\n    padding-bottom: 25px;\\n  }\\n\\n  .input-group-addon {\\n    box-shadow: 9px 8px 7px #001a33;\\n  }\\n\\n  .required-field {\\n    color: red;\\n    font-weight: bold;\\n  }\\n\\n  .alertRedColor {\\n    color: red;\\n  }\\n\\n  .card-body {\\n    padding: 2rem;\\n  }\\n\\n  .input-group-text i {\\n    width: 1.5rem;\\n  }\\n\\n  .btn-primary,\\n  .btn-success,\\n  .btn-warning {\\n    width: 100%;\\n  }\\n\\n  .form-control {\\n    height: calc(2.25rem + 2px);\\n  }\\n\\n  .form-group {\\n    margin-bottom: 1.5rem;\\n  }\\n\\n  .input-group-prepend .input-group-text {\\n    background-color: #e9ecef;\\n    border: 1px solid #ced4da;\\n  }\\n\\n  .input-group-prepend .input-group-text i {\\n    color: #495057;\\n  }\\n\\n  .row {\\n    margin-left: 0;\\n    margin-right: 0;\\n  }\\n\\n  .textarea-height {\\n    height: 100px;\\n  }\\n\\n  .card {\\n    margin: auto;\\n    max-width: 500px;\\n  }\\n</style>\\n\\n<div class=\\\"container-fluid\\\" style=\\\"padding: 2% 0; background: url('assets/files/wall.jpg') no-repeat center center; background-attachment: fixed; background-size: cover; width: 100%; height: auto;\\\">\\n  <div class=\\\"row justify-content-center\\\">\\n    <div class=\\\"col-md-6\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-body input-group-addon grad\\\">\\n          <form name=\\\"userForm\\\">\\n            <h2 *ngIf=\\\"!form.data.id\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{ 'Add Job' | translate }}</h2>\\n            <h2 *ngIf=\\\"form.data.id\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{ 'Update Job' | translate }}</h2>\\n\\n            <div *ngIf=\\\"!form.error && form.message == 'Data is saved'\\\" class=\\\"alert alert-success alert-dismissible\\\">\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n              {{ form.message }}\\n            </div>\\n\\n            <div *ngIf=\\\"form.error && form.message\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n              {{ form.message }}\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label><b>{{ 'Status' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fas fa-flag\\\"></i></div>\\n                </div>\\n                <select class=\\\"form-control\\\" name=\\\"statusId\\\" [(ngModel)]=\\\"form.data.statusId\\\" aria-label=\\\"ngSelected\\\">\\n                  <option [ngValue]=\\\"undefined\\\">{{ 'Select status' | translate }}</option>\\n                  <option *ngFor=\\\"let obj of form.preload.statusList\\\" [value]=\\\"obj.key\\\">{{ obj.value }}</option>\\n                </select>\\n              </div>\\n              <span *ngIf=\\\"form.inputerror.categoryId\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.categoryId }}</span>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label><b>{{ 'Title' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fas fa-user\\\"></i></div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"title\\\" [(ngModel)]=\\\"form.data.title\\\" class=\\\"form-control\\\" placeholder=\\\"{{ 'Enter title' | translate }}\\\" (keypress)=\\\"validateAlphabetInput($event)\\\">\\n              </div>\\n              <span *ngIf=\\\"form.inputerror.title\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.title }}</span>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label><b>{{ 'Experience(In years)' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fas fa-money-bill-wave\\\"></i></div>\\n                </div>\\n                <input type=\\\"number\\\" name=\\\"experience\\\" [(ngModel)]=\\\"form.data.experience\\\" class=\\\"form-control\\\" placeholder=\\\"{{ 'Enter experience' | translate }}\\\">\\n              </div>\\n              <span *ngIf=\\\"form.inputerror.experience\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.experience }}</span>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label><b>{{ 'Date Of Opening' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"far fa-calendar-alt\\\"></i></div>\\n                </div>\\n                <input type=\\\"date\\\" name=\\\"dateOfOpening\\\" [value]=\\\"form.data.dateOfOpening | date:'yyyy-MM-dd'\\\" (input)=\\\"form.data.dateOfOpening=parseDate($event.target.value)\\\" class=\\\"form-control\\\" required />\\n              </div>\\n              <span *ngIf=\\\"form.inputerror.dateOfOpening\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.dateOfOpening }}</span>\\n            </div>\\n\\n            <div class=\\\"row pt-2 pb-3 justify-content-center\\\">\\n              <div class=\\\"col-md-4\\\">\\n                <button *ngIf=\\\"!form.data.id\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{ 'Save' | translate }}</button>\\n              </div>\\n              <div class=\\\"col-md-4\\\">\\n                <button *ngIf=\\\"form.data.id\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{ 'Update' | translate }}</button>\\n              </div>\\n              <div class=\\\"col-md-4\\\">\\n                <a class=\\\"btn btn-warning\\\" type=\\\"button\\\" [routerLink]=\\\"['/joblist']\\\">{{ 'List' | translate }}</a>\\n              </div>\\n            </div>\\n          </form>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<app-footer></app-footer>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { BaseCtl } from '../base.component';\nimport { ServiceLocatorService } from '../service-locator.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-job',\n  templateUrl: './job.component.html',\n  styleUrls: ['./job.component.css']\n})\nexport class JobComponent extends BaseCtl {\n\n  getKey = false;\n  selected = null;\n  userForm: FormGroup = null;\n  uploadForm: FormGroup;\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\n    super(locator.endpoints.JOB, locator, route);\n  }\n\n  submit() {\n    var _self = this;\n    console.log('in submit');\n    console.log(this.form);\n    console.log(this.form.data);\n  \n    this.serviceLocator.httpService.post(this.api.save, this.form.data, function (res) {\n      _self.form.message = '';\n      _self.form.inputerror = {}; // Clear input errors here\n  \n      if (res.success) {\n        _self.form.error = false; // Set error to false on success\n        _self.form.message = \"Data is saved\";\n        _self.form.data.id = res.result.data;\n        console.log(_self.form.data.id);\n        console.log(\"----------Chetan----------.\");\n  \n        // Clear form data if needed\n        // _self.form.data = {};\n  \n      } else {\n        _self.form.error = true;\n        if (res.result.inputerror) {\n          _self.form.inputerror = res.result.inputerror;\n        }\n        _self.form.message = res.result.message;\n      }\n      console.log('FORM', _self.form);\n    });\n  }\n  \n  \n\n  submit1() {\n    var _self = this;\n    console.log(this.form + \"submit running start\");\n    console.log(this.form.data + \"form data going to be submit\");\n    this.serviceLocator.httpService.post(this.api.search, this.form.data, function (res) {\n      _self.form.message = '';\n      _self.form.inputerror = {};\n      _self.form.data.id = res.result.data;\n\n\n      if (res.success) {\n        _self.form.message = \"Data is saved\";\n        _self.form.data.id = res.result.data;\n\n\n        console.log(_self.form.data.id);\n        console.log(\"--------------------.\");\n\n      } else {\n        _self.form.error = true;\n        _self.form.inputerror = res.result.inputerror;\n        _self.form.message = res.result.message;\n      }\n      _self.form.data.id = res.result.data;\n      console.log('FORM', _self.form);\n    });\n  }\n\n\n\n\n  onUpload(userform: FormData) {\n    this.submit();\n    console.log(this.form.data.id + '---- after submit');\n\n  }\n\n  validatePaymentTerm() {\n    const paymentTerm = this.form.data.paymentTerm;\n    const paymentTermPattern = /^[a-zA-Z ]*$/; // Only allows alphabetic characters and spaces\n    if (!paymentTermPattern.test(paymentTerm)) {\n      this.form.inputerror.paymentTerm = 'Invalid payment term';\n    } else {\n      delete this.form.inputerror.paymentTerm;\n    }\n  }\n\n\n  validateForm(form) {\n    let flag = true;\n    let validator = this.serviceLocator.dataValidator;\n    flag = flag && validator.isNotNullObject(form.statusId);\n    console.log(form.statusId);\n    flag = flag && validator.isNotNullObject(form.title);\n    console.log(form.title);\n    flag = flag && validator.isNotNullObject(form.experience);\n    console.log(form.experience);\n    flag = flag && validator.isNotNullObject(form.dateOfOpening);\n    console.log(form.dateOfOpening);\n\n    return flag;\n  }\n\n  populateForm(form, data) {\n    form.id = data.id;\n    console.log(form.id + 'populate form in shoppingcomponent');\n    form.title = data.title;\n    form.experience = data.experience;\n    form.dateOfOpening = data.dateOfOpening;\n    form.statusId = data.statusId;\n\n\n  }\n\n  validatePhone(event: KeyboardEvent) {\n    const input = event.key;\n    // Check if the input is a number or backspace\n    if ((isNaN(Number(input)) && input !== 'Backspace') || (input === ' ')) {\n      event.preventDefault();\n    }\n    // Limit the input to 10 characters\n    if (this.form.data.phone && this.form.data.phone.length >= 10 && input !== 'Backspace') {\n      event.preventDefault();\n    }\n  }\n\n  validateAlphabetInput(event) {\n    const charCode = event.which || event.keyCode;\n    const charStr = String.fromCharCode(charCode);\n\n    // Regular expression to test if the character is a letter\n    const letterRegex = /^[a-zA-Z\\s]+$/;\n\n    // Test if the input matches the allowed characters\n    if (!letterRegex.test(charStr)) {\n      event.preventDefault();\n    }\n\n    // Optionally, check the entire value against the name format regex\n    const inputElement = event.target;\n    const inputValue = inputElement.value + charStr; // Add the current character to the input value\n\n    // Regex for valid name format \"FirstName LastName\"\n    const nameRegex = /^[A-Z][a-z]+ [A-Z][a-z]+$/;\n\n    // Check if the current value matches the valid name format\n    if (!nameRegex.test(inputValue)) {\n      // Handle invalid input (e.g., disable submit button, show error message)\n      // Example:\n      inputElement.classList.add('invalid'); // Apply CSS class for invalid input\n    } else {\n      inputElement.classList.remove('invalid'); // Remove invalid CSS class if format is valid\n    }\n  }\n\n\n\n\n  parseDate(dateString: string): Date {\n    if (dateString) {\n      return new Date(dateString);\n    }\n    return null;\n  }\n  test() {\n\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2pvYi9qb2JsaXN0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<app-navbar></app-navbar>\\n\\n<style>\\n  /* Adjustments for panel heading and main content wrapper */\\n  .panel-heading {\\n    height: 50px;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    margin-bottom: 20px;\\n    /* Added margin bottom for spacing */\\n  }\\n\\n  .content-wrapper {\\n    background: url(assets/files/wall.jpg) no-repeat center center;\\n    background-attachment: fixed;\\n    background-size: cover;\\n    padding: 20px;\\n    min-height: calc(100vh - 20px);\\n    /* Adjusted to ensure full height minus padding */\\n    box-sizing: border-box;\\n    /* Ensures padding is included in height calculation */\\n  }\\n\\n  .search-inputs {\\n    margin-top: 20px;\\n    margin-bottom: 20px;\\n    /* Added margin bottom for spacing */\\n  }\\n\\n  .search-inputs .form-control,\\n  .search-inputs .btn {\\n    margin-bottom: 10px;\\n  }\\n\\n  .table-responsive {\\n    margin-top: 20px;\\n    overflow-x: auto;\\n    /* Ensures horizontal scroll if table overflows */\\n  }\\n</style>\\n\\n<div class=\\\"content-wrapper\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"panel panel-primary\\\">\\n      <div class=\\\"panel-heading\\\">\\n        <h1 class=\\\"text-primary font-weight-bold\\\">{{ 'Job List' | translate }}</h1>\\n      </div>\\n\\n      <div class=\\\"row search-inputs justify-content-center\\\">\\n        <div class=\\\"col-md-3 mb-2\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.title\\\"\\n            placeholder=\\\"{{ 'Search title' | translate }}\\\" (input)=\\\"validateInput($event, 'title')\\\">\\n          <!-- Display validation message for title -->\\n          <div *ngIf=\\\"!isValidTitleInput\\\" class=\\\"text-danger\\\">{{ titleErrorMessage }}</div>\\n        </div>\\n        <div class=\\\"col-md-3 mb-2\\\">\\n          <input type=\\\"date\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.dateOfOpening\\\"\\n            (ngModelChange)=\\\"formatDate($event)\\\" placeholder=\\\"{{ 'Search dateOfOpening' | translate }}\\\">\\n        </div>\\n\\n        <div class=\\\"col-md-3 mb-2\\\">\\n          <input type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.experience\\\"\\n            placeholder=\\\"{{ 'Search experience' | translate }}\\\">\\n        </div>\\n\\n        <div class=\\\"col-md-3 mb-2\\\">\\n          <select class=\\\"form-control\\\" name=\\\"statusId\\\" [(ngModel)]=\\\"form.searchParams.statusId\\\">\\n            <option [ngValue]=\\\"undefined\\\">{{ 'Select status' | translate }}</option>\\n            <option *ngFor=\\\"let obj of form.preload.statusList\\\" [value]=\\\"obj.key\\\">{{ obj.value }}</option>\\n          </select>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"row mt-2 justify-content-center\\\">\\n        <div class=\\\"col-md-2 mb-2\\\">\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary btn-block\\\">{{ 'Search' | translate }}</button>\\n        </div>\\n        <div class=\\\"col-md-2 mb-2\\\">\\n          <button (click)=\\\"forward('/job')\\\" type=\\\"button\\\" class=\\\"btn btn-success btn-block\\\">{{ 'Add Job' | translate\\n            }}</button>\\n        </div>\\n        <div class=\\\"col-md-2 mb-2\\\">\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger btn-block\\\">{{ 'Delete' | translate }}</button>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"row mt-2 justify-content-center\\\">\\n        <div class=\\\"col-md-6\\\">\\n          <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{ form.message }}\\n          </div>\\n          <div *ngIf=\\\"!form.error && form.message\\\" class=\\\"alert alert-success alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{ form.message }}\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"table-responsive mt-3\\\">\\n        <table class=\\\"table table-bordered table-hover font-weight-bold text-dark\\\">\\n          <thead class=\\\"thead-dark text-uppercase\\\">\\n            <tr align=\\\"center\\\">\\n              <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" name=\\\"list_name\\\"\\n                  (change)=\\\"checkUncheckAll($event)\\\" /></th>\\n              <th>{{ 'S.No' }}</th>\\n              <th>{{ 'Title' }}</th>\\n              <th>{{ 'Experience' }}</th>\\n              <th>{{ 'Date Of Opening' }}</th>\\n              <th>{{ 'Status' }}</th>\\n              <th>{{ 'Edit' }}</th>\\n            </tr>\\n          </thead>\\n          <tbody>\\n            <tr *ngFor=\\\"let m of form.list; let i = index\\\" align=\\\"center\\\">\\n              <td><input type=\\\"checkbox\\\" #checkboxes (change)=\\\"checklistUpdate()\\\" name=\\\"list_name\\\" [id]=\\\"m.id\\\" /></td>\\n              <td>{{ (form.pageNo * 5) + i + 1 }}</td>\\n              <td>{{ m.title }}</td>\\n              <td>{{ m.experience }}</td>\\n              <td>{{ convertToLocalDate(m.dateOfOpening) }}</td>\\n              <td>{{ m.statusName }}</td>\\n              <td><button class=\\\"fa fa-edit text-primary\\\" id=\\\"nnn\\\" (click)=\\\"forward('/job/' + m.id)\\\"></button></td>\\n            </tr>\\n          </tbody>\\n        </table>\\n      </div>\\n\\n      <div class=\\\"d-flex justify-content-between mt-3\\\">\\n        <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\">{{ 'Previous' | translate\\n          }}</button>\\n        <div *ngIf=\\\"form.list.length == 0\\\">\\n          <a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/joblist']\\\" (click)=\\\"exit()\\\">{{ 'Back' | translate }}</a>\\n        </div>\\n        <button (click)=\\\"next()\\\" [disabled]=\\\"nextList == 0\\\" class=\\\"btn btn-info\\\">{{ 'Next' | translate }}</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\nimport { BaseListCtl } from '../base-list.component';\nimport { ServiceLocatorService } from '../service-locator.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-joblist',\n  templateUrl: './joblist.component.html',\n  styleUrls: ['./joblist.component.css']\n})\nexport class JoblistComponent extends BaseListCtl implements OnInit {\n\n  public form = {\n    error: false,\n    message: null,\n    preload: [],\n    data: { id: null },\n    inputerror: {},\n    searchParams: {\n\n      title: '',\n      experience: '',\n      dateOfOpening: '', // Initialize date field\n      statusId: '',\n      date: ''\n    },\n    searchMessage: null,\n    list: [],\n    pageNo: 0\n  };\n\n  isValidMobileInput: boolean = true;\n  isValidNameInput: boolean = true;\n  nameErrorMessage: string = '';\n  mobileErrorMessage: string = '';\n\n  isValidTitleInput: boolean = true;\n  titleErrorMessage: string = '';\n\n\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\n    super(locator.endpoints.JOB, locator, route);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n  }\n\n  // Format date function\n  formatDate(event: any) {\n    const selectedDate = new Date(event);\n    const formattedDate = selectedDate.toISOString().split('T')[0]; // Ensure it's in ISO format\n    this.form.searchParams.date = formattedDate;\n  }\n\n\n  // Convert date to local format for display\n  convertToLocalDate(dateString: string): string {\n    const date = new Date(dateString);\n    // Format date to 'MM/DD/YYYY'\n    const options = { year: 'numeric', month: '2-digit', day: '2-digit' };\n    return date.toLocaleDateString(undefined, options);\n  }\n\n  // Validate input for name and mobile fields\n  validateInput(event: any, field: string) {\n    const value = event.target.value;\n    if (field === 'mobile') {\n      this.isValidMobileInput = /^[0-9]*$/.test(value); // Check if the input contains only numbers\n      if (!this.isValidMobileInput) {\n        this.mobileErrorMessage = 'Please type numbers only';\n      } else {\n        this.mobileErrorMessage = '';\n      }\n    } else if (field === 'name') {\n      this.isValidNameInput = /^[A-Za-z\\s]*$/.test(value); // Check if the input contains only letters and spaces\n      if (!this.isValidNameInput) {\n        this.nameErrorMessage = 'Please type alphabets only';\n      } else {\n        this.nameErrorMessage = '';\n      }\n    } else if (field === 'title') {\n      this.isValidTitleInput = /^([A-Z][a-z]+(\\s[A-Z][a-z]+)*){1,100}$/.test(value); // Check against the specified regex\n      if (!this.isValidTitleInput) {\n        this.titleErrorMessage = 'Please enter a valid title';\n      } else {\n        this.titleErrorMessage = '';\n      }\n    }\n  }\n\n\n\n  // Submit method\n  submit() {\n    // Reset page number before searching\n    this.form.pageNo = 0;\n    // Call the search method after formatting the date\n    this.search();\n  }\n\n\n  // Search method\n  search() {\n    // Clear previous search message\n    this.form.searchMessage = null;\n    // Perform the search operation with the search parameters\n    super.search();\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvYWRlci9sb2FkZXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div id=\\\"loader\\\">\\n      <div class=\\\"dot\\\"></div>\\n      <div class=\\\"dot\\\"></div>\\n      <div class=\\\"dot\\\"></div>\\n      <div class=\\\"dot\\\"></div>\\n      <div class=\\\"dot\\\"></div>\\n      <div class=\\\"dot\\\"></div>\\n      <div class=\\\"dot\\\"></div>\\n      <div class=\\\"dot\\\"></div>\\n      <div class=\\\"loading\\\"></div>\\n    </div>\\n\\n    <p class=\\\"spinner-message\\\" *ngIf=\\\"message && message !== ''\\\">\\n      {{message}}\\n    </p>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-loader',\n  templateUrl: './loader.component.html',\n  styleUrls: ['./loader.component.css']\n})\nexport class LoaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvYW5zL2xvYW5zLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<app-navbar></app-navbar>\\n<style>\\n  .grad {\\n    background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\n    background-repeat: no-repeat;\\n    background-size: 100%;\\n    padding-bottom: 25px;\\n  }\\n\\n  .input-group-addon {\\n    box-shadow: 9px 8px 7px #001a33;\\n  }\\n\\n  .required-field {\\n    color: red;\\n    font-weight: bold;\\n  }\\n\\n  .alertRedColor {\\n    color: red;\\n  }\\n\\n  .card-body {\\n    padding: 2rem;\\n  }\\n\\n  .input-group-text i {\\n    width: 1.5rem;\\n  }\\n\\n  .btn-primary,\\n  .btn-success,\\n  .btn-warning {\\n    width: 100%;\\n  }\\n\\n  .form-control {\\n    height: calc(2.25rem + 2px);\\n  }\\n\\n  .form-group {\\n    margin-bottom: 1.5rem;\\n  }\\n\\n  .input-group-prepend .input-group-text {\\n    background-color: #e9ecef;\\n    border: 1px solid #ced4da;\\n  }\\n\\n  .input-group-prepend .input-group-text i {\\n    color: #495057;\\n  }\\n\\n  .row {\\n    margin-left: 0;\\n    margin-right: 0;\\n  }\\n\\n  .textarea-height {\\n    height: 100px;\\n  }\\n\\n  .card {\\n    margin: auto;\\n    max-width: 500px;\\n  }\\n</style>\\n\\n<div class=\\\"container-fluid\\\"\\n  style=\\\"padding: 2% 0; background: url('assets/files/wall.jpg') no-repeat center center; background-attachment: fixed; background-size: cover; width: 100%; height: auto;\\\">\\n  <div class=\\\"row justify-content-center\\\">\\n    <div class=\\\"col-md-6\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-body input-group-addon grad\\\">\\n          <form name=\\\"userForm\\\">\\n            <h2 *ngIf=\\\"!form.data.id\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{ 'Add Loans' |\\n              translate }}\\n            </h2>\\n            <h2 *ngIf=\\\"form.data.id\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{ 'Update Loans' |\\n              translate }}\\n            </h2>\\n\\n            <div *ngIf=\\\"!form.error && form.message\\\" class=\\\"alert alert-success alert-dismissible\\\">\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n              {{ form.message }}\\n            </div>\\n\\n            <div *ngIf=\\\"form.error && form.message\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n              {{ form.message }}\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label><b>{{ 'CustomerId' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-flag grey-text\\\"></i></div>\\n                </div>\\n                <select class=\\\"form-control\\\" name=\\\"customerIdId\\\" [(ngModel)]=\\\"form.data.customerIdId\\\"\\n                  aria-label=\\\"ngSelected\\\">\\n                  <option [ngValue]=\\\"undefined\\\">{{ 'Select customerId' | translate }}</option>\\n                  <option *ngFor=\\\"let obj of form.preload.customerIdList\\\" [value]=\\\"obj.key\\\">{{ obj.key }}</option>\\n                </select>\\n              </div>\\n              <span *ngIf=\\\"form.inputerror.customerIdId\\\" class=\\\"alertRedColor\\\">{{form.inputerror.customerIdId}}</span>\\n            </div>\\n\\n            <form [formGroup]=\\\"userForm\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"loanAmount\\\">Loan Amount</label>\\n                <div class=\\\"input-group\\\">\\n                  <div class=\\\"input-group-prepend\\\">\\n                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-flag grey-text\\\"></i></div>\\n                  </div>\\n                <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"loanAmount\\\" formControlName=\\\"loanAmount\\\">\\n                <div *ngIf=\\\"userForm.get('loanAmount').invalid && (userForm.get('loanAmount').dirty || userForm.get('loanAmount').touched)\\\">\\n                  <div *ngIf=\\\"userForm.get('loanAmount').errors?.invalidRange\\\" class=\\\"text-danger\\\">Loan amount must be between 50,000 and 1,000,000.</div>\\n                </div>\\n                <span *ngIf=\\\"form.inputerror.loanAmount\\\" class=\\\"alertRedColor\\\">{{form.inputerror.loanAmount}}</span>\\n              </div>\\n            \\n              <!--<button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"userForm.invalid\\\">Submit</button> -->\\n        \\n\\n            \\n            \\n            \\n\\n            <div class=\\\"form-group\\\">\\n              <label><b>{{ 'Interest Rate' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-phone grey-text\\\"></i></div>\\n                </div>\\n                <input type=\\\"number\\\" name=\\\"interestRate\\\" [(ngModel)]=\\\"form.data.interestRate\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{ 'Enter interestRate' | translate }}\\\">\\n\\n\\n              </div>\\n              <span *ngIf=\\\"form.inputerror.interestRate\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.interestRate}}</span>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label><b>{{ 'Loan Start Date' | translate }}</b><span class=\\\"required-field\\\"></span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-calendar-alt grey-text\\\"></i></div>\\n                </div>\\n                <input type=\\\"date\\\" name=\\\"loanStartDate\\\" [value]=\\\"form.data.loanStartDate | date:'yyyy-MM-dd'\\\"\\n                  (input)=\\\"form.data.loanStartDate=parseDate($event.target.value)\\\" class=\\\"form-control\\\" required />\\n              </div>\\n              <span *ngIf=\\\"form.inputerror.loanStartDate\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.loanStartDate\\n                }}</span>\\n            </div>\\n\\n\\n            <div class=\\\"row pt-2 pb-3 justify-content-center\\\">\\n              <div class=\\\"col-md-4\\\">\\n                <button *ngIf=\\\"!form.data.id\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{ 'Save' | translate\\n                  }}</button>\\n              </div>\\n              <div class=\\\"col-md-4\\\">\\n                <button *ngIf=\\\"form.data.id\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{ 'Update' | translate\\n                  }}</button>\\n              </div>\\n              <div class=\\\"col-md-4\\\">\\n                <a class=\\\"btn btn-warning\\\" type=\\\"button\\\" [routerLink]=\\\"['/loanslist']\\\">{{ 'List' | translate\\n                  }}</a>\\n              </div>\\n            </div>\\n  \\n      </div>\\n</form>\\n</form>\\n  </div>\\n</div>\\n<app-footer></app-footer>\"","import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, AbstractControl, ValidatorFn } from '@angular/forms';\nimport { BaseCtl } from '../base.component';\nimport { ServiceLocatorService } from '../service-locator.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-loans',\n  templateUrl: './loans.component.html',\n  styleUrls: ['./loans.component.css']\n})\nexport class LoansComponent extends BaseCtl {\n\n  getKey = false;\n  selected = null;\n  userForm: FormGroup = null;\n  uploadForm: FormGroup;\n\n  constructor(public locator: ServiceLocatorService,private formBuilder: FormBuilder, public route: ActivatedRoute, private httpClient: HttpClient) {\n    super(locator.endpoints.LOANS, locator, route);\n\n    this.userForm = this.formBuilder.group({\n      loanAmount: ['', [Validators.required, this.validateLoanAmountRange()]]\n    });\n  }\n\n  submit() {\n    var _self = this;\n    console.log('in submit');\n    console.log(this.form);\n    console.log(this.form.data);\n\n    this.serviceLocator.httpService.post(this.api.save, this.form.data, function (res) {\n      _self.form.message = '';\n      _self.form.inputerror = {}; // Clear input errors here\n\n      if (res.success) {\n        _self.form.error = false; // Set error to false on success\n        _self.form.message = \"Data is saved\";\n        _self.form.data.id = res.result.data;\n        console.log(_self.form.data.id);\n        console.log(\"----------Chetan----------.\");\n\n        // Clear form data if needed\n        // _self.form.data = {};\n\n      } else {\n        _self.form.error = true;\n        if (res.result.inputerror) {\n          _self.form.inputerror = res.result.inputerror;\n        }\n        _self.form.message = res.result.message;\n      }\n      console.log('FORM', _self.form);\n    });\n  }\n\n  submit1() {\n    var _self = this;\n    console.log(this.form + \"submit running start\");\n    console.log(this.form.data + \"form data going to be submit\");\n    this.serviceLocator.httpService.post(this.api.search, this.form.data, function (res) {\n      _self.form.message = '';\n      _self.form.inputerror = {};\n      _self.form.data.id = res.result.data;\n\n      if (res.success) {\n        _self.form.message = \"Data is saved\";\n        _self.form.data.id = res.result.data;\n\n        console.log(_self.form.data.id);\n        console.log(\"--------------------.\");\n\n      } else {\n        _self.form.error = true;\n        _self.form.inputerror = res.result.inputerror;\n        _self.form.message = res.result.message;\n      }\n      _self.form.data.id = res.result.data;\n      console.log('FORM', _self.form);\n    });\n  }\n\n  onUpload(userform: FormData) {\n    this.submit();\n    console.log(this.form.data.id + '---- after submit');\n  }\n\n  validateForm(form) {\n    let flag = true;\n    let validator = this.serviceLocator.dataValidator;\n    flag = flag && validator.isNotNullObject(form.customerIdId);\n    console.log(form.customerIdId);\n    flag = flag && validator.isNotNullObject(form.loanAmount);\n    console.log(form.loanAmount);\n    flag = flag && validator.isNotNullObject(form.interestRate);\n    console.log(form.interestRate);\n    flag = flag && validator.isNotNullObject(form.loanStartDate);\n    console.log(form.loanStartDate);\n\n    return flag;\n  }\n\n  populateForm(form, data) {\n    form.id = data.id;\n    console.log(form.id + 'populate form in shoppingcomponent');\n    form.loanAmount = data.loanAmount;\n    form.interestRate = data.interestRate;\n    form.loanStartDate = data.loanStartDate;\n    form.customerIdId = data.customerIdId;\n  }\n\n  validatePhone(event: KeyboardEvent) {\n    const input = event.key;\n    // Check if the input is a number or backspace\n    if ((isNaN(Number(input)) && input !== 'Backspace') || (input === ' ')) {\n      event.preventDefault();\n    }\n    // Limit the input to 10 characters\n    if (this.form.data.phone && this.form.data.phone.length >= 10 && input !== 'Backspace') {\n      event.preventDefault();\n    }\n  }\n\n  validateAlphabetInput(event) {\n    const charCode = event.which || event.keyCode;\n    const charStr = String.fromCharCode(charCode);\n\n    // Regular expression to test if the character is a letter\n    const letterRegex = /^[a-zA-Z\\s]+$/;\n\n    // Test if the input matches the allowed characters\n    if (!letterRegex.test(charStr)) {\n      event.preventDefault();\n    }\n\n    // Optionally, check the entire value against the name format regex\n    const inputElement = event.target;\n    const inputValue = inputElement.value + charStr; // Add the current character to the input value\n\n    // Regex for valid name format \"FirstName LastName\"\n    const nameRegex = /^[A-Z][a-z]+ [A-Z][a-z]+$/;\n\n    // Check if the current value matches the valid name format\n    if (!nameRegex.test(inputValue)) {\n      // Handle invalid input (e.g., disable submit button, show error message)\n      // Example:\n      inputElement.classList.add('invalid'); // Apply CSS class for invalid input\n    } else {\n      inputElement.classList.remove('invalid'); // Remove invalid CSS class if format is valid\n    }\n  }\n\n  parseDate(dateString: string): Date {\n    if (dateString) {\n      return new Date(dateString);\n    }\n    return null;\n  }\n\n  validateLoanAmountRange(): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: any } | null => {\n      const value = control.value;\n      if (isNaN(value) || value < 50000 || value > 1000000) {\n        return { 'invalidRange': true };\n      }\n      return null;\n    };\n  }\n  \n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvYW5zL2xvYW5zbGlzdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-navbar></app-navbar>\\n\\n<style>\\n  #nnn {\\n    background: none;\\n    border: none;\\n    cursor: pointer;\\n  }\\n\\n  .panel-heading {\\n    height: 50px;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n  }\\n\\n  .content-wrapper {\\n    background: url(assets/files/wall.jpg) no-repeat center center;\\n    background-attachment: fixed;\\n    background-size: cover;\\n    width: 100%;\\n    min-height: 100vh;\\n    padding: 20px;\\n  }\\n\\n  .table-responsive {\\n    margin-top: 20px;\\n  }\\n\\n  .full-height {\\n    height: 100vh;\\n  }\\n</style>\\n\\n<div class=\\\"content-wrapper full-height\\\">\\n  <div class=\\\"container-fluid full-height\\\">\\n    <div class=\\\"panel panel-primary full-height\\\">\\n      <div class=\\\"panel-heading\\\">\\n        <h1 class=\\\"text-primary font-weight-bold\\\">{{ 'Loans List' | translate }}</h1>\\n      </div>\\n\\n      <div class=\\\"row mt-3\\\">\\n        <div class=\\\"col-md-3\\\">\\n          <input type=\\\"date\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.loanStartDate\\\"\\n            (ngModelChange)=\\\"formatDate($event)\\\" placeholder=\\\"{{ 'Search loan Start Date' | translate }}\\\">\\n        </div>\\n        <div class=\\\"col-md-3\\\">\\n          <input type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.loanAmount\\\"\\n            placeholder=\\\"{{ 'Search loan Amount' | translate }}\\\">\\n        </div>\\n        <div class=\\\"col-md-3\\\">\\n          <input type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.interestRate\\\"\\n            placeholder=\\\"{{ 'Search interest Rate' | translate }}\\\">\\n        </div>\\n        <div class=\\\"col-md-3\\\">\\n          <select class=\\\"form-control\\\" name=\\\"customerIdId\\\" [(ngModel)]=\\\"form.searchParams.customerIdId\\\">\\n            <option [ngValue]=\\\"undefined\\\">{{ 'Select customerId' | translate }}</option>\\n            <option *ngFor=\\\"let obj of form.preload.customerIdList\\\" [value]=\\\"obj.key\\\">{{ obj.key }}</option>\\n          </select>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"row mt-3 justify-content-center\\\">\\n        <div class=\\\"col-md-2\\\">\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary btn-block\\\">{{ 'Search' | translate }}</button>\\n        </div>\\n        <div class=\\\"col-md-2\\\">\\n          <button (click)=\\\"forward('/loans')\\\" type=\\\"button\\\" class=\\\"btn btn-success btn-block\\\">{{ 'Add loans' | translate }}</button>\\n        </div>\\n        <div class=\\\"col-md-2\\\">\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger btn-block\\\">{{ 'Delete' | translate }}</button>\\n        </div>\\n      </div>\\n\\n      <div *ngIf=\\\"form.error || form.message\\\" class=\\\"row mt-3 justify-content-center\\\">\\n        <div class=\\\"col-md-6\\\">\\n          <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{ form.message }}\\n          </div>\\n          <div *ngIf=\\\"!form.error && form.message\\\" class=\\\"alert alert-success alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{ form.message }}\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"table-responsive mt-3\\\">\\n        <table class=\\\"table table-bordered table-hover font-weight-bold text-dark\\\">\\n          <thead class=\\\"thead-dark text-uppercase\\\">\\n            <tr align=\\\"center\\\">\\n              <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" name=\\\"list_name\\\" (change)=\\\"checkUncheckAll($event)\\\" /></th>\\n              <th>{{ 'S.No' }}</th>\\n              <th>{{ 'Loan Amount' }}</th>\\n              <th>{{ 'Interest Rate' }}</th>\\n              <th>{{ 'Loan Start Date' }}</th>\\n              <th>{{ 'customerId' }}</th>\\n              <th>{{ 'Edit' }}</th>\\n            </tr>\\n          </thead>\\n          <tbody>\\n            <tr *ngFor=\\\"let m of form.list; let i = index\\\" align=\\\"center\\\">\\n              <td><input type=\\\"checkbox\\\" #checkboxes (change)=\\\"checklistUpdate()\\\" name=\\\"list_name\\\" [id]=\\\"m.id\\\" /></td>\\n              <td>{{ (form.pageNo * 5) + i + 1 }}</td>\\n              <td>{{ m.loanAmount }}</td>\\n              <td>{{ m.interestRate }}</td>\\n              <td>{{ convertToLocalDate(m.loanStartDate) }}</td>\\n              <td>{{ m.customerIdId }}</td>\\n              <td>\\n                <button class=\\\"fa fa-edit text-primary\\\" id=\\\"nnn\\\" (click)=\\\"forward('/loans/' + m.id)\\\"></button>\\n              </td>\\n            </tr>\\n          </tbody>\\n        </table>\\n      </div>\\n\\n      <div class=\\\"d-flex justify-content-between mt-3\\\">\\n        <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\">{{ 'Previous' | translate }}</button>\\n        <div *ngIf=\\\"form.list.length == 0\\\">\\n          <a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/loanslist']\\\" (click)=\\\"exit()\\\">{{ 'Back' | translate }}</a>\\n        </div>\\n        <button (click)=\\\"next()\\\" [disabled]=\\\"nextList == 0\\\" class=\\\"btn btn-info\\\">{{ 'Next' | translate }}</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<app-footer></app-footer>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { BaseListCtl } from '../base-list.component';\nimport { ServiceLocatorService } from '../service-locator.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-loanslist',\n  templateUrl: './loanslist.component.html',\n  styleUrls: ['./loanslist.component.css']\n})\nexport class LoanslistComponent extends BaseListCtl implements OnInit {\n\n  public form = {\n    error: false,\n    message: null,\n    preload: [],\n    data: { id: null },\n    inputerror: {},\n    searchParams: {\n\n      loanAmount: '',\n      date: '', // Initialize date field\n      customerIdId: '',\n      interestRate: '',\n      loanStartDate: ''\n    },\n    searchMessage: null,\n    list: [],\n    pageNo: 0\n  };\n\n  isValidMobileInput: boolean = true;\n  isValidNameInput: boolean = true;\n  nameErrorMessage: string = '';\n  mobileErrorMessage: string = '';\n\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\n    super(locator.endpoints.LOANS, locator, route);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n  }\n\n  // Format date function\n  formatDate(event: any) {\n    const selectedDate = new Date(event);\n    const formattedDate = selectedDate.toISOString().split('T')[0];\n    this.form.searchParams.date = formattedDate;\n  }\n\n  // Convert date to local format for display\n  convertToLocalDate(dateString: string): string {\n    const date = new Date(dateString);\n    // Format date to 'MM/DD/YYYY'\n    const options = { year: 'numeric', month: '2-digit', day: '2-digit' };\n    return date.toLocaleDateString(undefined, options);\n  }\n\n  // Validate input for name and mobile fields\n  validateInput(event: any, field: string) {\n    const value = event.target.value;\n    if (field === 'mobile') {\n      this.isValidMobileInput = /^[0-9]*$/.test(value); // Check if the input contains only numbers\n      if (!this.isValidMobileInput) {\n        this.mobileErrorMessage = 'Please type numbers only';\n      } else {\n        this.mobileErrorMessage = '';\n      }\n    } else if (field === 'name') {\n      this.isValidNameInput = /^[A-Za-z\\s]*$/.test(value); // Check if the input contains only letters and spaces\n      if (!this.isValidNameInput) {\n        this.nameErrorMessage = 'Please type alphabets only';\n      } else {\n        this.nameErrorMessage = '';\n      }\n    }\n  }\n\n\n  // Submit method\n  submit() {\n    // Reset page number before searching\n    this.form.pageNo = 0;\n    // Call the search method after formatting the date\n    this.search();\n  }\n\n\n  // Search method\n  search() {\n    // Clear previous search message\n    this.form.searchMessage = null;\n    // Perform the search operation with the search parameters\n    super.search();\n  }\n}\n","module.exports = \"<app-navbar ></app-navbar>\\n<style>\\n  .grad{\\n  background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\n  background-repeat: no repeat;\\n  background-size: 100%;\\n  padding-bottom: 10px;\\n  } \\n  \\n</style>\\n<div class=\\\"row \\\" style=\\\"padding-top: 10%; padding-bottom:15%;\\nbackground: url(assets/files/wall.jpg) no-repeat center center;\\nbackground-attachment: fixed;\\nbackground-size: cover;width:auto;\\n  height: auto;\\\">\\n\\n\\n  <div class=\\\"col-sm-4\\\"></div>\\n\\n  <div class=\\\"col-sm-4\\\">\\n    \\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-body shadow-lg grad\\\">\\n        <form #loginForm=\\\"ngForm\\\">\\n          \\n          <div style=\\\"text-align: center;\\\">\\n          <h1 class=\\\"text-primary font-weight-bold\\\">{{'Forgot Password' | translate}}</h1>\\n          </div>\\n\\n          <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{form.message}}\\n          </div>\\n          <div *ngIf=\\\"form.error == false && form.message == 'Password has been sent to email id'\\\"\\n            class=\\\"alert alert-success alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{form.message}}\\n          </div>\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'Email Id' | translate}}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"loginId\\\" [(ngModel)]=\\\"form.loginId\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter Login Id' | translate}}\\\">\\n              </div>\\n            </div>\\n          </div>\\n\\n          <span class=\\\"alertRedColor\\\">{{inputerror.loginId}}</span>\\n\\n          <div class=\\\"row pt-3 pl-3 pb-3\\\">\\n            <div class=\\\"pt-2\\\">\\n              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\n              <button (click)=\\\"submit()\\\" [disabled]=\\\"!validate()\\\" class=\\\"btn btn-success mr-2\\\">\\n                {{'Reset My Password' | translate}}</button>\\n            </div>\\n          </div>\\n        </form>\\n      </div>\\n\\n    </div>\\n\\n  \\n</div>\\n  </div>\\n\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { HttpServiceService } from '../http-service.service';\nimport { Router } from '@angular/router';\nimport { DataValidator } from '../utility/data-validator';\n\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgotpassword.component.html'\n})\n\nexport class ForgotPasswordComponent implements OnInit {\n\n  endpoint = \"http://localhost:8084/Auth\";\n\n  form = {\n    error: false,\n    message: \"\",\n    loginId: '',\n  };\n\n  inputerror = {};\n  message = '';\n\n  constructor(private httpService: HttpServiceService, private dataValidator: DataValidator, private router: Router) {\n  }\n\n\n  validate(){\n    let flag = true;\n    flag = flag && this.dataValidator.isNotNull(this.form.loginId);\n    return flag;\n  }\n\n  /**\n   * Initialize component\n   */\n  ngOnInit() {\n  }\n\n  submit() {\n    var _self = this;\n    this.httpService.get(_self.endpoint + \"/fp/\"+ this.form.loginId ,function (res) {\n\n      console.log('MyResponse', res);\n\n      _self.form.message = '';\n      _self.inputerror = {};\n          console.log(res.result.message+'------>msg');\n      if (res.result.message) {\n        _self.form.message = res.result.message;\n        console.log(_self.form.message+'-------> msg in sucess');\n      \n      }\n\n      _self.form.error = !res.success;\n      console.log(_self.form.error + '-----------> msg in self.form.error in res');\n\n      if (_self.form.error && res.result.inputerror) {\n          _self.inputerror = res.result.inputerror;\n          console.log(_self.inputerror + '-----------> msg in self.form.error');\n      }\n    });\n  }\n}\n","module.exports = \".alertRedColor {\\n    color: red;\\n}\\n\\n\\n.required-field::after { \\t\\t\\n  content: \\\"*\\\";\\t\\t\\n  color: red;\\t\\t\\n   }\\n\\n\\n.successColor{\\n    color: green;\\n   }\\n\\n\\n.btn-space {\\n    margin-right: 5px;\\n}\\n\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFVBQVU7QUFDZDs7O0FBR0E7RUFDRSxZQUFZO0VBQ1osVUFBVTtHQUNUOzs7QUFFQTtJQUNDLFlBQVk7R0FDYjs7O0FBRUE7SUFDQyxpQkFBaUI7QUFDckIiLCJmaWxlIjoic3JjL2FwcC9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmFsZXJ0UmVkQ29sb3Ige1xuICAgIGNvbG9yOiByZWQ7XG59XG5cblxuLnJlcXVpcmVkLWZpZWxkOjphZnRlciB7IFx0XHRcbiAgY29udGVudDogXCIqXCI7XHRcdFxuICBjb2xvcjogcmVkO1x0XHRcbiAgIH1cdFxuXG4gICAuc3VjY2Vzc0NvbG9ye1xuICAgIGNvbG9yOiBncmVlbjtcbiAgIH1cblxuICAgLmJ0bi1zcGFjZSB7XG4gICAgbWFyZ2luLXJpZ2h0OiA1cHg7XG59XG5cbiJdfQ== */\"","module.exports = \"<app-navbar #one></app-navbar>\\n<style>\\n  #nnn{\\n    background: none;\\n    border: none;\\n  }\\n  \\n  </style>\\n  \\n  \\n<style type=\\\"text/css\\\">\\n  .log1 {\\n    padding-top: 13%; \\n  }\\n  \\n  .input-group-addon {\\n    box-shadow: 9px 8px 7px #001a33;\\n    \\n  }\\n  .grad{\\n  background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\n  background-repeat: no repeat;\\n  background-size: 100%;\\n  padding-bottom: 10px;\\n    \\n  }\\n  </style>\\n<div class=\\\"row \\\" style=\\\"padding-top: 8%; padding-bottom: 8%;\\nbackground: url(assets/files/Login3.jpg) no-repeat center center;\\n   background-attachment: fixed;\\nbackground-size: 225vh;width:auto;\\n  height: 90vh;\\\">\\n  <div class=\\\"col-sm-4\\\"></div>\\n  <div class=\\\"col-sm-4\\\">\\n    <div class=\\\"card input-group-addon grad\\\">\\n      <div class=\\\"card-body\\\">\\n        <form>\\n          <div style=\\\"text-align: center;\\\">\\n            <h1 class=\\\"text-primary font-weight-bold\\\">{{'Login' | translate}}</h1>\\n          </div>\\n          <input type=\\\"hidden\\\" name=\\\"log\\n          inUrl\\\" [(ngModel)]=\\\"form.loginUrl\\\" class=\\\"form-control\\\">\\n          <div *ngIf=\\\"form.error && form.message == 'Invalid ID or Password'\\\"\\n            class=\\\"alert alert-danger alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{'Invalid ID or Password' | translate}}\\n          </div>\\n          <div *ngIf=\\\"form.error==false && form.message == 'Logout Successfully'\\\"\\n            class=\\\"alert alert-success alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{'Log out successfully' | translate}}\\n          </div>\\n\\n          <div *ngIf=\\\"form.message == 'OOPS! Your session has been expired'\\\"\\n            class=\\\"alert alert-danger alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{'OOPS! Your session has been expired' | translate}}\\n          </div>\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'Email Id' | translate}}</b>\\n              <span class=\\\"required-field\\\"></span>\\n            </span>\\n\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"loginId\\\" [(ngModel)]=\\\"form.loginId\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter Login Id' | translate}}\\\">\\n              </div>\\n            </div>\\n           <span  *ngIf=\\\"inputerror.loginId != null\\\"\\n          class=\\\"alertRedColor\\\" style=\\\" color: red;\\\" > {{'loginId'| translate}} </span> \\n          </div>\\n           <!-- <span class=\\\"alertRedColor\\\">{{inputerror.loginId}}</span>  -->\\n          <div style=\\\"padding-top:3%\\\">\\n            <span><b>{{'Password' | translate}}</b> \\n              <span class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-key grey-text \\\"></i> </div>\\n                </div>\\n                <input type=\\\"password\\\" name=\\\"pwd\\\" [(ngModel)]=\\\"form.password\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter Password' | translate}}\\\">\\n              </div>\\n            </div>\\n            <span  *ngIf=\\\"inputerror.password != null\\\"\\n            class=\\\"alertRedColor\\\" style=\\\" color: red;\\\" > {{'password'| translate}} </span> \\n\\n            <!-- <span class=\\\"alertRedColor\\\">{{inputerror.password}}</span> -->\\n          </div>\\n          <div class=\\\"row pt-3 pl-3 pb-3\\\">\\n            <div class=\\\"pt-2\\\">\\n              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\n              <button (click)=\\\"signIn()\\\" class=\\\"btn btn-md btn-success\\\">\\n                {{'Sign in' | translate}}</button>\\n            </div>\\n            &nbsp;&nbsp;&nbsp;\\n            <div class=\\\"pl-3 pt-2\\\">\\n              <a class=\\\"btn btn-warning\\\" [routerLink]=\\\"['/forgotpassword']\\\">{{'Forgot Password' | translate}}</a>\\n            </div>\\n          </div>\\n        </form>\\n      </div>\\n\\n    </div>\\n\\n  </div>\\n</div>\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms'; \nimport { HttpServiceService } from '../http-service.service';\nimport { Router } from '@angular/router';\nimport { DataValidator } from '../utility/data-validator';\nimport { CookieService } from 'ngx-cookie-service';\nimport { ActivatedRoute } from '@angular/router';\nimport { ServiceLocatorService } from '../service-locator.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\n\nexport class LoginComponent implements OnInit {\n\n  endpoint = \"http://localhost:8084/Auth\";\n\n  form = {\n    error: false,\n    message: '',\n    loginId: '',\n    password: '',\n    loginUrl: '',\n  };\n\n  inputerror = {};\n  message = '';\n\n  userparams = {\n    url: '',\n    sessionExpiredMsg: '',\n    methodType: '',\n  };\n\n\n  constructor(private httpService: HttpServiceService, private dataValidator: DataValidator, private router: Router,\n    private cookieService: CookieService, private route: ActivatedRoute, private serviceLocator: ServiceLocatorService) {\n\n  }\n\n  /**\n   * Initialize component\n   */\n  ngOnInit() {\n  this.route.queryParams.subscribe((params) =>{\n    this.form.message = params['errorMessage'] || null;\n    console.log(\"mas>>>>>>>>>>>>>>>gg.>>\",this.form.message);\n    })\n    this.userSessionCheck();\n    if (this.httpService.form.error == true) {\n      this.form.message = this.httpService.form.message;\n      this.form.error = this.httpService.form.error;\n    }\n    var a = '';\n    this.serviceLocator.getPathVariable(this.route, function (params) {\n      a = params[\"userparams\"];\n      console.log('I GOT ID, its logout', a);\n    })\n    if (a == 'true') {\n      this.form.message = 'Logout Successfully';\n    }\n  }\n\n  userSessionCheck() {\n\n    this.route.paramMap.subscribe(params => {\n      //  this.userList = params.get('userparams');    \n      //  this.userparams=JSON.parse(this.route.snapshot.paramMap.get('userparams'));\n\n      this.userparams = JSON.parse(this.route.snapshot.queryParamMap.get('userparams'));\n      if (this.userparams != null) {\n        this.form.message = this.userparams.sessionExpiredMsg;\n        this.form.loginUrl = this.userparams.url;\n        //  console.log('URL-----------------------' + this.userparams.url);\n        //  console.log('Message-----------------------' + this.userparams.sessionExpiredMsg);\n        //  console.log('Method Type-----------------------' + this.userparams.methodType);\n      }\n\n    });\n    if (this.form.message != null) {\n      this.form.error = true;\n    }\n  }\n\n  validate() {\n    let flag = true;\n    flag = flag && this.dataValidator.isNotNull(this.form.loginId);\n    console.log(this.form.loginId);\n    flag = flag && this.dataValidator.isNotNull(this.form.password);\n    console.log(this.form.password);\n    return flag;\n  }\n\n\n  signIn() {\n\n    var _self = this;\n    this.form.error = false;\n    const requestedUrl = this.httpService.userparams.url;//to get the URI\n    console.log('signIn----', this.form);\n    this.httpService.post(this.endpoint + \"/login\", this.form, function (res) {\n\n      console.log('MyResponse', res);\n\n\n      _self.form.message = '';\n      _self.inputerror = {};\n      //_self.form.loginId = res.result.loginId;\n      if (_self.dataValidator.isNotNullObject(res.result.message)) {\n        _self.form.message = res.result.message;\n      }\n\n      _self.form.error = !res.success;\n\n      if (_self.dataValidator.isNotNullObject(res.result.inputerror)) {\n        _self.inputerror = res.result.inputerror;\n      }\n\n      if (_self.dataValidator.isTrue(res.success)) {\n\n        localStorage.setItem(\"loginId\", res.result.loginId);\n        localStorage.setItem(\"role\", res.result.role);\n        localStorage.setItem(\"fname\", res.result.fname);\n        localStorage.setItem(\"lname\", res.result.lname);\n        localStorage.setItem(\"userid\", res.result.data.id);\n      \n        //   console.log(res.result.data.id + 'sessionId set ----');\n        //   console.log(res.result.token + '  Token set ----');\n\n\n        if (requestedUrl != null && requestedUrl != '') {\n          _self.router.navigateByUrl(requestedUrl);\n\n        } else {\n          _self.router.navigateByUrl('dashboard');\n        }\n      }\n    });\n  }\n\n}","module.exports = \"<app-navbar></app-navbar>\\n<style>\\n   .grad{\\n  background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\n  background-repeat: no repeat;\\n  background-size: 100%;\\n  padding-bottom: 25px\\n  ;\\n  }\\n \\n</style>\\n<div class=\\\"row \\\" style=\\\" padding-top: 4%;\\n padding-bottom:0%;background-image: url(../../assets/files/wall.jpg);\\nbackground-attachment: fixed;\\nbackground-size: 100%;\\n  height: 105vh;\\\">\\n\\n  <div class=\\\"col-sm-4\\\"></div>\\n  <div class=\\\"col-sm-4\\\" >\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-body shadow-lg grad\\\">\\n         <form>\\n          <div style=\\\"text-align: center;\\\">\\n            <h3 class=\\\"text-primary font-weight-bold\\\">\\n              {{'Sign Up' | translate}}\\n            </h3>\\n          </div>\\n\\n          <div *ngIf=\\\"form.error && form.message != null\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{form.message}}\\n          </div>\\n          <div *ngIf=\\\"!form.error && form.message != null && form.message.length>0\\\"\\n            class=\\\"alert alert-success alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{form.message}}\\n          </div>\\n\\n          <div style=\\\"padding-top:0.3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'First Name' | translate}}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"firstName\\\" [(ngModel)]=\\\"form.data.firstName\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter First Name' | translate}}\\\">\\n              </div>\\n            </div><span  *ngIf=\\\"form.inputerror.firstName != null\\\"\\n            class=\\\"alertRedColor\\\" style=\\\" color: red;\\\" > {{'firstname'| translate}} </span>\\n            <!-- <span class=\\\"alertRedColor\\\" style=\\\" color: red;\\\"> {{form.inputerror.firstName}} </span> -->\\n          </div>\\n\\n          <div style=\\\"padding-top:0.1%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'Last Name' | translate}}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user-circle grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"lastName\\\" [(ngModel)]=\\\"form.data.lastName\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter Last Name' | translate}}\\\">\\n              </div>\\n            </div><span  *ngIf=\\\"form.inputerror.lastName != null\\\"\\n            class=\\\"alertRedColor\\\" style=\\\" color: red;\\\" > {{'lastname'| translate}} </span>\\n            <!-- <span class=\\\"alertRedColor\\\" style=\\\" color: red;\\\"> {{form.inputerror.lastName}} </span> -->\\n          </div>\\n\\n          <div style=\\\"padding-top:0.1%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'Login id' | translate}}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"login\\\" [(ngModel)]=\\\"form.data.login\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter Email Id' | translate}}\\\">\\n\\n              </div>\\n            </div><span  *ngIf=\\\"form.inputerror.login != null\\\"\\n            class=\\\"alertRedColor\\\" style=\\\" color: red;\\\" > {{'email'| translate}} </span>\\n            <!-- <span class=\\\"alertRedColor\\\" style=\\\" color: red;\\\"> {{form.inputerror.login}} </span> -->\\n          </div>\\n\\n          <div style=\\\"padding-top:0.1%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'Password' | translate}}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-key grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"password\\\" name=\\\"password\\\" [(ngModel)]=\\\"form.data.password\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter Password' | translate}}\\\">\\n              </div>\\n            </div><span  *ngIf=\\\"form.inputerror.password != null\\\"\\n            class=\\\"alertRedColor\\\" style=\\\" color: red;\\\" > {{'password'| translate}} </span>\\n            <!-- <span class=\\\"alertRedColor\\\" style=\\\" color: red;\\\"> {{password | translate}} </span> -->\\n          </div>\\n\\n          <div style=\\\"padding-top:0.1%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'Mobile' | translate}}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-phone grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"phone\\\" maxlength=\\\"10\\\" [(ngModel)]=\\\"form.data.phone\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter Mobile Number' | translate}}\\\">\\n              </div>\\n            </div>\\n            <span  *ngIf=\\\"form.inputerror.phone != null\\\"\\n              class=\\\"alertRedColor\\\" style=\\\" color: red;\\\" > {{'phone'| translate}} </span>\\n          </div>\\n\\n\\n          <div style=\\\"padding-top:0.1%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'DOB' | translate}}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-table grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"date\\\" name=\\\"dob\\\" [(ngModel)]=\\\"form.data.dob\\\" class=\\\"form-control\\\">\\n              </div>\\n            </div> <span  *ngIf=\\\"form.inputerror.dob != null\\\"\\n            class=\\\"alertRedColor\\\" style=\\\" color: red;\\\" > {{'dob'| translate}} </span>\\n            <!-- <span class=\\\"alertRedColor\\\" style=\\\" color: red;\\\"> {{form.inputerror.dob}} </span> -->\\n          </div>\\n\\n          <div style=\\\"padding-top:0.1%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'Gender' | translate}}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-venus grey-text\\\"></i> </div>\\n                </div>\\n                <select class=\\\"form-control\\\" name=\\\"gender\\\" id=\\\"gender\\\" [(ngModel)]=\\\"form.data.gender\\\"\\n                  style=\\\"cursor: pointer;\\\">\\n                  <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{'Please select' | translate}}</option>\\n                  <option value=\\\"Male\\\">{{'Male' | translate}} </option>\\n                  <option value=\\\"Female\\\">{{'Female' | translate}} </option>\\n                </select>\\n              </div>\\n            </div> <span  *ngIf=\\\"form.inputerror.gender != null\\\"\\n            class=\\\"alertRedColor\\\" style=\\\" color: red;\\\" > {{'gender'| translate}} </span>\\n            <!-- <span class=\\\"alertRedColor\\\" style=\\\" color: red;\\\"> {{form.inputerror.gender}} </span> -->\\n          </div>\\n          <div class=\\\"row pt-3 pl-3 pb-3\\\">\\n            <div class=\\\"col-md-3\\\"></div>\\n            <div class=\\\"pt-2\\\">\\n              <button (click)=\\\"submit()\\\" class=\\\"btn btn-success mr-2\\\">\\n                {{'Sign up' | translate}}</button>\\n            </div>\\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\n            <div class=\\\"pt-2\\\">\\n\\n              <a class=\\\"btn btn-warning mr-1\\\"[routerLink]=\\\"['/signup']\\\" (click)=\\\"exit()\\\">{{'Reset' | translate}}</a>\\n\\n\\n            </div>\\n          </div>\\n\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { HttpServiceService } from '../http-service.service';\nimport { Router } from '@angular/router';\nimport { DataValidator } from '../utility/data-validator';\nimport {ServiceLocatorService} from '../service-locator.service';\nimport { format } from 'url';\n\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html'\n})\n\nexport class SignUpComponent implements OnInit {\n\n\n  endpoint = \"http://localhost:8084/Auth/signUp\";\n\n  public form = {\n\n    error: false, //error \n    message: '', //error or success message\n    data: { id: null }, //form data\n    inputerror: {}, // form input error messages\n    \n  };\n  \n\n  \n\n  constructor(private serviceLocator:ServiceLocatorService, private httpService: HttpServiceService, private dataValidator: DataValidator, private router: Router) {\n  }\n  validate() {\n    return this.validateForm(this.form);\n  }\n\n  /**\n   * Override by childs \n   * \n   * @param form \n   */\n  validateForm(form) {\n    let flag = true;\n    let validator = this.serviceLocator.dataValidator;\n  \n    flag = flag && validator.isNotNullObject(form.firstName);\n    \n    flag = flag && validator.isNotNullObject(form.lastName);\n \n    flag = flag && validator.isNotNullObject(form.loginId);\n    \n    flag = flag && validator.isNotNullObject(form.password);\n    \n    flag = flag && validator.isNotNullObject(form.phone);\n    \n    flag = flag && validator.isNotNullObject(form.gender);\n  \n    flag = flag && validator.isNotNullObject(form.dob);\n    return flag;\n\n  }\n\n  /**\n   * Initialize component\n   */\n  ngOnInit() {\n  }\n\n  exit(){ \n   \n    location.reload();\n  }\n\n  reset(){\n    this.router.navigate(['/signup']);\n  }\n\n  submit() {\n    var _self = this;\n    this.httpService.post(this.endpoint, this.form.data,function (res) {\n\n      console.log('MyResponse', res);\n\n      _self.form.message = '';\n      _self.form.inputerror = {};\n\n      if (res.result.message) {\n        _self.form.message = res.result.message;\n      }\n\n      _self.form.error = !res.success;\n      if (_self.form.error && res.result.inputerror) {\n    \n        _self.form.inputerror = res.result.inputerror;\n\n          \n      }\n\n    });\n  }\n}\n","module.exports = \"<app-navbar></app-navbar>\\n<div  style=\\\"\\nbackground: url(assets/files/gettyimages-1132439283-640x640.jpg) no-repeat center center;\\nbackground-attachment: fixed;\\nbackground-size: cover;\\npadding-top: 5%;\\npadding-bottom: 24%;\\nwidth:100%;\\n  height: 100;\\\">\\n  <form name=\\\"rollForm\\\" (ngSubmit)=\\\"go()\\\">\\n    <div align=\\\"center\\\">\\n      <div style=\\\"font-size: 80px;\\\">\\n      <p class=\\\"font-weight-bold text-primary\\\">{{'Get Marksheet' | translate }}</p>\\n    </div>\\n    </div>\\n    <div class=\\\"row pt-4 pb-4\\\">\\n      <div class=\\\"col-sm-4 \\\"></div>\\n      <div class=\\\"col-md-2 col-sm-2 col-xs-2\\\">\\n        <input type=\\\"text\\\" name=\\\"rollNo\\\" id=\\\"rollNo\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.data.rollNo\\\"\\n          placeholder=\\\"{{'Enter Roll Number' | translate }}\\\">&emsp;</div>\\n      <div class=\\\"col-md-2 col-sm-2 col-xs-2\\\">\\n        <button type=\\\"submit\\\" [disabled]=\\\"!validate()\\\" class=\\\"btn btn-success mr-2\\\">\\n          {{'Search' | translate }}</button>\\n        <a class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/getmarksheet']\\\"> {{'Reset' | translate}} </a>\\n        \\n        &emsp;\\n\\n      </div>\\n      <div class=\\\"col-md-3 col-sm-3 col-xs-3\\\"></div>\\n\\n    </div>\\n  </form>\\n  <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n    <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n    {{form.message}}\\n  </div>\\n  <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\n    <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n    {{form.message}}\\n  </div>\\n\\n  <div class=\\\"container\\\" *ngIf=\\\"form.list.rollNo!= null\\\" >\\n\\n    <table width=\\\"100%\\\" class=\\\"table table-bordered table-striped table-hover\\\" border=\\\"3px\\\">\\n      <tr>\\n        <th id=\\\"po1\\\" colspan=\\\"2\\\">{{'RollNO' | translate }}</th>\\n        <td id=\\\"po1\\\" colspan=\\\"3\\\">{{form.list.rollNo}}</td>\\n      </tr>\\n      <tr>\\n        <th id=\\\"po1\\\" colspan=\\\"2\\\">{{'Name' | translate }}</th>\\n        <td id=\\\"po1\\\" colspan=\\\"3\\\">{{form.list.name}}</td>\\n      </tr>\\n      <tr>\\n        <th id=\\\"po1\\\">{{'Marks' | translate }}</th>\\n        <th align=\\\"center\\\" id=\\\"po1\\\">{{'Max Marks' | translate }}</th>\\n        <th  align=\\\"center\\\" id=\\\"po1\\\">{{'Min Marks' | translate }}</th>\\n        <th  align=\\\"center\\\" id=\\\"po1\\\">{{'Marks Obtain' | translate }}</th>\\n      </tr>\\n      <tr>\\n        <th id=\\\"po1\\\" colspan=\\\"2\\\">{{'Subject' | translate }}</th>\\n        \\n      </tr>\\n      <tr>\\n        <th id=\\\"po1\\\">{{'Physics' | translate }}</th>\\n        <td align=\\\"center\\\">100</td>\\n        <td align=\\\"center\\\">35</td>\\n        <td id=\\\"po1\\\" align=\\\"center\\\">\\n          <!-- <span style=\\\"color: red;\\\">{{form.list.physics}}*</span> -->\\n          <span [ngStyle]=\\\"{'color': (form.list.physics >35) ? 'green': 'red' }\\\">{{form.list.physics}}</span>\\n          \\n        </td>\\n      </tr>\\n      <tr>\\n        <th id=\\\"po1\\\">{{'Chemistry' | translate }}</th>\\n        <td align=\\\"center\\\">100</td>\\n        <td align=\\\"center\\\">35</td>\\n        <td id=\\\"po1\\\" align=\\\"center\\\">\\n          <!-- <span style=\\\"color: red;\\\">{{form.list.chemistry}}*</span>  -->\\n          <span [ngStyle]=\\\"{'color': (form.list.chemistry >35) ? 'green': 'red' }\\\">{{form.list.chemistry}}</span>\\n        </td>\\n      </tr>\\n      <tr>\\n        <th id=\\\"po1\\\">{{'Maths' | translate }}</th>\\n        <td align=\\\"center\\\">100</td>\\n        <td align=\\\"center\\\">35</td>\\n        <td id=\\\"po1\\\" align=\\\"center\\\">\\n          <!-- <span style=\\\"color: red;\\\">{{form.list.maths}}*</span> -->\\n          <span [ngStyle]=\\\"{'color': (form.list.maths >35) ? 'green': 'red' }\\\">{{form.list.maths}}</span>\\n        </td>\\n      </tr>\\n      <tr>\\n        <th id=\\\"po1\\\" colspan=\\\"2\\\">{{'Total' | translate }}</th>\\n\\n        <td id=\\\"po1\\\" colspan=\\\"3\\\" align=\\\"center\\\">{{form.list.maths+form.list.physics+form.list.chemistry}}</td>\\n      </tr>\\n      <tr>\\n\\n        <th id=\\\"po1\\\" colspan=\\\"2\\\">{{'Percentage' | translate }}</th>\\n\\n        <td id=\\\"po1\\\" colspan=\\\"3\\\" align=\\\"center\\\">\\n          {{((form.list.physics+form.list.maths+form.list.chemistry)*100)/300 | number:'2.0-2' }}%\\n        \\n          \\n        \\n        \\n        </td>\\n      </tr>\\n     <!--  <tr>\\n        <th id=\\\"po1\\\" align=\\\"center\\\" colspan=\\\"2\\\">\\n          <font color=\\\"blue\\\">{{'Grade' | translate }}</font>\\n        </th>\\n        <td id=\\\"po1\\\" align=\\\"center\\\" colspan=\\\"3\\\">\\n          <font color=\\\"green\\\"><b>{{'PASS' | translate }}</b></font>\\n        </td>\\n      </tr> -->\\n\\n      <!-- <tr>\\n        <th id=\\\"po1\\\" align=\\\"center\\\" colspan=\\\"2\\\">\\n          <font color=\\\"blue\\\">{{'Final Grade' | translate }}</font>\\n          <font color=\\\"red\\\"><b>F</b></font>\\n        </th>\\n        <td id=\\\"po1\\\" align=\\\"center\\\" colspan=\\\"3\\\">\\n          <font color=\\\"red\\\"><b>{{'FAIL' | translate }}</b></font>\\n        </td>\\n      </tr> -->\\n      <tr>\\n        <th id=\\\"po1\\\" align=\\\"center\\\" colspan=\\\"2\\\">\\n          <font color=\\\"blue\\\">{{'Final Grade' | translate }}</font>         \\n        </th>\\n        <td id=\\\"po1\\\" align=\\\"center\\\" colspan=\\\"3\\\"  *ngIf=\\\"((form.list.physics+form.list.maths+form.list.chemistry)*100)/300 > 35; else elseBlock\\\">\\n\\n          <font color=\\\"green\\\"><b>{{'Pass' | translate }}</b></font>\\n        </td>\\n        <ng-template #elseBlock><td id=\\\"po1\\\" align=\\\"center\\\" colspan=\\\"3\\\" ><font color=\\\"red\\\"><b>{{'Fail' | translate }}</b></font></td></ng-template>\\n      </tr>\\n\\n    </table>\\n    \\n</div><div style=\\\"position: relative; clear: both;\\\">\\n  <app-footer></app-footer>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ServiceLocatorService } from '../service-locator.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpServiceService } from \"../http-service.service\";\nimport { BaseCtl } from '../base.component';\nimport { NgForm} from '@angular/forms';\n\n\n\n@Component({\n  selector: 'app-getmarksheet',\n  templateUrl: './getmarksheet.component.html',\n  styleUrls: ['./marksheet.component.css']\n})\n\nexport class GetmarksheetComponent extends BaseCtl{\n\n  public form = {\n\n    error: false, //error \n    message: null, //error or success message\n    preload: [], // preload data\n    data: { id: null,rollNo : null }, //form data\n    inputerror: {}, // form input error messages\n    searchParams: {}, //search form\n    searchMessage: null, //search result message\n    list: [], // search list \n    pageNo : 0\n   \n  };\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpservice :HttpServiceService) {\n    super(locator.endpoints.Marksheet, locator, route);\n\n  }\n\n\n  \n  validate() {\n    return this.validateForm(this.form.data);\n  }\n  validateForm(form) {\n    let flag = true;\n    let validator = this.serviceLocator.dataValidator;\n    flag = flag && validator.isNotNullObject(form.rollNo);\n    return flag;\n  }\n  \n  populateForm(form, data) {\n    form.id = data.id;\n    form.rollNo = data.rollNo;\n  \n  }\n  \n  go(){\n    var _self = this;\n    console.log(\"onClickSubmit\");\n    console.log(this.form.data);\n    console.log(this.form.data.rollNo);\n    \n    \n    this.httpservice.get(\"http://localhost:8084/Marksheet/rollno/\"+this.form.data.rollNo,function (res){\n      \n      if(res.success){\n        _self.form.list = res.result.data;\n        if(_self.form.list.length == 0){\n          _self.form.message = \"No record found\";\n          _self.form.error = true;\n        }\n        console.log(\"List Size\",_self.form.list.length );\n      }else{\n        _self.form.error = false;\n        _self.form.message = res.result.message;\n      }\n      console.log('FORM', _self.form);\n    });\n  }\n\n}\n\n\n","module.exports = \"<app-navbar></app-navbar>\\n<div class=\\\"content-wrapper\\\" style=\\\"padding-top: 3%;padding-bottom: 8%; \\nbackground: url(assets/files/teahub.png) no-repeat center center;\\nbackground-repeat: no-repeat;\\nbackground-attachment: fixed;\\nbackground-size: cover;width:auto;\\n  height: 90vh;\\\">\\n  <div class=\\\"container-fluid\\\">\\n\\n    <div class=\\\"panel panel-primary\\\">\\n      <div class=\\\"panel-heading\\\" style=\\\"height: 50px;\\\">\\n        <!-- <div class=\\\"col-sm-6 p-1 text-center\\\"> -->\\n        <div class=\\\"text-center\\\">\\n          <h1 class=\\\"text-white font-weight-bold\\\">{{'Marksheet List' | translate}}</h1>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"row  pt-4 pb-4 \\\" style=\\\"margin-left:15%\\\">\\n        <div class=\\\"col-sm-2\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.name\\\"\\n            placeholder=\\\"{{'Search Name'| translate}}\\\">\\n        </div>\\n      \\n        <div class=\\\"col-sm-2\\\">\\n\\n          <select class=\\\"form-control\\\" name=\\\"id\\\" [(ngModel)]=\\\"form.searchParams.id\\\" aria-label=\\\"ngSelected\\\">\\n            <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{' Select Roll No' | translate }}</option>\\n            <option *ngFor=\\\"let obj of form.preload.marksheetList\\\" [value]=\\\"obj.key\\\">{{obj.value}}</option>\\n          </select>\\n\\n        </div>\\n        <div class=\\\"col-sm-1 ml-3\\\">\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary\\\">\\n            {{'Search'| translate}}</button>\\n        </div>\\n        &nbsp;&nbsp;&nbsp;\\n        <div class=\\\"col-lg-2 ml-4\\\">\\n          <button (click)=\\\"forward('/marksheet')\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">{{'Add Marksheet'| translate}}\\n          </button>\\n        </div>\\n        <div class=\\\"col-sm-1\\\">\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger\\\">\\n            {{'Delete'| translate}}</button>\\n        </div>\\n      </div>\\n\\n      <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n        {{form.message}}\\n      </div>\\n      <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n        {{form.message}}\\n      </div>\\n\\n      <div class=\\\"p-1\\\">\\n        <div class=\\\"table-responsive\\\">\\n          <table class=\\\"table table-bordered table-striped table-hover font-weight-bold text-white\\\">\\n            <thead class=\\\"thead-light text-uppercase\\\">\\n              <tr>\\n                <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" name=\\\"list_name\\\" value=\\\"h1\\\"\\n                    (change)=\\\"checkUncheckAll($event)\\\" /></th>\\n                <th>{{'S.No'| translate}}</th>\\n                <th>{{'RollNO'| translate}}</th>\\n                <th>{{'Name'| translate}}</th>\\n                <th>{{'Physics'| translate}}</th>\\n                <th>{{'Chemistry'| translate}}</th>\\n                <th>{{'Maths'| translate}}</th>\\n                <th>{{'Edit' | translate}}</th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr *ngFor=\\\"let m of form.list; let i = index\\\">\\n                <!-- <td> <input type=\\\"checkbox\\\" name=\\\"list_name\\\" value=\\\"{{isMasterSel}}\\\" [(ngModel)]=\\\"isMasterSel\\\" (change)=\\\"isAllSelected()\\\"/>\\n                  </td> -->\\n                <td> <input type=\\\"checkbox\\\" #checkboxes (change)=\\\"checklistUpdate()\\\" name=\\\"list_name\\\" id=\\\"{{m.id}}\\\"\\n                    value=\\\"{{isMasterSel}}\\\" />\\n                </td>\\n                <td> {{(form.pageNo*5)+i+ 1}} </td>\\n                \\n\\n                <td> {{ m.rollNo }} </td>\\n                <td> {{ m.name }} </td>\\n                <td> {{ m.physics }} </td>\\n                <td> {{ m.chemistry }} </td>\\n                <td> {{ m.maths }} </td>\\n                <td>\\n                  <a (click)=\\\"forward( '/marksheet/' +  m.id)\\\" style=\\\"cursor: pointer;\\\">\\n                    <i class=\\\"fa fa-edit text-info\\\"></i>\\n                  </a>\\n\\n                  <!-- <a (click)=\\\"delete(m.id)\\\" style=\\\"cursor: pointer;\\\">\\n                    <i class=\\\"fa fa-trash text-danger\\\"></i>\\n                  </a> -->\\n                </td>\\n\\n              </tr>\\n            </tbody>\\n          </table>\\n        </div>\\n        <table style=\\\"width: 100%;\\\">\\n          <tr>\\n            <td style=\\\"width: 50%;\\\">\\n              <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\"> {{'Previous' | translate\\n                }} </button>\\n            </td>\\n            <td *ngIf=\\\"form.list.length!=0\\\" style=\\\"width: 50%;\\\"></td>\\n            <td *ngIf=\\\"form.list.length==0\\\" style=\\\"width: 50%;\\\"><a class=\\\"btn btn-warning mr-1\\\"\\n              [routerLink]=\\\"['/marksheetlist']\\\"  (click)=\\\"exit()\\\">{{'Back' | translate}}</a></td>\\n\\n\\n\\n\\n\\n            <td><button (click)=\\\"next()\\\" [disabled]=\\\"nextList==0\\\" type=\\\"button\\\" class=\\\"btn btn-info\\\"> {{'Next' |\\n                translate }}</button></td>\\n          </tr>\\n        </table>\\n\\n      </div>\\n\\n    </div>\\n  </div>\\n  <app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\nimport { BaseListCtl } from '../base-list.component';\nimport { ServiceLocatorService } from '../service-locator.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-marksheet-list',\n  templateUrl: './marksheet-list.component.html',\n  styleUrls: ['./marksheet.component.css']\n})\n\nexport class MarksheetListComponent extends BaseListCtl {\n  imageToShow: any;\n  myKey = \"\";\n\n  \ncreateImageFromBlob(image: Blob) {\n  let reader = new FileReader();\n  reader.addEventListener(\"load\", () => {\n     this.imageToShow = reader.result;\n  \n  }, false);\n\n  if (image) {\n     reader.readAsDataURL(image);\n  }\n}\n\n public form = {\n\n   error: false, //error \n   message: null, //error or success message\n   preload: [], // preload data\n   data: { id: null}, //form data\n   inputerror: {}, // form input error messages\n   searchParams: {}, //search form\n   searchMessage: null, //search result message\n   list: [ ], // search list \n   pageNo: 0\n };\n\n\n selectedFile: File;\n retrievedImage: any;\n base64Data: any;\n retrieveResonse: any;\n message: string;\n imageName: any;\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\n    super(locator.endpoints.MARKSHEET, locator, route);\n  }\n\n  getImage(id) {\n    //Make a call to Sprinf Boot to get the Image Bytes.\n    this.form.data.id = id;\n    console.log(this.form.data.id);\n    \n    this.httpClient.get('http://localhost:8084/Marksheet/profilePic/'+this.form.data.id, { responseType: 'blob' }).subscribe(data => {\n      this.createImageFromBlob(data);\n      this.myKey= this.form.data.id;\n    }, error => {\n      \n      console.log(error);\n    });\n\n  }\n\n}\n\n\n","module.exports = \".alertRedColor {\\n    color: red;\\n}\\n\\n\\n.required-field::after { \\t\\t\\n  content: \\\"*\\\";\\t\\t\\n  color: red;\\t\\t\\n   }\\n\\n\\n.successColor{\\n    color: green;\\n   }\\n\\n\\n.btn-space {\\n    margin-right: 5px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWFya3NoZWV0L21hcmtzaGVldC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksVUFBVTtBQUNkOzs7QUFHQTtFQUNFLFlBQVk7RUFDWixVQUFVO0dBQ1Q7OztBQUVBO0lBQ0MsWUFBWTtHQUNiOzs7QUFFQTtJQUNDLGlCQUFpQjtBQUNyQiIsImZpbGUiOiJzcmMvYXBwL21hcmtzaGVldC9tYXJrc2hlZXQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5hbGVydFJlZENvbG9yIHtcbiAgICBjb2xvcjogcmVkO1xufVxuXG5cbi5yZXF1aXJlZC1maWVsZDo6YWZ0ZXIgeyBcdFx0XG4gIGNvbnRlbnQ6IFwiKlwiO1x0XHRcbiAgY29sb3I6IHJlZDtcdFx0XG4gICB9XHRcblxuICAgLnN1Y2Nlc3NDb2xvcntcbiAgICBjb2xvcjogZ3JlZW47XG4gICB9XG5cbiAgIC5idG4tc3BhY2Uge1xuICAgIG1hcmdpbi1yaWdodDogNXB4O1xufSJdfQ== */\"","module.exports = \"<app-navbar></app-navbar>\\n<style>\\n  .grad{\\n background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\n background-repeat: no repeat;\\n background-size: 100%;\\n padding-bottom: 25px\\n ;\\n }\\n\\n</style>\\n\\n<div class=\\\"row \\\" style=\\\"padding-top: 3%; padding-bottom:3%;\\nbackground: url(assets/files/wall.jpg) no-repeat center center;\\nbackground-attachment: fixed;\\nbackground-size: cover;width:auto;\\n  height: auto;\\\">\\n\\n  <div class=\\\"col-sm-4\\\"></div>\\n  <div class=\\\"col-sm-4\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-body shadow-lg grad\\\">\\n        <form>\\n          <h2 *ngIf=\\\"!form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\">{{'Add Marksheet' | translate}}</h2>\\n          <h2 *ngIf=\\\"form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\">{{'Update Marksheet' | translate}}</h2>\\n          \\n          <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{form.message}}\\n          </div>\\n          <div *ngIf=\\\"form.error && form.message != null\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{form.message}}\\n          </div>\\n\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'Roll No' | translate}}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-id-card grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"rollNo\\\" [(ngModel)]=\\\"form.data.rollNo\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter Roll No' | translate}}\\\">\\n              </div>\\n            </div>\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.rollNo}} </span>\\n          </div>\\n\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'Student' | translate}}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i> </div>\\n                </div>\\n                \\n\\n                <select class=\\\"form-control\\\" required name=\\\"studentId\\\"\\n                  [(ngModel)]=\\\"form.data.studentId\\\" style=\\\"cursor: pointer;\\\">\\n                  <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{' Select Student' | translate }}</option>\\n                  <option *ngFor=\\\"let obj of form.preload.studentList\\\" [value]=\\\"obj.id\\\">{{obj.firstName + ' ' +obj.lastName }}</option>\\n                </select>\\n              </div>\\n            </div>\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.studentId}} </span>\\n          </div>\\n\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'Physics' | translate}}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-check grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"phy\\\" [(ngModel)]=\\\"form.data.physics\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter Physics Marks' | translate}}\\\">\\n              </div>\\n            </div>\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.physics}} </span>\\n          </div>\\n\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'Chemistry' | translate}}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-check grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"chemistry\\\" [(ngModel)]=\\\"form.data.chemistry\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter Chemistry Marks' | translate}}\\\">\\n              </div>\\n            </div>\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.chemistry}} </span>\\n          </div>\\n\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'Maths' | translate}}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-check grey-text\\\"></i> </div>\\n                </div>\\n                \\n                <input type=\\\"text\\\" name=\\\"math\\\" [(ngModel)]=\\\"form.data.maths\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter Maths Marks'| translate}}\\\">\\n              </div>\\n            </div>\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.maths}} </span>\\n          </div>\\n         \\n         \\n          <div class=\\\"row pt-3 pl-3 pb-3\\\">\\n            <div class=\\\"pt-2\\\">\\n              <button *ngIf=\\\"!form.data.id>0\\\" (click)=\\\"submit()\\\"  class=\\\"btn btn-success mr-2\\\">\\n                {{'Save' | translate}}</button>\\n            </div>\\n            <div class=\\\"pt-2\\\">\\n              <button *ngIf=\\\"form.data.id>0\\\" (click)=\\\"submit()\\\" class=\\\"btn btn-success mr-2\\\">\\n                {{'Update'| translate}}</button>\\n            </div>\\n            <div class=\\\"pt-2\\\">\\n              <button (click)=\\\"forward('/marksheetlist')\\\" type=\\\"button\\\" class=\\\"btn btn-warning mr-1\\\">{{'Back'| translate}}\\n              </button>\\n            </div>\\n          </div>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\n\nimport { HttpServiceService } from '../http-service.service';\nimport { SearchResponse, RecordResponse } from '../response';\nimport { BaseCtl } from '../base.component';\nimport { ActivatedRoute } from '@angular/router';\nimport { ServiceLocatorService } from '../service-locator.service';\n\n\n@Component({\n  selector: 'app-marksheet',\n  templateUrl: './marksheet.component.html',\n  styleUrls: ['./marksheet.component.css']\n})\n\nexport class MarksheetComponent extends BaseCtl {\n\n  getKey = false;\n  selected = null;\n  fileToUpload: File = null;\n  marksheetForm: FormGroup = null;\n  uploadForm: FormGroup;\n \n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute , private httpClient: HttpClient) {\n    super(locator.endpoints.MARKSHEET, locator, route);\n\n  }\n\n  submit() {\n    var _self = this;\n    console.log('in submit');\n    console.log(this.form);\n    console.log(this.form.data);\n    this.serviceLocator.httpService.post(this.api.save, this.form.data, function (res) {\n      _self.form.message = '';\n      _self.form.data.id = res.result.data;\n      if (_self.fileToUpload) {\n        console.log('Dheeraj');\n        _self.myFile();\n      }\n      if (res.success) {\n        _self.form.message = \"Data is saved\";\n        _self.form.data.id = res.result.data;\n\n        console.log(_self.form.data.id);\n        console.log(\"----------Dheeraj----------.\");\n\n      } else {\n        _self.form.error = true;\n        if (res.result.inputerror) {\n          _self.form.inputerror = res.result.inputerror;\n        }\n        _self.form.message = res.result.message;\n      }\n      _self.form.data.id = res.result.data;\n      console.log('FORM', _self.form);\n    });\n  }\n\n\n  onFileSelect(files: FileList) {\n    this.fileToUpload = files.item(0);\n    console.log(this.fileToUpload);\n\n  }\n\n  onUpload(marksheetform: FormData) {\n    this.submit();\n    console.log(this.form.data.id + '---- after submit');\n\n  }\n\n\n  myFile() {\n    console.log(this.form.data.id + 'after super.submit-----');\n    this.onSubmitProfile(this.fileToUpload, this.marksheetForm).subscribe(data => {\n      console.log(this.fileToUpload);\n    }, error => {\n      console.log(error);\n    });\n\n  }\n\n  onSubmitProfile(fileToUpload: File,marksheetform: FormGroup) {\n    const formData = new FormData();\n    let phone = null;\n    formData.append('file', fileToUpload);\n    console.log(this.form.data.id + 'this id number ======');\n    return this.httpClient.post(\"http://localhost:8084/User/profilePic/\" + this.form.data.id, formData);\n  }\n\n  validate() { \n    return this.validateForm(this.form.data);\n  }\n\n  validateForm(form) {\n    let flag = true;\n    let validator = this.serviceLocator.dataValidator;\n    console.log('Student name :: ' + form.name);\n    flag = flag && validator.isNotNullObject(form.rollNo);\n    flag = flag && validator.isNotNullObject(form.name);\n    flag = flag && validator.isNotNullObject(form.physics);\n    flag = flag && validator.isNotNullObject(form.chemistry);\n    flag = flag && validator.isNotNullObject(form.maths);\n    return flag;\n  }\n\n  populateForm(form, data) {\n    form.id = data.id;\n    form.studentId =data.studentId;\n    form.rollNo = data.rollNo;\n    form.physics = data.physics;\n    form.chemistry = data.chemistry;\n    form.maths = data.maths;\n    form.imageId = data.imageId;\n    console.log('Populated Form', form);\n  }\n\n}\n\n\n","module.exports = \"<app-navbar></app-navbar>\\n<style>\\n  .grad{\\n  background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\n  background-repeat: no repeat;\\n  background-size: 100%;\\n  padding-bottom: 10px;\\n  }\\n  \\n</style>\\n<div class=\\\"content-wrapper\\\" style=\\\"padding-top: 1%;padding-bottom: 1%; \\nbackground: url(assets/files/gettyimages-1132439283-640x640.jpg) no-repeat center center;\\nbackground-attachment: fixed;\\nbackground-size: cover;width:auto;\\n  height: auto;\\\" >\\n  <div class=\\\"container-fluid\\\">\\n\\n    <div class=\\\"panel panel-primary\\\">\\n      <div class=\\\"panel-heading\\\" style=\\\"height: 50px;\\\">\\n        <div class=\\\"col-sm-12 pt-3\\\"> \\n          <h3 class=\\\"text-primary text-center font-weight-bold\\\">{{'Marksheet Merit List' | translate}}</h3>\\n        </div>\\n      </div>\\n\\n       <div style=\\\"margin-left: 87%;\\\" class=\\\"pb-2\\\">\\n\\n        <a href=\\\"http://localhost:8084/Jasper/report\\\" class=\\\"btn btn-lg btn-primary \\\" role=\\\"button\\\"  target=\\\"blank\\\">\\n          <span class=\\\"fa fa-print mr-1\\\"></span>{{'Print' | translate}}</a>\\n      </div> \\n\\n      <div class=\\\"p-1\\\">\\n        <div class=\\\"table-responsive\\\">\\n          <table class=\\\"table table-bordered table-striped table-hover font-weight-bold grad\\\">\\n            <thead class=\\\"thead-light text-uppercase\\\">\\n              <tr>\\n              <th >{{'S.No' | translate}}</th>\\n\\t\\t\\t\\t\\t\\t\\t<th >{{'RollNO' | translate}}  </th>\\n\\t\\t\\t\\t\\t\\t\\t<th >{{'Name' | translate}}</th>\\n\\t\\t\\t\\t\\t\\t\\t<th >{{'Physics' | translate}}</th>\\n\\t\\t\\t\\t\\t\\t\\t<th >{{'Chemistry' | translate}}</th>\\n\\t\\t\\t\\t\\t\\t\\t<th >{{'Maths' | translate}}</th>\\n\\t\\t\\t\\t\\t\\t\\t<th >{{'Total' | translate}}</th>\\n\\t\\t\\t\\t\\t\\t\\t<th >{{'Percentage(%)' | translate}}</th>\\n\\t\\t\\t\\t\\t\\t</tr>\\n          </thead>\\n\\n          <tbody>\\n\\t\\t\\t\\t\\t\\t<tr *ngFor=\\\"let m of form.list; let i = index\\\" >\\n\\t\\t\\t\\t\\t\\t\\t<td>{{(form.pageNo*5)+i+ 1}} </td>\\n\\t\\t\\t\\t\\t\\t\\t<td >{{m.rollNo}}</td>\\n\\t\\t\\t\\t\\t\\t\\t<td >{{m.name}}</td>\\n\\t\\t\\t\\t\\t\\t\\t<td >{{m.physics}}</td>\\n              <td> {{m.chemistry}}</td>\\n              <td> {{m.maths}}</td>\\n              <td>{{m.physics+m.maths+m.chemistry}}</td>\\n              <td>{{((m.physics+m.maths+m.chemistry)*100)/300 | number:'2.0-2' }}%</td>\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t</tr>\\n          </tbody>\\n          </table>\\n      </div>\\n\\n      <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n        {{form.message}}\\n      </div>\\n      <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n        {{form.message}}\\n      </div>\\n      <div class=\\\"p-1\\\">\\n        <div class=\\\"table-responsive\\\">\\n\\n        </div>\\n      </div>\\n\\n    </div>\\n\\n  </div>\\n</div><app-footer>\\n  \\n</app-footer>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ServiceLocatorService } from '../service-locator.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpServiceService } from \"../http-service.service\";\nimport { BaseCtl } from '../base.component';\n\n@Component({\n  selector: 'app-marksheetmerit-list',\n  templateUrl: './marksheetmerit-list.component.html',\n  styleUrls: ['./marksheet.component.css']\n})\n\nexport class MarksheetmeritListComponent extends BaseCtl{\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpservice :HttpServiceService) {\n    super(locator.endpoints.Marksheet, locator, route);\n\n  }\n  ngOnInit() {\n    this.getMeritList();\n  }\n\n  getMeritList(){\n    var _self = this;\n  \n    this.httpservice.get(\"http://localhost:8084/Marksheet/meritlist\",function (res){\n      \n      if(res.success){\n        _self.form.list = res.result.list;\n        if(_self.form.list.length == 0){\n          _self.form.message = \"No record found\";\n          _self.form.error = true;\n        }\n        console.log(\"List Size\",_self.form.list.length );\n      }else{\n        _self.form.error = false;\n        _self.form.message = res.result.message;\n      }\n      console.log('FORM', _self.form);\n    });\n  }\n  \n  \n}\n\n\n","module.exports = \"<app-navbar></app-navbar>\\n<div class=\\\"content-wrapper\\\" style=\\\"padding-top: 3%; padding-bottom: 15%; background-image: url(../../assets/files/gettyimages-1132439283-640x640.jpg); background-repeat: no-repeat, repeat;\\nbackground-attachment: fixed;\\nbackground-size: cover;width:auto;\\n  height: auto;\\\">\\n  <div class=\\\"container-fluid\\\">\\n\\n    <div class=\\\"panel panel-primary\\\">\\n      <div class=\\\"panel-heading\\\" style=\\\"height: 50px;\\\">\\n        <div class=\\\"col-sm-6 p-1\\\">\\n          <h4 class=\\\"text-primary font-weight-bold\\\">{{'Message List' | translate}}</h4>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"row p-1\\\">\\n\\n        <div class=\\\"col-sm-3\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.subject\\\"\\n            placeholder=\\\"{{'Search Subject' | translate}}\\\">\\n        </div>\\n        <div class=\\\"col-sm-3\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.body\\\"\\n            placeholder=\\\"{{'Search Body' | translate}}\\\">\\n        </div>\\n\\n        <div class=\\\"col-sm-1\\\">\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary\\\">\\n            {{'Search' | translate}}</button></div>\\n        <div class=\\\"col=sm-1\\\">\\n          <button (click)=\\\"forward('/message')\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">{{'Add Message'| translate}}\\n          </button></div>\\n\\n      </div>\\n\\n      <div class=\\\"row p-1\\\">\\n        <div class=\\\"col-lg-1\\\">\\n          <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\"> {{'Previous'| translate}}\\n          </button>\\n        </div>\\n        <div class=\\\"col-lg-1\\\">\\n          <button (click)=\\\"next()\\\" class=\\\"btn btn-info\\\">{{'Next'| translate}} </button>\\n        </div>\\n        <div class=\\\"col-lg-2\\\">\\n\\n        </div>\\n      </div>\\n\\n      <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n        {{form.message}}\\n      </div>\\n      <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n        {{form.message}}\\n      </div>\\n\\n      <div class=\\\"p-1\\\">\\n        <div class=\\\"table-responsive\\\">\\n          <table class=\\\"table table-bordered table-striped table-hover\\\">\\n            <thead class=\\\"thead-light text-uppercase\\\">\\n              <tr>\\n                <th>{{'S.No'| translate}}</th>\\n                <th>{{'Code'| translate}}</th>\\n                <th>{{'Subject' | translate}}</th>\\n                <th>{{'Body'| translate}}</th>\\n                <th>{{'Type'| translate}}</th>\\n                <th>{{'Status'| translate}}</th>\\n                <th>#</th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr *ngFor=\\\"let m of form.list; let i = index\\\">\\n                <td> {{(form.pageNo*5)+i+ 1}} </td>\\n                <td> {{ m.code }} </td>\\n                <td> {{ m.subject }} </td>\\n                <td> {{ m.body }} </td>\\n                <td> {{ m.type }} </td>\\n                <td> {{ m.status }} </td>\\n                <td>\\n                  <a (click)=\\\"forward( '/message/' +  m.id)\\\" style=\\\"cursor: pointer;\\\">\\n                    <i class=\\\"fa fa-edit text-info\\\"></i>\\n                  </a>\\n                  /\\n                  <a (click)=\\\"delete(m.id)\\\" style=\\\"cursor: pointer;\\\">\\n                    <i class=\\\"fa fa-trash text-danger\\\"></i>\\n                  </a>\\n                </td>\\n              </tr>\\n            </tbody>\\n          </table>\\n        </div>\\n      </div>\\n\\n    </div>\\n  </div>\\n</div>\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ServiceLocatorService } from '../service-locator.service';\nimport { BaseListCtl } from '../base-list.component';\n\n\n@Component({\n  selector: 'app-message-list',\n  templateUrl: './message-list.component.html',\n  styleUrls: ['./message.component.css']\n})\n\nexport class MessageListComponent extends BaseListCtl {\n\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute) {\n    super(locator.endpoints.MESSAGE, locator, route);\n  }\n\n}\n","module.exports = \".alertRedColor {\\n    color: red;\\n}\\n\\n\\n.required-field::after { \\t\\t\\n  content: \\\"*\\\";\\t\\t\\n  color: red;\\t\\t\\n   }\\n\\n\\n.successColor{\\n    color: green;\\n   }\\n\\n\\n.btn-space {\\n    margin-right: 5px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWVzc2FnZS9tZXNzYWdlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxVQUFVO0FBQ2Q7OztBQUdBO0VBQ0UsWUFBWTtFQUNaLFVBQVU7R0FDVDs7O0FBRUE7SUFDQyxZQUFZO0dBQ2I7OztBQUVBO0lBQ0MsaUJBQWlCO0FBQ3JCIiwiZmlsZSI6InNyYy9hcHAvbWVzc2FnZS9tZXNzYWdlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYWxlcnRSZWRDb2xvciB7XG4gICAgY29sb3I6IHJlZDtcbn1cblxuXG4ucmVxdWlyZWQtZmllbGQ6OmFmdGVyIHsgXHRcdFxuICBjb250ZW50OiBcIipcIjtcdFx0XG4gIGNvbG9yOiByZWQ7XHRcdFxuICAgfVx0XG5cbiAgIC5zdWNjZXNzQ29sb3J7XG4gICAgY29sb3I6IGdyZWVuO1xuICAgfVxuXG4gICAuYnRuLXNwYWNlIHtcbiAgICBtYXJnaW4tcmlnaHQ6IDVweDtcbn0iXX0= */\"","module.exports = \"<app-navbar></app-navbar>\\n<div class=\\\"row \\\" style=\\\"padding-top: 3%; padding-bottom:3%; background-image: url(../../assets/files/gettyimages-1132439283-640x640.jpg);\\nbackground-attachment: fixed;\\nbackground-size: cover;width:auto;height: auto;\\\">\\n\\n  <div class=\\\"col-sm-4\\\"></div>\\n  <div class=\\\"col-sm-4\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-body shadow-lg\\\">\\n        <form>\\n          <h2 *ngIf=\\\"!form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\">{{'Add Message' | translate}}</h2>\\n          <h2 *ngIf=\\\"form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\">{{'Update Message' | translate}} </h2>\\n\\n\\n          <!-- <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{form.message}}\\n          </div> -->\\n          <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{form.message}}\\n          </div>\\n\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'Type' | translate}}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-comment grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"type\\\" [(ngModel)]=\\\"form.data.type\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter Message Type' | translate}}\\\">\\n              </div>\\n            </div>\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.type}} </span>\\n          </div>\\n\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'Code' | translate}}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-commenting grey-text\\\"></i> </div>\\n                </div>\\n                <select class=\\\"form-control\\\" name=\\\"code\\\" id=\\\"code\\\" [(ngModel)]=\\\"form.data.code\\\"\\n                  style=\\\"cursor: pointer;\\\">\\n                  <option selected=\\\"true\\\">{{'Please select'  | translate }}</option>\\n                  <option value=\\\"U-FP\\\">U-FP </option>\\n                  <option value=\\\"U-REG\\\">U-REG </option>\\n                  <option value=\\\"U-CP\\\">U-CP</option>\\n                </select>\\n\\n              </div>\\n            </div>\\n            <span class=\\\"alertRedColor\\\">{{form.inputerror.code}}</span>\\n          </div>\\n\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'Subject' | translate}}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-comments grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"subject\\\" [(ngModel)]=\\\"form.data.subject\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter Message Subject'| translate}}\\\">\\n              </div>\\n            </div>\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.subject}} </span>\\n          </div>\\n\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'Body' | translate}}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"body\\\" [(ngModel)]=\\\"form.data.body\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter Message Body' | translate}}\\\">\\n              </div>\\n            </div>\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.body}} </span>\\n          </div>\\n\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'Status' | translate}}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-flag grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"status\\\" [(ngModel)]=\\\"form.data.status\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter Message Status' | translate}}\\\">\\n              </div>\\n            </div>\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.status}} </span>\\n          </div>\\n\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'HTML' | translate}}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-venus grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"html\\\" [(ngModel)]=\\\"form.data.html\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter Message HTML' | translate}}\\\">\\n              </div>\\n            </div>\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.html}} </span>\\n          </div>\\n\\n          <div class=\\\"row pt-3 pl-3 pb-3\\\">\\n            <div class=\\\"pt-2\\\">\\n              <button *ngIf=\\\"!form.data.id>0\\\" (click)=\\\"submit()\\\"  class=\\\"btn btn-success mr-2\\\">\\n                {{'Save' | translate}}</button>\\n            </div>\\n\\n            <div class=\\\"pt-2\\\">\\n              <button *ngIf=\\\"form.data.id>0\\\" (click)=\\\"submit()\\\" class=\\\"btn btn-success mr-2\\\">\\n                {{'Update' | translate}}</button>\\n            </div>\\n\\n            <div class=\\\"pt-2\\\">\\n              <button (click)=\\\"forward('/messagelist')\\\" type=\\\"button\\\"\\n                class=\\\"btn btn-warning mr-1\\\">{{'List' | translate}}\\n              </button></div>\\n          </div>\\n        </form>\\n\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { HttpServiceService } from '../http-service.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { DataValidator } from '../utility/data-validator';\nimport { ServiceLocatorService } from '../service-locator.service';\nimport { BaseCtl } from '../base.component';\n\n\n@Component({\n  selector: 'app-message',\n  templateUrl: './message.component.html',\n  styleUrls: ['./message.component.css']\n})\n\nexport class MessageComponent extends BaseCtl {\n\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute) {\n    super(locator.endpoints.MESSAGE, locator, route);\n  }\n\n  validateForm(form) {\n    let flag = true;\n    let validator = this.serviceLocator.dataValidator;\n    flag = flag && validator.isNotNullObject(form.type);\n    flag = flag && validator.isNotNullObject(form.code);\n    flag = flag && validator.isNotNullObject(form.subject);\n    flag = flag && validator.isNotNullObject(form.body);\n    return flag;\n  }\n\n  populateForm(form, data) {\n    form.id = data.id;\n    form.code = data.code;\n    form.type = data.type;\n    form.subject = data.subject;\n    form.body = data.body;\n    form.status = data.status;\n    form.html = data.html;\n    console.log('Populated Form', form);\n  }\n}\n","module.exports = \"navbar{\\n    position: fixed;\\n    top: 0px;\\n    height: 40px;\\n    width: 100%;\\n    z-index: 1000;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbmF2YmFyL25hdmJhci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZUFBZTtJQUNmLFFBQVE7SUFDUixZQUFZO0lBQ1osV0FBVztJQUNYLGFBQWE7QUFDakIiLCJmaWxlIjoic3JjL2FwcC9uYXZiYXIvbmF2YmFyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJuYXZiYXJ7XG4gICAgcG9zaXRpb246IGZpeGVkO1xuICAgIHRvcDogMHB4O1xuICAgIGhlaWdodDogNDBweDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICB6LWluZGV4OiAxMDAwO1xufSJdfQ== */\"","module.exports = \"<style type=\\\"text/css\\\">\\n  .raj {\\n    background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\n  }\\n\\n  .c1 {\\n    color: rgb(235, 6, 6);\\n  }\\n</style>\\n\\n<div class=\\\"header\\\">\\n  <nav *ngIf=\\\"!isLogin()\\\" class=\\\"navbar navbar-expand-lg raj\\\">\\n    <div class=\\\"logo\\\">\\n      <a class=\\\"nav-link\\\" [routerLink]=\\\"['/dashboard']\\\">\\n        <!-- <strong class=\\\"text-white\\\">Rays</strong> -->\\n        <img src=\\\"assets\\\\files\\\\sage.jpeg\\\" height=\\\"40px\\\" width=\\\"120px\\\">\\n      </a>\\n    </div>\\n    <select #locale (change)='changeLocale(locale.value)' class=\\\"c1\\\">\\n      <option value=\\\"en\\\">{{'Select Language' | translate }}</option>\\n\\n      <option value=\\\"en\\\" style=\\\"color: red;\\\">English</option>\\n      <option value=\\\"hi\\\" style=\\\"color: red;\\\">{{'Hindi' | translate }}</option>\\n    </select>\\n\\n\\n    <button class=\\\"navbar-toggler navbar-light\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarNav\\\"\\n      aria-controls=\\\"navbarNav\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarNav\\\" style=\\\"font-size: 15px;\\\">\\n      <ul class=\\\"navbar-nav ml-auto\\\" style=\\\"padding-right: 6.5%;\\\">\\n\\n        <li class=\\\"nav-item dropdown\\\"><a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['myNav']\\\" id=\\\"navbarDropdown\\\"\\n            role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n            <font style=\\\"color: white;\\\">{{'Hi,Guest'| translate}}\\n            </font>\\n          </a>\\n\\n          <div class=\\\"dropdown-menu\\\" id=\\\"myNav\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n            <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/login']\\\"><i class=\\\"fa fa-user\\\"></i> &nbsp; &nbsp; &nbsp; {{'Log\\n              in' | translate}}</a>\\n            <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/signup']\\\"><i class=\\\" fa fa-users\\\"></i> &nbsp; {{'User\\n              Registration' |\\n              translate}}</a>\\n          </div>\\n        </li>\\n        <li>\\n\\n        </li>\\n      </ul>\\n    </div>\\n\\n  </nav>\\n</div>\\n\\n\\n<!-- this code is After login   -->\\n\\n<nav *ngIf=\\\"isLogin()\\\" class=\\\"navbar navbar-expand-lg raj\\\">\\n\\n  <div class=\\\"logo\\\">\\n    <a class=\\\"nav-link\\\" [routerLink]=\\\"['/dashboard']\\\">\\n      <!-- <strong class=\\\"text-white\\\">Rays</strong> -->\\n      <img src=\\\"assets\\\\files\\\\custom.png\\\" height=\\\"40px\\\" width=\\\"120px\\\">\\n    </a>\\n  </div>\\n  <!-- <strong class=\\\"text-white\\\">NCS Pvt Ltd</strong> -->\\n\\n\\n  <select #locale (click)='changeLocale(locale.value)'>\\n    <option value=\\\"en\\\">{{'Select Language' | translate }}</option>\\n    <option value=\\\"en\\\">English</option>\\n    <option value=\\\"hi\\\">{{'Hindi' | translate }}</option>\\n  </select>\\n\\n\\n  <button class=\\\"navbar-toggler navbar-light\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarNav\\\"\\n    aria-controls=\\\"navbarNav\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarNav\\\">\\n\\n\\n    <div class=\\\"col-sm-2\\\"></div>\\n\\n\\n\\n    <ul class=\\\"nav navbar-nav pl-2 \\\">\\n\\n\\n      <li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px;\\\"><a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\"\\n          id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n          <font style=\\\"color: white;\\\">{{'User' | translate}}</font>\\n        </a>\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/user']\\\"><i class=\\\"fa fa-user\\\"></i> &nbsp; &nbsp;{{'Add User' |\\n            translate}}</a>\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/userlist']\\\"><i class=\\\"fa fa-list\\\"></i>&nbsp; {{'User List' |\\n            translate}}</a>\\n        </div>\\n      </li>\\n\\n\\n\\n\\n      <!--\\n<li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px;\\\">\\n  <a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\" id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n    <font style=\\\"color: white;\\\">{{'Patient' | translate}}</font>\\n  </a>\\n  <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n    <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/patient']\\\">\\n      <i class=\\\"fa fa-user\\\"></i> &nbsp; &nbsp;{{'Add patient' | translate}}\\n    </a>\\n    <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/patientlist']\\\">\\n      <i class=\\\"fa fa-list\\\"></i>&nbsp; {{'patient List' | translate}}\\n    </a>\\n  </div>\\n</li>\\n\\n<li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px;\\\">\\n  <a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\" id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n    <font style=\\\"color: white;\\\">{{'Supplier' | translate}}</font>\\n  </a>\\n  <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n    <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/supplier']\\\">\\n      <i class=\\\"fa fa-user\\\"></i> &nbsp; &nbsp;{{'Add supplier' | translate}}\\n    </a>\\n    <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/supplierlist']\\\">\\n      <i class=\\\"fa fa-list\\\"></i>&nbsp; {{'supplier List' | translate}}\\n    </a>\\n  </div>\\n</li>  \\n\\n<li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px;\\\">\\n  <a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\" id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n    <font style=\\\"color: white;\\\">{{'Vehicle Tracking' | translate}}</font>\\n  </a>\\n  <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n    <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/vehicletracking']\\\">\\n      <i class=\\\"fa fa-user\\\"></i> &nbsp; &nbsp;{{'Add vehicle tracking' | translate}}\\n    </a>\\n    <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/vehicletrackinglist']\\\">\\n      <i class=\\\"fa fa-list\\\"></i>&nbsp; {{'vehicle tracking List' | translate}}\\n    </a>\\n  </div>\\n</li>\\n\\n<li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px;\\\">\\n  <a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\" id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n    <font style=\\\"color: white;\\\">{{'Inventory' | translate}}</font>\\n  </a>\\n  <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n    <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/inventory']\\\">\\n      <i class=\\\"fa fa-user\\\"></i> &nbsp; &nbsp;{{'Add inventory' | translate}}\\n    </a>\\n    <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/inventorylist']\\\">\\n      <i class=\\\"fa fa-list\\\"></i>&nbsp; {{'inventory List' | translate}}\\n    </a>\\n  </div>\\n</li>\\n\\n<li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px;\\\">\\n  <a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\" id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n    <font style=\\\"color: white;\\\">{{'Transportation' | translate}}</font>\\n  </a>\\n  <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n    <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/transportation']\\\">\\n      <i class=\\\"fa fa-user\\\"></i> &nbsp; &nbsp;{{'Add transportation' | translate}}\\n    </a>\\n    <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/transportationlist']\\\">\\n      <i class=\\\"fa fa-list\\\"></i>&nbsp; {{'transportation List' | translate}}\\n    </a>\\n  </div>\\n</li>\\n\\n<li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px;\\\">\\n  <a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\" id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n    <font style=\\\"color: white;\\\">{{'Route' | translate}}</font>\\n  </a>\\n  <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n    <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/route']\\\">\\n      <i class=\\\"fa fa-user\\\"></i> &nbsp; &nbsp;{{'Add route' | translate}}\\n    </a>\\n    <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/routelist']\\\">\\n      <i class=\\\"fa fa-list\\\"></i>&nbsp; {{'route List' | translate}}\\n    </a>\\n  </div>\\n</li>\\n\\n<li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px;\\\">\\n  <a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\" id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n    <font style=\\\"color: white;\\\">{{'Issue' | translate}}</font>\\n  </a>\\n  <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n    <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/issue']\\\">\\n      <i class=\\\"fa fa-user\\\"></i> &nbsp; &nbsp;{{'Add issue' | translate}}\\n    </a>\\n    <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/issuelist']\\\">\\n      <i class=\\\"fa fa-list\\\"></i>&nbsp; {{'issue List' | translate}}\\n    </a>\\n  </div>\\n</li>\\n\\n<li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px;\\\">\\n  <a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\" id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n    <font style=\\\"color: white;\\\">{{'Employee' | translate}}</font>\\n  </a>\\n  <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n    <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/employee']\\\">\\n      <i class=\\\"fa fa-user\\\"></i> &nbsp; &nbsp;{{'Add employee' | translate}}\\n    </a>\\n    <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/employeelist']\\\">\\n      <i class=\\\"fa fa-list\\\"></i>&nbsp; {{'employee List' | translate}}\\n    </a>\\n  </div>\\n</li>\\n\\n<li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px;\\\">\\n  <a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\" id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n    <font style=\\\"color: white;\\\">{{'Job' | translate}}</font>\\n  </a>\\n  <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n    <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/job']\\\">\\n      <i class=\\\"fa fa-user\\\"></i> &nbsp; &nbsp;{{'Add job' | translate}}\\n    </a>\\n    <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/joblist']\\\">\\n      <i class=\\\"fa fa-list\\\"></i>&nbsp; {{'job List' | translate}}\\n    </a>\\n  </div>\\n</li>\\n\\n<li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px;\\\">\\n  <a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\" id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n    <font style=\\\"color: white;\\\">{{'Transactions' | translate}}</font>\\n  </a>\\n  <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n    <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/transactions']\\\">\\n      <i class=\\\"fa fa-user\\\"></i> &nbsp; &nbsp;{{'Add Transactions' | translate}}\\n    </a>\\n    <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/transactionslist']\\\">\\n      <i class=\\\"fa fa-list\\\"></i>&nbsp; {{'Transactions List' | translate}}\\n    </a>\\n  </div>\\n</li>\\n\\n<li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px;\\\">\\n  <a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\" id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n    <font style=\\\"color: white;\\\">{{'Project' | translate}}</font>\\n  </a>\\n  <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n    <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/project']\\\">\\n      <i class=\\\"fa fa-user\\\"></i> &nbsp; &nbsp;{{'Add project' | translate}}\\n    </a>\\n    <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/projectlist']\\\">\\n      <i class=\\\"fa fa-list\\\"></i>&nbsp; {{'project List' | translate}}\\n    </a>\\n  </div>\\n</li>\\n\\n<li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px;\\\">\\n  <a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\" id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n    <font style=\\\"color: white;\\\">{{'ATMs' | translate}}</font>\\n  </a>\\n  <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n    <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/atms']\\\">\\n      <i class=\\\"fa fa-user\\\"></i> &nbsp; &nbsp;{{'Add ATMs' | translate}}\\n    </a>\\n    <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/atmslist']\\\">\\n      <i class=\\\"fa fa-list\\\"></i>&nbsp; {{'ATMs List' | translate}}\\n    </a>\\n  </div>\\n</li>\\n\\n<li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px;\\\">\\n  <a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\" id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n    <font style=\\\"color: white;\\\">{{'Customer' | translate}}</font>\\n  </a>\\n  <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n    <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/customer']\\\">\\n      <i class=\\\"fa fa-user\\\"></i> &nbsp; &nbsp;{{'Add customer' | translate}}\\n    </a>\\n    <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/customerlist']\\\">\\n      <i class=\\\"fa fa-list\\\"></i>&nbsp; {{'job list' | translate}}\\n    </a>\\n  </div>\\n</li>\\n\\n<li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px;\\\">\\n  <a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\" id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n    <font style=\\\"color: white;\\\">{{'Company' | translate}}</font>\\n  </a>\\n  <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n    <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/company']\\\">\\n      <i class=\\\"fa fa-user\\\"></i> &nbsp; &nbsp;{{'Add company' | translate}}\\n    </a>\\n    <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/companylist']\\\">\\n      <i class=\\\"fa fa-list\\\"></i>&nbsp; {{'company List' | translate}}\\n    </a>\\n  </div>\\n</li>\\n-->\\n\\n\\n      <li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px;\\\"><a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\"\\n          id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n          <font style=\\\"color: white;\\\">{{'Order' | translate}}</font>\\n        </a>\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/order']\\\"><i class=\\\"fa fa-user\\\"></i> &nbsp; &nbsp;{{'Add Order' |\\n            translate}}</a>\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/orderlist']\\\"><i class=\\\"fa fa-list\\\"></i>&nbsp; {{'Order List' |\\n            translate}}</a>\\n        </div>\\n      </li>\\n\\n\\n    <!--  <li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px;\\\">\\n        <a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\" id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\"\\n          aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n          <font style=\\\"color: white;\\\">{{'Supplier' | translate}}</font>\\n        </a>\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/supplier']\\\">\\n            <i class=\\\"fa fa-user\\\"></i> &nbsp; &nbsp;{{'Add supplier' | translate}}\\n          </a>\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/supplierlist']\\\">\\n            <i class=\\\"fa fa-list\\\"></i>&nbsp; {{'supplier List' | translate}}\\n          </a>\\n        </div>\\n      </li>\\n\\n\\n\\n      <li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px;\\\"><a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\"\\n          id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n          <font style=\\\"color: white;\\\">{{'Owner' | translate}}</font>\\n        </a>\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/owner']\\\"><i class=\\\"fa fa-user\\\"></i> &nbsp; &nbsp;{{'Add Owner' |\\n            translate}}</a>\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/ownerlist']\\\"><i class=\\\"fa fa-list\\\"></i>&nbsp; {{'Owner List' |\\n            translate}}</a>\\n        </div>\\n      </li>\\n-->\\n\\n\\n      <li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px\\\"><a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\"\\n          id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n          <font style=\\\"color: white;\\\">{{'Marksheet' | translate}}</font>\\n        </a>\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/marksheet']\\\"><i class=\\\"fa fa-file\\\"></i> &nbsp; {{'Add Marksheet' |\\n            translate}}</a> <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/marksheetlist']\\\"><i class=\\\"fa fa-paste\\\"></i>\\n            &nbsp;\\n            {{'Marksheet List' | translate}}</a> <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/marksheetmeritlist']\\\"><i\\n              class=\\\" fa fa-list\\\"></i> &nbsp; {{'Marksheet Merit List' | translate}} </a>\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/getmarksheet']\\\"><i class=\\\"fa fa-copy\\\"></i> &nbsp; {{'Get Marksheet'\\n            |\\n            translate}}</a>\\n        </div>\\n      </li>\\n      <li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px\\\"><a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\"\\n          id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n          <font style=\\\"color: white;\\\">{{'Role' | translate}}</font>\\n        </a>\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/role']\\\"><i class=\\\"fa fa-user\\\"></i> &nbsp; &nbsp; {{'Add Role' |\\n            translate}}</a> <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/rolelist']\\\"><i class=\\\"fa fa-users\\\"></i> &nbsp;\\n            {{'Role List' |\\n            translate}}</a>\\n        </div>\\n      </li>\\n<!--\\n      <li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px\\\"><a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\"\\n          id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n          <font style=\\\"color: white;\\\">{{'Product' | translate}}</font>\\n        </a>\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/product']\\\"><i class=\\\"fa fa-user\\\"></i> &nbsp; &nbsp; {{'Add product'\\n            |\\n            translate}}</a> <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/productlist']\\\"><i class=\\\"fa fa-users\\\"></i> &nbsp;\\n            {{'Product List' |\\n            translate}}</a>\\n        </div>\\n\\n      </li>\\n\\n      -->\\n\\n      <li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px\\\"><a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\"\\n          id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n          <font style=\\\"color: white;\\\">{{'College' | translate}}</font>\\n        </a>\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/college']\\\"><i class=\\\"fa fa-university\\\"></i> &nbsp; {{'Add College' |\\n            translate}}</a> <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/collegelist']\\\"><i class=\\\"fa fa-building\\\"></i>\\n            &nbsp;\\n            {{'College List' | translate}} </a>\\n        </div>\\n      </li>\\n      <li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px\\\"><a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\"\\n          id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n          <font style=\\\"color: white;\\\">{{'Course' | translate}}\\n          </font>\\n        </a>\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/course']\\\"><i class=\\\"fa fa-book\\\"></i> &nbsp; {{'Add Course' |\\n            translate}}</a> <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/courselist']\\\"><i class=\\\"fa fa-list\\\"></i> &nbsp;\\n            {{'Course List'\\n            | translate}} </a>\\n        </div>\\n      </li>\\n      <li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px\\\"><a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\"\\n          id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n          <font style=\\\"color: white;\\\">{{'Student' | translate}}</font>\\n        </a>\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/student']\\\"><i class=\\\"fa fa-user\\\"></i> &nbsp; {{'Add Student' |\\n            translate}}</a> <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/studentlist']\\\"><i class=\\\"fa fa-users\\\"></i> &nbsp;\\n            {{'Student\\n            List' | translate}}</a>\\n        </div>\\n      </li>\\n      <li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px\\\"><a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\"\\n          id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n          <font style=\\\"color: white;\\\">{{'Faculty' | translate}}\\n          </font>\\n        </a>\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/faculty']\\\"><i class=\\\"fa fa-users\\\"></i> &nbsp; {{'Add Faculty' |\\n            translate}}</a> <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/facultylist']\\\"><i class=\\\" fa fa-list\\\"></i> &nbsp;\\n            {{'Faculty\\n            List' | translate}}</a>\\n        </div>\\n      </li>\\n\\n      <li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px\\\"><a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\"\\n          id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n          <font style=\\\"color: white;\\\">{{'TimeTable' | translate}}</font>\\n        </a>\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/timetable']\\\"><i class=\\\"fa fa-clock-o\\\"></i> &nbsp; {{'Add TimeTable'\\n            | translate}}</a> <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/timetablelist']\\\"><i class=\\\"fa fa-list\\\"></i>\\n            &nbsp;\\n            {{'TimeTable List' | translate}}</a>\\n        </div>\\n      </li>\\n      <li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px\\\"><a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\"\\n          id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n          <font style=\\\"color: white;\\\">{{'Subject' | translate}}</font>\\n        </a>\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/subject']\\\"><i class=\\\"fa fa-calculator\\\"></i> &nbsp; {{'Add Subject' |\\n            translate}}</a> <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/subjectlist']\\\"> <i class=\\\"fa fa-list\\\"></i> &nbsp;\\n            {{'Subject\\n            List' | translate}}\\n          </a>\\n        </div>\\n      </li>\\n\\n      <li class=\\\"nav-item dropdown\\\" style=\\\"padding-left: 5px\\\"><a class=\\\"nav-link dropdown-toggle\\\" [routerLink]=\\\"['/#']\\\"\\n          id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n          <font style=\\\"color: white;\\\">{{form.data.fname }} ({{form.data.role}})\\n          </font>\\n        </a>\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n\\n          <a class=\\\"dropdown-item\\\" (click)=\\\"forward()\\\"><i class=\\\" fa fa-user-md\\\"></i> &nbsp; {{'My Profile' |\\n            translate}}</a>\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/changepassword']\\\"><i class=\\\" fa fa-key\\\"></i> &nbsp; {{'Change\\n            Password' |\\n            translate}}</a>\\n          <a class=\\\"dropdown-item\\\" [routerLink]=\\\"\\\" (click)=\\\"goToLink()\\\"><i class=\\\"fa fa-file\\\"></i> &nbsp;{{'Java Doc' |\\n            translate}}</a>\\n\\n          <a class=\\\"dropdown-item\\\" (click)=\\\"logout()\\\"><i class=\\\" fa fa-lock\\\"></i> &nbsp;&nbsp;{{'Log Out' |\\n            translate}}</a>\\n        </div>\\n      </li>\\n    </ul>\\n  </div>\\n</nav>\\n\\n<div>\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { HttpServiceService} from '../http-service.service';\nimport { ServiceLocatorService} from '../service-locator.service';\n\nimport {TranslateService} from '@ngx-translate/core';\nimport { HttpClient} from '@angular/common/http'\n\n\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n  loginId: string;\n  userid : string;\n \n  constructor(private translate: TranslateService, private route : ActivatedRoute, private httpService : HttpServiceService,private myservice: HttpClient ,private servicelocator : ServiceLocatorService) { \n\n    console.log('DefaultLang ' + localStorage.getItem(\"locale\"));\n    if(localStorage.getItem(\"locale\")!=null){\n    translate.setDefaultLang(localStorage.getItem(\"locale\"));\n    }else{\n      translate.setDefaultLang(\"en\");\n    }\n   \n  }\n\n  changeLocale(locale:string){\n    localStorage.setItem(\"locale\",locale);\n    this.translate.use(localStorage.getItem(\"locale\"));\n     console.log('Locale ' + locale);\n   }\n\n   public form = {\n\n    error: false, //error \n    message: null, //error or success message\n    firstName : null,\n    data: { id: null, fname: null, lname : null, role: null, loginId : null }, //form data\n    inputerror: {}, // form input error messages\n    searchParams: {}, //search form\n    searchMessage: null, //search result message\n    list: [], // search list \n  \n  };\n  ngOnInit() {\n    // var _self = this;\n    // this.httpService.get(\"http://localhost:8080/Auth/menu\",function (res){\n      \n    //   if(res.success){\n    //     _self.form.list = res.result.list;\n      \n    //   }else{\n    //     _self.form.error = false;\n    //     _self.form.message = res.result.message;\n    //   }\n    //   console.log('FORM', _self.form);\n    // });\n  }\n\n  forward(){\n    this.userid = localStorage.getItem(\"userid\");\n    console.log('UID---' + this.userid)\n    \n    this.servicelocator.forward(\"/user/\"+this.userid);\n   \n  }\n  isLogin() {\n    let check = localStorage.getItem('fname');\n    if (check != \"null\" && check != null) {\n      this.form.data.fname = localStorage.getItem(\"fname\");\n      this.form.data.lname = localStorage.getItem(\"lname\");\n      this.form.data.loginId = localStorage.getItem(\"loginId\");\n      this.form.data.role = localStorage.getItem(\"role\"); \n\n\n     // console.log('fname is ---->>>' + this.form.data.fname);\n      return true;\n    } else {\n      return false;\n  }\n  }\n  goToLink() {\n    window.open('assets/doc/index.html', '_blank');\n  }\n  logout() {\n    var _self = this;\n\n    console.log('Logout', this.form);\n\n    // let url = this.servicelocator.endpoints.getEndpoint(this.servicelocator.endpoints.AUTH, \"logout\");\n\n    // this.servicelocator.httpService.post(url, this.form, function (res, error) {\n\n    //   if (error) {\n    //     alert(error);\n    //     return;\n    //   }\n    //   _self.loginId = \"null\";\n    //   localStorage.removeItem(\"token\");\n    //   localStorage.removeItem(\"fname\");\n    //   localStorage.removeItem(\"lname\");\n    //   localStorage.removeItem(\"loginId\");\n    //   localStorage.removeItem(\"role\")\n\n\n\n    //   console.log('After logout jsessionid---' +localStorage.getItem(\"JSESSIONID\") + \"  logout Pushpendra Singh Kushwah\");\n    \n\n      \n    //   this.form.message = \"Logout Successfully\";\n    //   console.log(this.form.message);\n    //  _self.servicelocator.router.navigateByUrl('/login/true');\n       _self.httpService.get(\"http://localhost:8084/Auth/logout\",function (res){\n      _self.servicelocator.router.navigateByUrl('/login/true');\n        if(res.success){\n          localStorage.clear();\n          _self.form.message = res.result.message;\n      //     _self.form.list = res.result.data;\n      //     localStorage.removeItem(\"JSESSIONID\");\n      //     _self.servicelocator.router.navigateByUrl('/login');\n      //     if(_self.form.list.length == 0){\n      //       _self.form.message = \"No record found\";\n      //       _self.form.error = true;\n      //     }\n      //     console.log(\"List Size\",_self.form.list.length );\n      //   }else{\n      //     _self.form.error = false;\n      //     _self.form.message = res.result.message;\n      //   }\n      //   console.log('FORM', _self.form);\n      };\n\n    });\n\n  }\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29yZGVyL29yZGVyLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<app-navbar></app-navbar>\\n<style>\\n  .grad {\\n    background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\n    background-repeat: no-repeat;\\n    background-size: 100%;\\n    padding-bottom: 25px;\\n  }\\n\\n  .input-group-addon {\\n    box-shadow: 9px 8px 7px #001a33;\\n  }\\n\\n  .required-field {\\n    color: red;\\n    font-weight: bold;\\n  }\\n\\n  .alertRedColor {\\n    color: red;\\n  }\\n\\n  .card-body {\\n    padding: 2rem;\\n  }\\n\\n  .input-group-text i {\\n    width: 1.5rem;\\n  }\\n\\n  .btn-primary,\\n  .btn-success,\\n  .btn-warning {\\n    width: 100%;\\n  }\\n\\n  .form-control {\\n    height: calc(2.25rem + 2px);\\n  }\\n\\n  .form-group {\\n    margin-bottom: 1.5rem;\\n  }\\n\\n  .input-group-prepend .input-group-text {\\n    background-color: #e9ecef;\\n    border: 1px solid #ced4da;\\n  }\\n\\n  .input-group-prepend .input-group-text i {\\n    color: #495057;\\n  }\\n\\n  .row {\\n    margin-left: 0;\\n    margin-right: 0;\\n  }\\n\\n  .textarea-height {\\n    height: 100px;\\n  }\\n\\n  .card {\\n    width: 100%;\\n    /* Adjusted width to fill its container */\\n    max-width: 600px;\\n    /* Added max-width for a responsive design */\\n    box-shadow: 0 0 15px rgba(0, 0, 0, 0.2);\\n    /* Added box-shadow for a better look */\\n    margin-bottom: 20px;\\n    /* Added margin bottom for spacing */\\n    margin: auto;\\n    /* Centering the card horizontally */\\n  }\\n\\n  .container-fluid {\\n    min-height: 100vh;\\n    padding: 2% 0;\\n    background: url('assets/files/wall.jpg') no-repeat center center;\\n    background-attachment: fixed;\\n    background-size: cover;\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center;\\n    /* Center content horizontally */\\n    justify-content: space-between;\\n    /* Ensure content spacing */\\n  }\\n\\n  .content {\\n    flex: 1;\\n    /* Allows the content area to expand */\\n    display: flex;\\n    justify-content: center;\\n    /* Center content horizontally */\\n    align-items: center;\\n    /* Center content vertically */\\n    padding: 20px;\\n    width: 100%;\\n    /* Ensure content stretches */\\n    max-width: 800px;\\n    /* Adjusted max-width for content */\\n  }\\n\\n  app-footer {\\n    width: 100%;\\n    flex-shrink: 0;\\n    /* Prevents footer from shrinking */\\n  }\\n\\n  form {\\n    width: 100%;\\n    /* Ensures form stretches to fit container */\\n    max-width: 600px;\\n    /* Adjust as needed for form width */\\n  }\\n\\n  h2 {\\n    margin-bottom: 20px;\\n  }\\n\\n  .alert {\\n    margin-bottom: 20px;\\n  }\\n</style>\\n\\n<div class=\\\"container-fluid\\\">\\n  <div class=\\\"content\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-body input-group-addon grad\\\">\\n        <form name=\\\"userForm\\\">\\n          <h2 *ngIf=\\\"!form.data.id\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{ 'Add Order' | translate }}</h2>\\n          <h2 *ngIf=\\\"form.data.id\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{ 'Update Order' | translate }}\\n          </h2>\\n\\n          <div *ngIf=\\\"!form.error && form.message\\\" class=\\\"alert alert-success alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{ form.message }}\\n          </div>\\n\\n\\n          <div *ngIf=\\\"form.error && form.message\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{ form.message }}\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n            <label><b>{{ 'Customer' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\n            <div class=\\\"input-group\\\">\\n              <div class=\\\"input-group-prepend\\\">\\n                <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-flag grey-text\\\"></i></div>\\n              </div>\\n              <select class=\\\"form-control\\\" name=\\\"customerIdId\\\" [(ngModel)]=\\\"form.data.customerId\\\"\\n                aria-label=\\\"ngSelected\\\">\\n                <option [ngValue]=\\\"undefined\\\">{{ 'Select customer' | translate }}</option>\\n                <option *ngFor=\\\"let obj of form.preload.customerList\\\" [value]=\\\"obj.key\\\">{{ obj.value }}</option>\\n              </select>\\n            </div>\\n            <span *ngIf=\\\"form.inputerror.customerId\\\" class=\\\"alertRedColor\\\">{{form.inputerror.customerId}}</span>\\n          </div>\\n\\n          <div class=\\\"form-group pt-2\\\">\\n            <label><b>{{ 'ProductName' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\n            <div class=\\\"input-group\\\">\\n              <div class=\\\"input-group-prepend\\\">\\n                <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i></div>\\n              </div>\\n              <input type=\\\"text\\\" name=\\\"productName\\\" [(ngModel)]=\\\"form.data.productName\\\" class=\\\"form-control\\\"\\n                (keydown)=\\\"filterInput($event, 'errorMessageproductName', 20, 'char')\\\"\\n                placeholder=\\\"{{ 'Enter productName' | translate }}\\\">\\n            </div>\\n            <span *ngIf=\\\"errorMessageproductName\\\" class=\\\"alertRedColor\\\">{{ errorMessageproductName }}</span>\\n            <span *ngIf=\\\"form.inputerror?.productName\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.productName }}</span>\\n          </div>\\n\\n          <div class=\\\"form-group pt-2\\\">\\n            <label><b>{{ 'Quantity' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\n            <div class=\\\"input-group\\\">\\n              <div class=\\\"input-group-prepend\\\">\\n                <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-phone grey-text\\\"></i></div>\\n              </div>\\n              <input type=\\\"text\\\" name=\\\"quantity\\\" [(ngModel)]=\\\"form.data.quantity\\\" class=\\\"form-control\\\"\\n                (keydown)=\\\"filterInput($event, 'errorMessagequantity', 4, 'int')\\\"\\n                placeholder=\\\"{{ 'Enter quantity' | translate }}\\\" required>\\n            </div>\\n            <span *ngIf=\\\"errorMessagequantity\\\" class=\\\"alertRedColor\\\">{{ errorMessagequantity }}</span>\\n            <span *ngIf=\\\"form.inputerror?.quantity\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.quantity }}</span>\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n            <label><b>{{ 'Order Date' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\n            <div class=\\\"input-group\\\">\\n              <div class=\\\"input-group-prepend\\\">\\n                <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-calendar-alt grey-text\\\"></i></div>\\n              </div>\\n              <input type=\\\"date\\\" name=\\\"orderDate\\\" [value]=\\\"form.data.orderDate | date:'yyyy-MM-dd'\\\"\\n                (input)=\\\"form.data.orderDate=parseDate($event.target.value)\\\" class=\\\"form-control\\\" required />\\n            </div>\\n            <span *ngIf=\\\"form.inputerror.orderDate\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.orderDate }}</span>\\n          </div>\\n\\n          <div class=\\\"row pt-2 pb-3 justify-content-center\\\">\\n            <div class=\\\"col-md-4\\\">\\n              <button *ngIf=\\\"!form.data.id\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{ 'Save' | translate\\n                }}</button>\\n            </div>\\n            <div class=\\\"col-md-4\\\">\\n              <button *ngIf=\\\"form.data.id\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{ 'Update' | translate\\n                }}</button>\\n            </div>\\n            <div class=\\\"col-md-4\\\">\\n              <a class=\\\"btn btn-warning\\\" type=\\\"button\\\" [routerLink]=\\\"['/orderlist']\\\">{{ 'List' | translate }}</a>\\n            </div>\\n          </div>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<app-footer></app-footer>\"","import { Component, OnInit } from \"@angular/core\";\nimport { FormBuilder, FormGroup } from \"@angular/forms\";\nimport { BaseCtl } from \"../base.component\";\nimport { ServiceLocatorService } from \"../service-locator.service\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { HttpClient } from \"@angular/common/http\";\n\n@Component({\n  selector: \"app-order\",\n  templateUrl: \"./order.component.html\",\n  styleUrls: [\"./order.component.css\"],\n})\nexport class OrderComponent extends BaseCtl {\n  getKey = false;\n  selected = null;\n  userForm: FormGroup = null;\n  uploadForm: FormGroup;\n\n  constructor(\n    public locator: ServiceLocatorService,\n    private formBuilder: FormBuilder,\n    public route: ActivatedRoute,\n    private httpClient: HttpClient\n  ) {\n    super(locator.endpoints.ORDER, locator, route);\n  }\n\n  submit() {\n    var _self = this;\n    console.log(\"in submit\");\n    console.log(this.form);\n    console.log(this.form.data);\n\n    this.serviceLocator.httpService.post(\n      this.api.save,\n      this.form.data,\n      function (res) {\n        _self.form.message = \"\";\n        _self.form.inputerror = {}; // Clear input errors here\n\n        if (res.success) {\n          _self.form.error = false; // Set error to false on success\n          _self.form.message = \"Data is saved\";\n          _self.form.data.id = res.result.data;\n          console.log(_self.form.data.id);\n          console.log(\"----------Chetan----------.\");\n\n          // Clear form data if needed\n          // _self.form.data = {};\n        } else {\n          _self.form.error = true;\n          if (res.result.inputerror) {\n            _self.form.inputerror = res.result.inputerror;\n          }\n          _self.form.message = res.result.message;\n        }\n        console.log(\"FORM\", _self.form);\n      }\n    );\n  }\n\n  submit1() {\n    var _self = this;\n    console.log(this.form + \"submit running start\");\n    console.log(this.form.data + \"form data going to be submit\");\n    this.serviceLocator.httpService.post(\n      this.api.search,\n      this.form.data,\n      function (res) {\n        _self.form.message = \"\";\n        _self.form.inputerror = {};\n        _self.form.data.id = res.result.data;\n\n        if (res.success) {\n          _self.form.message = \"Data is saved\";\n          _self.form.data.id = res.result.data;\n\n          console.log(_self.form.data.id);\n          console.log(\"--------------------.\");\n        } else {\n          _self.form.error = true;\n          _self.form.inputerror = res.result.inputerror;\n          _self.form.message = res.result.message;\n        }\n        _self.form.data.id = res.result.data;\n        console.log(\"FORM\", _self.form);\n      }\n    );\n  }\n\n  onUpload(userform: FormData) {\n    this.submit();\n    console.log(this.form.data.id + \"---- after submit\");\n  }\n\n  validateForm(form) {\n    let flag = true;\n    let validator = this.serviceLocator.dataValidator;\n    flag = flag && validator.isNotNullObject(form.customerId);\n    console.log(form.customerId);\n    flag = flag && validator.isNotNullObject(form.quantity);\n    console.log(form.quantity);\n    flag = flag && validator.isNotNullObject(form.productName);\n    console.log(form.productName);\n    flag = flag && validator.isNotNullObject(form.orderDate);\n    console.log(form.orderDate);\n\n    return flag;\n  }\n\n  populateForm(form, data) {\n    form.id = data.id;\n    console.log(form.id + \"populate form in shoppingcomponent\");\n    form.productName = data.productName;\n    form.quantity = data.quantity;\n    form.orderDate = data.orderDate;\n    form.customerId = data.customerId;\n  }\n\n  validateProductName(event: KeyboardEvent) {\n    const input = event.target as HTMLInputElement;\n    const pattern = /^[a-zA-Z]*$/;\n    const currentValue = input.value;\n    const key = event.key;\n\n    if (!pattern.test(key)) {\n      event.preventDefault();\n    }\n\n    // Ensure the total length is between 3 and 20\n    if (currentValue.length + 1 > 20) {\n      event.preventDefault();\n    }\n  }\n\n  validateQuantity(event: KeyboardEvent) {\n    const input = event.target as HTMLInputElement;\n    const pattern = /^[0-9]*$/;\n    const key = event.key;\n\n    // Allow numbers only\n    if (!pattern.test(key)) {\n      event.preventDefault();\n    }\n\n    // Ensure the value is between 1 and 1000\n    const currentValue = input.value + key;\n    if (parseInt(currentValue) > 1000) {\n      event.preventDefault();\n    }\n  }\n\n  parseDate(dateString: string): Date {\n    if (dateString) {\n      return new Date(dateString);\n    }\n    return null;\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29yZGVyL29yZGVybGlzdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-navbar></app-navbar>\\n\\n<style>\\n  #nnn {\\n    background: none;\\n    border: none;\\n    cursor: pointer;\\n  }\\n\\n  .panel-heading {\\n    height: 50px;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n  }\\n\\n  .content-wrapper {\\n    background: url(assets/files/wall.jpg) no-repeat center center;\\n    background-attachment: fixed;\\n    background-size: cover;\\n    width: 100%;\\n    min-height: 100vh;\\n    padding: 20px;\\n  }\\n\\n  .table-responsive {\\n    margin-top: 20px;\\n  }\\n\\n  .full-height {\\n    height: 100vh;\\n  }\\n</style>\\n\\n<div class=\\\"content-wrapper full-height\\\">\\n  <div class=\\\"container-fluid full-height\\\">\\n    <div class=\\\"panel panel-primary full-height\\\">\\n      <div class=\\\"panel-heading\\\">\\n        <h1 class=\\\"text-primary font-weight-bold\\\">{{ 'Order List' | translate }}</h1>\\n      </div>\\n\\n      <div class=\\\"row mt-3\\\">\\n        <div class=\\\"col-md-3\\\">\\n          <input type=\\\"date\\\" name=\\\"orderDate\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.orderDate\\\"\\n            (ngModelChange)=\\\"formatDate($event)\\\" placeholder=\\\"{{ 'Search order Date' | translate }}\\\">\\n\\n        </div>\\n\\n\\n\\n        <div class=\\\"col-md-3\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.quantity\\\"\\n            (keydown)=\\\"filterInput($event, 'errorMessageQuantity', 5, 'int')\\\"\\n            placeholder=\\\"{{ 'Search quantity' | translate }}\\\">\\n          <span *ngIf=\\\"errorMessageQuantity\\\" class=\\\"alertRedColor\\\">{{ errorMessageQuantity}}</span>\\n        </div>\\n        <div class=\\\"col-md-3\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.productName\\\"\\n            (keydown)=\\\"filterInput($event, 'errorMessageProductName', 20, 'char')\\\"\\n            placeholder=\\\"{{ 'Search productName' | translate }}\\\">\\n          <span *ngIf=\\\"errorMessageProductName\\\" class=\\\"alertRedColor\\\">{{ errorMessageProductName}}</span>\\n        </div>\\n\\n        <div class=\\\"col-md-3\\\">\\n          <select class=\\\"form-control\\\" name=\\\"customer\\\" [(ngModel)]=\\\"form.searchParams.customerId\\\"\\n            aria-label=\\\"ngSelected\\\">\\n            <option [ngValue]=\\\"null\\\">{{ 'Select Customer' | translate }}</option>\\n            <option *ngFor=\\\"let obj of form.preload.customerList\\\" [ngValue]=\\\"obj.key\\\">{{ obj.value }}</option>\\n          </select>\\n        </div>\\n      </div>\\n\\n\\n      <div class=\\\"row mt-3 justify-content-center\\\">\\n        <div class=\\\"col-md-2\\\">\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary btn-block\\\">{{ 'Search' | translate }}</button>\\n        </div>\\n        <div class=\\\"col-md-2\\\">\\n          <button (click)=\\\"forward('/order')\\\" type=\\\"button\\\" class=\\\"btn btn-success btn-block\\\">{{ 'Add Order' |\\n            translate\\n            }}</button>\\n        </div>\\n        <div class=\\\"col-md-2\\\">\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger btn-block\\\">{{ 'Delete' | translate }}</button>\\n        </div>\\n      </div>\\n\\n      <div *ngIf=\\\"form.error || form.message\\\" class=\\\"row mt-3 justify-content-center\\\">\\n        <div class=\\\"col-md-6\\\">\\n          <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{ form.message }}\\n          </div>\\n          <div *ngIf=\\\"!form.error && form.message\\\" class=\\\"alert alert-success alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{ form.message }}\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"table-responsive mt-3\\\">\\n        <table class=\\\"table table-bordered table-hover font-weight-bold text-dark\\\">\\n          <thead class=\\\"thead-dark text-uppercase\\\">\\n            <tr align=\\\"center\\\">\\n              <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" name=\\\"list_name\\\"\\n                  (change)=\\\"checkUncheckAll($event)\\\" /></th>\\n              <th>{{ 'S.No' }}</th>\\n              <th>{{ 'Quantity' }}</th>\\n              <th>{{ 'product Name' }}</th>\\n              <th>{{ 'Order Date' }}</th>\\n              <th>{{ 'customer' }}</th>\\n              <th>{{ 'Edit' }}</th>\\n            </tr>\\n          </thead>\\n          <tbody>\\n            <tr *ngFor=\\\"let m of form.list; let i = index\\\" align=\\\"center\\\">\\n              <td><input type=\\\"checkbox\\\" #checkboxes (change)=\\\"checklistUpdate()\\\" name=\\\"list_name\\\" [id]=\\\"m.id\\\" /></td>\\n              <td>{{ (form.pageNo * 5) + i + 1 }}</td>\\n              <td>{{ m.quantity }}</td>\\n              <td>{{ m.productName }}</td>\\n              <td>{{ convertToLocalDate(m.orderDate) }}</td>\\n              <td>{{ m.customerName }}</td>\\n              <td>\\n                <button class=\\\"fa fa-edit text-primary\\\" id=\\\"nnn\\\" (click)=\\\"forward('/order/' + m.id)\\\"></button>\\n              </td>\\n            </tr>\\n          </tbody>\\n        </table>\\n      </div>\\n\\n      <div class=\\\"d-flex justify-content-between mt-3\\\">\\n        <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\">{{ 'Previous' | translate\\n          }}</button>\\n        <div *ngIf=\\\"form.list.length == 0\\\">\\n          <a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/orderlist']\\\" (click)=\\\"exit()\\\">{{ 'Back' | translate }}</a>\\n        </div>\\n        <button (click)=\\\"next()\\\" [disabled]=\\\"nextList == 0\\\" class=\\\"btn btn-info\\\">{{ 'Next' | translate }}</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<app-footer></app-footer>\"","import { Component, OnInit } from \"@angular/core\";\nimport { BaseListCtl } from \"../base-list.component\";\nimport { ServiceLocatorService } from \"../service-locator.service\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { HttpClient } from \"@angular/common/http\";\n\n@Component({\n  selector: \"app-orderlist\",\n  templateUrl: \"./orderlist.component.html\",\n  styleUrls: [\"./orderlist.component.css\"],\n})\nexport class OrderlistComponent extends BaseListCtl implements OnInit {\n  public form = {\n    error: false,\n    message: null,\n    preload: {\n      customerList: [], // Initialize customer list\n    },\n    data: { id: null },\n    inputerror: { quantity: \"\", productName: \"\" },\n    searchParams: {\n      quantity: \"\",\n      date: \"\", // Initialize date field\n      customerId: null, // Initialize customerId to null\n      productName: \"\",\n      orderDate: \"\",\n    },\n    searchMessage: null,\n    list: [],\n    pageNo: 0,\n  };\n\n  constructor(\n    public locator: ServiceLocatorService,\n    public route: ActivatedRoute,\n    private httpClient: HttpClient\n  ) {\n    super(locator.endpoints.ORDER, locator, route);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n  }\n\n  // Format date function\n  formatDate(event: any) {\n    const selectedDate = new Date(event);\n    const formattedDate = selectedDate.toISOString().split(\"T\")[0];\n    this.form.searchParams.date = formattedDate;\n  }\n\n  // Convert date to local format for display\n  convertToLocalDate(dateString: string): string {\n    const date = new Date(dateString);\n    const options = { year: \"numeric\", month: \"2-digit\", day: \"2-digit\" };\n    return date.toLocaleDateString(undefined, options);\n  }\n\n  // Validate input for quantity field\n  validateQuantity() {\n    const quantity = this.form.searchParams.quantity;\n    if (\n      quantity === null ||\n      isNaN(Number(quantity)) ||\n      Number(quantity) <= 0 ||\n      Number(quantity) > 1000\n    ) {\n      this.form.inputerror.quantity =\n        \"Invalid quantity. Please enter a number between 1 and 1000.\";\n    } else {\n      this.form.inputerror.quantity = \"\"; // Clear error message if quantity is valid\n    }\n  }\n\n  // Clear quantity input error message when field is cleared\n  clearQuantityError() {\n    if (!this.form.searchParams.quantity) {\n      this.form.inputerror.quantity = \"\";\n    }\n  }\n\n  validateProductName(event: any) {\n    const value = event.target.value.trim();\n    const regex = /^[a-zA-Z]{1,20}$/; // Alphabetic characters only, length between 3 and 20\n\n    if (value === \"\") {\n      this.form.inputerror.productName = null; // Clear the error message if the field is empty\n    } else if (!regex.test(value)) {\n      this.form.inputerror.productName =\n        \"Product Name should contain only alphabetic characters and be between 3 to 20 characters long\";\n    } else {\n      this.form.inputerror.productName = null;\n      this.form.searchParams.productName = value;\n    }\n  }\n\n  // Clear productName error on input field focus\n  clearProductNameError() {\n    this.form.inputerror.productName = null;\n  }\n\n  // Submit method\n  submit() {\n    // Reset page number before searching\n    this.form.pageNo = 0;\n\n    // Check if there are any input errors\n    if (this.form.inputerror.quantity || this.form.inputerror.productName) {\n      return; // Do not proceed with search if there are errors\n    }\n\n    // Call the search method after formatting the date\n    this.search();\n  }\n\n  // Search method\n  search() {\n    // Clear previous search message\n    this.form.searchMessage = null;\n    // Perform the search operation with the search parameters\n    super.search();\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL293bmVyL293bmVyLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<app-navbar></app-navbar>\\n\\n<style>\\n  .grad {\\n    background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\n    background-repeat: no-repeat;\\n    background-size: 100%;\\n    padding-bottom: 25px;\\n  }\\n\\n  .background {\\n    padding-top: 3%;\\n    padding-bottom: 13%;\\n    background: url('assets/files/wall.jpg') no-repeat center center;\\n    background-attachment: fixed;\\n    background-size: cover;\\n    width: 100%;\\n    height: auto;\\n  }\\n\\n  .required-field {\\n    color: red;\\n  }\\n\\n  .alertRedColor {\\n    color: red;\\n  }\\n</style>\\n\\n<div class=\\\"container-fluid background\\\">\\n  <div class=\\\"row justify-content-center\\\">\\n    <div class=\\\"col-sm-8 col-md-6 col-lg-4\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-body shadow-lg grad\\\">\\n          <form name=\\\"userForm\\\">\\n            <h2 *ngIf=\\\"!form.data.id > 0\\\" class=\\\"text-primary font-weight-bold\\\" style=\\\"text-align: center;\\\">{{ 'Add\\n              Owner'\\n              | translate }}</h2>\\n            <h2 *ngIf=\\\"form.data.id > 0\\\" class=\\\"text-primary font-weight-bold\\\" style=\\\"text-align: center;\\\">{{ 'Update\\n              Owner' | translate }}</h2>\\n\\n            <!-- Form error messages -->\\n            <div *ngIf=\\\"form.error && form.message\\\" class=\\\"alert alert-danger alert-dismissible fade show\\\">\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n              {{ form.message }}\\n            </div>\\n            <div *ngIf=\\\"!form.error && form.message\\\" class=\\\"alert alert-success alert-dismissible fade show\\\">\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n              {{ form.message }}\\n            </div>\\n\\n            <div class=\\\"form-group pt-2\\\">\\n              <label><b>{{ 'Name' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i></div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"name\\\" [(ngModel)]=\\\"form.data.name\\\" class=\\\"form-control\\\"\\n                  (keydown)=\\\"filterInput($event, 'errorMessageName', 20, 'char')\\\"\\n                  placeholder=\\\"{{ 'Enter Name' | translate }}\\\">\\n              </div>\\n              <span *ngIf=\\\"errorMessageName\\\" class=\\\"alertRedColor\\\">{{ errorMessageName }}</span>\\n              <span *ngIf=\\\"form.inputerror?.name\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.name }}</span>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label><b>{{ 'DateOfBirth' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i></div>\\n                </div>\\n                <select class=\\\"form-control\\\" name=\\\"dateOfBirth\\\" [(ngModel)]=\\\"form.dateOfBirth\\\" aria-label=\\\"ngSelected\\\">\\n                  <option [ngValue]=\\\"undefined\\\">{{ 'Select DateOfBirth' | translate }}</option>\\n                  <option *ngFor=\\\"let dateOfBirth of form.preload.ownerlist2\\\" [ngValue]=\\\"dateOfBirth | date:'yyyy-MM-dd'\\\">{{ dateOfBirth }}\\n                  </option>\\n                </select>\\n\\n\\n              </div>\\n\\n              <span *ngIf=\\\"form.inputerror.dateOfBirth\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.dateOfBirth }}</span>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label><b>{{ 'VehicleId' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i></div>\\n                </div>\\n                <select class=\\\"form-control\\\" name=\\\"vehicleId\\\" [(ngModel)]=\\\"form.data.vehicleId\\\" aria-label=\\\"ngSelected\\\">\\n                  <option [ngValue]=\\\"undefined\\\">{{ 'Select VehicleId' | translate }}</option>\\n                  <option *ngFor=\\\"let vehicleId of form.preload.ownerlist\\\" [value]=\\\"vehicleId\\\">{{ vehicleId }}</option>\\n                </select>\\n              </div>\\n              <span *ngIf=\\\"form.inputerror.vehicleId\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.vehicleId }}</span>\\n            </div>\\n\\n            <div class=\\\"form-group pt-2\\\">\\n              <label><b>{{ 'InsuranceAmount' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-mobile grey-text\\\"></i></div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"insuranceAmount\\\" [(ngModel)]=\\\"form.data.insuranceAmount\\\" class=\\\"form-control\\\"\\n                  (keydown)=\\\"filterInput($event, 'errorMessageInsuranceAmount', 10, 'int')\\\"\\n                  placeholder=\\\"{{ 'Enter InsuranceAmount' | translate }}\\\">\\n              </div>\\n              <span *ngIf=\\\"errorMessageInsuranceAmount\\\" class=\\\"alertRedColor\\\">{{ errorMessageInsuranceAmount }}</span>\\n              <span *ngIf=\\\"form.inputerror?.insuranceAmount\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.insuranceAmount\\n                }}</span>\\n            </div>\\n\\n\\n            <!-- Form buttons -->\\n            <div class=\\\"form-group text-center\\\">\\n              <button (click)=\\\"submit()\\\" class=\\\"btn btn-success mr-2\\\">{{ 'Save' | translate }}</button>\\n              <button (click)=\\\"forward('/ownerlist')\\\" type=\\\"button\\\" class=\\\"btn btn-warning\\\">{{ 'List' | translate\\n                }}</button>\\n            </div>\\n          </form>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<app-footer></app-footer>\"","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { BaseCtl } from \"../base.component\";\nimport { ServiceLocatorService } from \"../service-locator.service\";\n\n@Component({\n  selector: \"app-owner\",\n  templateUrl: \"./owner.component.html\",\n  styleUrls: [\"./owner.component.css\"],\n})\nexport class OwnerComponent extends BaseCtl {\n  errorMessageTitle: string = \"\";\n\n  constructor(\n    public locator: ServiceLocatorService,\n    public route: ActivatedRoute\n  ) {\n    super(locator.endpoints.OWNER, locator, route);\n  }\n\n  validateForm(form) {\n    let flag = true;\n    let validator = this.serviceLocator.dataValidator;\n    flag = flag && validator.isNotNullObject(form.name);\n    flag = flag && validator.isNotNullObject(form.dateOfBirth);\n    flag = flag && validator.isNotNullObject(form.vehicleId);\n    flag = flag && validator.isNotNullObject(form.insuranceAmount);\n\n    return flag;\n  }\n\n  populateForm(form: any, data: any) {\n    form.id = data.id;\n    form.name = data.name;\n\n    // Parse the date string and convert to Date object\n    const dateOfBirth = new Date(data.dateOfBirth);\n\n    // Check if the parsed date is valid\n    if (!isNaN(dateOfBirth.getTime())) {\n      // Convert dateOfBirth to yyyy-MM-dd string format\n      form.dateOfBirth = this.formatDate(dateOfBirth);\n    } else {\n      form.dateOfBirth = null; // Handle invalid date gracefully, or set to an appropriate default\n    }\n\n    form.vehicleId = data.vehicleId;\n    form.insuranceAmount = data.insuranceAmount;\n  }\n\n  // Helper function to format Date to yyyy-MM-dd string\n  formatDate(date: Date): string {\n    const year = date.getFullYear();\n    const month = (\"0\" + (date.getMonth() + 1)).slice(-2); // Adding 1 because getMonth() returns zero-based\n    const day = (\"0\" + date.getDate()).slice(-2);\n    return `${year}-${month}-${day}`;\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL293bmVyL293bmVybGlzdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-navbar></app-navbar>\\n\\n<style>\\n  #nnn {\\n    background: none;\\n    border: none;\\n    cursor: pointer;\\n  }\\n\\n  .panel-heading {\\n    height: 50px;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n  }\\n\\n  .search-inputs {\\n    margin-top: 20px;\\n  }\\n\\n  .search-inputs .form-control,\\n  .search-inputs .btn {\\n    margin-bottom: 10px;\\n  }\\n\\n  .content-wrapper {\\n    background: url('assets/files/1024.jpg') no-repeat center center;\\n    background-attachment: fixed;\\n    background-size: cover;\\n    width: auto;\\n    height: 105vh;\\n    padding: 20px;\\n  }\\n\\n  .table-responsive {\\n    margin-top: 20px;\\n  }\\n\\n  .search-inputs .col-sm-2,\\n  .search-inputs .col-sm-1 {\\n    padding: 0 5px;\\n  }\\n\\n  .alertRedColor {\\n    color: red;\\n  }\\n</style>\\n\\n<div class=\\\"content-wrapper\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"panel panel-primary\\\">\\n      <div class=\\\"panel-heading\\\">\\n        <h1 class=\\\"text-primary font-weight-bold\\\">{{ 'Owner List' | translate }}</h1>\\n      </div>\\n\\n      <div class=\\\"row search-inputs p-1 justify-content-center\\\">\\n        <div class=\\\"col-sm-2\\\">\\n          <input type=\\\"text\\\" name=\\\"name\\\" [(ngModel)]=\\\"form.searchParams.name\\\" class=\\\"form-control\\\"\\n            (keydown)=\\\"filterInput($event, 'errorMessageName', 20, 'char')\\\"\\n            placeholder=\\\"{{ 'Enter Name' | translate }}\\\">\\n\\n          <span *ngIf=\\\"errorMessageName\\\" class=\\\"alertRedColor\\\">{{ errorMessageName }}</span>\\n        </div>\\n\\n        <div class=\\\"col-sm-2\\\">\\n          <input type=\\\"text\\\" name=\\\"insuranceAmount\\\" [(ngModel)]=\\\"form.searchParams.insuranceAmount\\\" class=\\\"form-control\\\"\\n            (keydown)=\\\"filterInput($event, 'errorMessageInsuranceAmount', 5, 'int')\\\"\\n            placeholder=\\\"{{ 'Enter InsuranceAmount' | translate }}\\\">\\n          <span *ngIf=\\\"errorMessageInsuranceAmount\\\" class=\\\"alertRedColor\\\">{{ errorMessageInsuranceAmount }}</span>\\n        </div>\\n\\n        <div class=\\\"col-sm-2\\\">\\n          <select class=\\\"form-control\\\" name=\\\"vehicleId\\\" [(ngModel)]=\\\"form.searchParams.vehicleId\\\"\\n            aria-label=\\\"ngSelected\\\">\\n            <option [ngValue]=\\\"undefined\\\">{{ 'Select VehicleId' | translate }}</option>\\n            <option *ngFor=\\\"let vehicleId of form.preload.ownerlist\\\" [value]=\\\"vehicleId\\\">{{ vehicleId }}</option>\\n          </select>\\n          <span *ngIf=\\\"form.inputerror.vehicleId\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.vehicleId }}</span>\\n        </div>\\n\\n        <div class=\\\"col-sm-2\\\">\\n          <select class=\\\"form-control\\\" name=\\\"dateOfBirth\\\" [(ngModel)]=\\\"form.searchParams.dateOfBirth\\\"\\n            aria-label=\\\"ngSelected\\\">\\n            <option [ngValue]=\\\"undefined\\\">{{ 'Select DateOfBirth' | translate }}</option>\\n            <option *ngFor=\\\"let dateOfBirth of form.preload.ownerlist2\\\" [value]=\\\"dateOfBirth\\\">{{ dateOfBirth }}</option>\\n          </select>\\n          <span *ngIf=\\\"form.inputerror.dateOfBirth\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.dateOfBirth }}</span>\\n        </div>\\n\\n\\n\\n        <div class=\\\"col-sm-1\\\">\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary\\\">{{ 'Search' | translate }}</button>\\n        </div>\\n\\n        <div class=\\\"col-sm-2\\\">\\n          <button (click)=\\\"forward('/owner')\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">\\n            {{ 'Add Owner' | translate }}\\n          </button>\\n        </div>\\n\\n        <div class=\\\"col-sm-1\\\">\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger\\\">{{ 'Delete' | translate }}</button>\\n        </div>\\n      </div>\\n\\n      <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n        {{ form.message }}\\n      </div>\\n\\n      <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n        {{ form.message }}\\n      </div>\\n\\n      <div class=\\\"table-responsive\\\">\\n        <table class=\\\"table table-bordered table-hover font-weight-bold text-dark\\\">\\n          <thead class=\\\"thead-dark text-uppercase\\\">\\n            <tr align=\\\"center\\\">\\n              <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" name=\\\"list_name\\\"\\n                  (change)=\\\"checkUncheckAll($event)\\\" /></th>\\n              <th>{{ 'S.No' | translate }}</th>\\n              <th>{{ 'NAME' | translate }}</th>\\n              <th>{{ 'DATEOFBIRTH' | translate }}</th>\\n              <th>{{ 'VEHICLEID' | translate }}</th>\\n              <th>{{ 'INSURANCEAMOUNT' | translate }}</th>\\n              <th>{{ 'Edit' | translate }}</th>\\n            </tr>\\n          </thead>\\n          <tbody>\\n            <tr *ngFor=\\\"let m of form.list; let i = index\\\" align=\\\"center\\\">\\n              <td><input type=\\\"checkbox\\\" #checkboxes (change)=\\\"checklistUpdate()\\\" name=\\\"list_name\\\" [id]=\\\"m.id\\\" />\\n              </td>\\n              <td>{{ (form.pageNo * 5) + i + 1 }}</td>\\n              <td>{{ m.name }}</td>\\n              <td>{{ m.dateOfBirth | date : 'dd-MM-yyyy'}}</td>\\n              <td>{{ m.vehicleId }}</td>\\n              <td>{{ m.insuranceAmount }}</td>\\n\\n              <td>\\n                <button class=\\\"fa fa-edit text-primary\\\" id=\\\"nnn\\\" (click)=\\\"forward('/owner/' + m.id)\\\">\\n                </button>\\n              </td>\\n            </tr>\\n          </tbody>\\n        </table>\\n\\n        <div class=\\\"d-flex justify-content-between mt-3\\\">\\n          <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\">{{ 'Previous' | translate\\n            }}\\n          </button>\\n          <div *ngIf=\\\"form.list.length == 0\\\">\\n            <a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/ownerlist']\\\" (click)=\\\"exit()\\\">\\n              {{ 'Back' | translate }}\\n            </a>\\n          </div>\\n          <button (click)=\\\"next()\\\" [disabled]=\\\"nextList == 0\\\" class=\\\"btn btn-info\\\">{{ 'Next' | translate }}</button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<app-footer></app-footer>\"","import { Component, OnInit } from \"@angular/core\";\nimport { BaseListCtl } from \"../base-list.component\";\nimport { ServiceLocatorService } from \"../service-locator.service\";\nimport { ActivatedRoute } from \"@angular/router\";\n\n@Component({\n  selector: \"app-ownerlist\",\n  templateUrl: \"./ownerlist.component.html\",\n  styleUrls: [\"./ownerlist.component.css\"],\n})\nexport class OwnerlistComponent extends BaseListCtl implements OnInit {\n  myKey = \"\";\n\n  public form = {\n    error: false,\n    message: null,\n    preload: [],\n    data: { id: null },\n    inputerror: {},\n    searchParams: {},\n    searchMessage: null,\n    list: [],\n    pageNo: 0,\n  };\n\n  base64Data: any;\n  retrieveResonse: any;\n  message: string;\n  isValidexperienceInput: boolean = true; // Property to track validity of cost input\n  isValidtitleInput: boolean = true; // Property to track validity of description input\n\n  constructor(\n    public locator: ServiceLocatorService,\n    public route: ActivatedRoute\n  ) {\n    super(locator.endpoints.OWNER, locator, route);\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhdGllbnQvcGF0aWVudC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-navbar></app-navbar>\\n<style>\\n  .grad {\\n    background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\n    background-repeat: no-repeat;\\n    background-size: 100%;\\n    padding-bottom: 25px;\\n  }\\n\\n  .input-group-addon {\\n    box-shadow: 9px 8px 7px #001a33;\\n  }\\n\\n  .required-field {\\n    color: red;\\n    font-weight: bold;\\n  }\\n\\n  .alertRedColor {\\n    color: red;\\n  }\\n\\n  .card-body {\\n    padding: 2rem;\\n  }\\n\\n  .input-group-text i {\\n    width: 1.5rem;\\n  }\\n\\n  .btn-primary,\\n  .btn-success,\\n  .btn-warning {\\n    width: 100%;\\n  }\\n\\n  .form-control {\\n    height: calc(2.25rem + 2px);\\n  }\\n\\n  .form-group {\\n    margin-bottom: 1.5rem;\\n  }\\n\\n  .input-group-prepend .input-group-text {\\n    background-color: #e9ecef;\\n    border: 1px solid #ced4da;\\n  }\\n\\n  .input-group-prepend .input-group-text i {\\n    color: #495057;\\n  }\\n\\n  .row {\\n    margin-left: 0;\\n    margin-right: 0;\\n  }\\n\\n  .textarea-height {\\n    height: 100px;\\n  }\\n\\n  .card {\\n    margin: auto;\\n    max-width: 500px;\\n  }\\n</style>\\n\\n<div class=\\\"container-fluid\\\"\\n  style=\\\"padding: 2% 0; background: url('assets/files/wall.jpg') no-repeat center center; background-attachment: fixed; background-size: cover; width: 100%; height: auto;\\\">\\n  <div class=\\\"row justify-content-center\\\">\\n    <div class=\\\"col-md-6\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-body input-group-addon grad\\\">\\n          <form name=\\\"userForm\\\">\\n            <h2 *ngIf=\\\"!form.data.id\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{ 'Add Patient' |\\n              translate }}\\n            </h2>\\n            <h2 *ngIf=\\\"form.data.id\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{ 'Update Patient' |\\n              translate }}\\n            </h2>\\n\\n            <div *ngIf=\\\"!form.error && form.message\\\" class=\\\"alert alert-success alert-dismissible\\\">\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n              {{ form.message }}\\n            </div>\\n\\n            <div *ngIf=\\\"form.error && form.message\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n              {{ form.message }}\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label><b>{{ 'Disease' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-flag grey-text\\\"></i></div>\\n                </div>\\n                <select class=\\\"form-control\\\" name=\\\"categoryId\\\" [(ngModel)]=\\\"form.data.diseaseId\\\"\\n                  aria-label=\\\"ngSelected\\\">\\n                  <option [ngValue]=\\\"undefined\\\">{{ 'Select disease' | translate }}</option>\\n                  <option *ngFor=\\\"let obj of form.preload.diseaseList\\\" [value]=\\\"obj.key\\\">{{ obj.value }}</option>\\n                </select>\\n              </div>\\n              <span *ngIf=\\\"form.inputerror.diseaseId\\\" class=\\\"alertRedColor\\\">{{form.inputerror.diseaseId}}</span>\\n            </div>\\n\\n           \\n            <div class=\\\"form-group\\\">\\n              <label><b>{{ 'Name' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fas fa-user\\\"></i></div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"name\\\" [(ngModel)]=\\\"form.data.name\\\" class=\\\"form-control\\\" placeholder=\\\"{{ 'Enter name' | translate }}\\\" (keypress)=\\\"validateAlphabetInput($event)\\\">\\n              </div>\\n              <span *ngIf=\\\"form.inputerror.name\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.name }}</span>\\n            </div>\\n\\n\\n\\n            <div class=\\\"form-group\\\">\\n              <label><b>{{ 'Mobile' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-phone grey-text\\\"></i></div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"mobile\\\" [(ngModel)]=\\\"form.data.mobile\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{ 'Enter Mobile' | translate }}\\\" maxlength=\\\"10\\\" (keypress)=\\\"validatePhone($event)\\\">\\n\\n\\n              </div>\\n              <span *ngIf=\\\"form.inputerror.mobile\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.mobile}}</span>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label><b>{{ 'Date of Visit' | translate }}</b><span class=\\\"required-field\\\"></span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-calendar-alt grey-text\\\"></i></div>\\n                </div>\\n                <input type=\\\"date\\\" name=\\\"dateOfPurchase\\\" [value]=\\\"form.data.dateOfVisit | date:'yyyy-MM-dd'\\\"\\n                  (input)=\\\"form.data.dateOfVisit=parseDate($event.target.value)\\\" class=\\\"form-control\\\" required />\\n              </div>\\n              <span *ngIf=\\\"form.inputerror.dateOfVisit\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.dateOfVisit\\n                }}</span>\\n            </div>\\n\\n\\n            <div class=\\\"row pt-2 pb-3 justify-content-center\\\">\\n              <div class=\\\"col-md-4\\\">\\n                <button *ngIf=\\\"!form.data.id\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{ 'Save' | translate\\n                  }}</button>\\n              </div>\\n              <div class=\\\"col-md-4\\\">\\n                <button *ngIf=\\\"form.data.id\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{ 'Update' | translate\\n                  }}</button>\\n              </div>\\n              <div class=\\\"col-md-4\\\">\\n                <a class=\\\"btn btn-warning\\\" type=\\\"button\\\" [routerLink]=\\\"['/patientlist']\\\">{{ 'List' | translate\\n                  }}</a>\\n              </div>\\n            </div>\\n          </form>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { BaseCtl } from '../base.component';\nimport { ServiceLocatorService } from '../service-locator.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-patient',\n  templateUrl: './patient.component.html',\n  styleUrls: ['./patient.component.css']\n})\nexport class PatientComponent extends BaseCtl {\n\n  getKey = false;\n  selected = null;\n  userForm: FormGroup = null;\n  uploadForm: FormGroup;\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\n    super(locator.endpoints.PATIENT, locator, route);\n  }\n\n  submit() {\n    var _self = this;\n    console.log('in submit');\n    console.log(this.form);\n    console.log(this.form.data);\n  \n    this.serviceLocator.httpService.post(this.api.save, this.form.data, function (res) {\n      _self.form.message = '';\n      _self.form.inputerror = {}; // Clear input errors here\n  \n      if (res.success) {\n        _self.form.error = false; // Set error to false on success\n        _self.form.message = \"Data is saved\";\n        _self.form.data.id = res.result.data;\n        console.log(_self.form.data.id);\n        console.log(\"----------Chetan----------.\");\n  \n        // Clear form data if needed\n        // _self.form.data = {};\n  \n      } else {\n        _self.form.error = true;\n        if (res.result.inputerror) {\n          _self.form.inputerror = res.result.inputerror;\n        }\n        _self.form.message = res.result.message;\n      }\n      console.log('FORM', _self.form);\n    });\n  }\n\n  submit1() {\n    var _self = this;\n    console.log(this.form + \"submit running start\");\n    console.log(this.form.data + \"form data going to be submit\");\n    this.serviceLocator.httpService.post(this.api.search, this.form.data, function (res) {\n      _self.form.message = '';\n      _self.form.inputerror = {};\n      _self.form.data.id = res.result.data;\n\n\n      if (res.success) {\n        _self.form.message = \"Data is saved\";\n        _self.form.data.id = res.result.data;\n\n\n        console.log(_self.form.data.id);\n        console.log(\"--------------------.\");\n\n      } else {\n        _self.form.error = true;\n        _self.form.inputerror = res.result.inputerror;\n        _self.form.message = res.result.message;\n      }\n      _self.form.data.id = res.result.data;\n      console.log('FORM', _self.form);\n    });\n  }\n\n\n\n\n  onUpload(userform: FormData) {\n    this.submit();\n    console.log(this.form.data.id + '---- after submit');\n\n  }\n\n\n  validateForm(form) {\n    let flag = true;\n    let validator = this.serviceLocator.dataValidator;\n    flag = flag && validator.isNotNullObject(form.diseaseId);\n    console.log(form.diseaseId);\n    flag = flag && validator.isNotNullObject(form.name);\n    console.log(form.name);\n    flag = flag && validator.isNotNullObject(form.mobile);\n    console.log(form.mobile);\n    flag = flag && validator.isNotNullObject(form.dateOfVisit);\n    console.log(form.dateOfVisit);\n\n\n    return flag;\n  }\n\n  populateForm(form, data) {\n    form.id = data.id;\n    console.log(form.id + 'populate form in shoppingcomponent');\n    form.name = data.name;\n    form.mobile = data.mobile;\n    form.dateOfVisit = data.dateOfVisit;\n    form.diseaseId = data.diseaseId;\n\n\n  }\n\n  validatePhone(event: KeyboardEvent) {\n    const input = event.key;\n    // Check if the input is a number or backspace\n    if ((isNaN(Number(input)) && input !== 'Backspace') || (input === ' ')) {\n      event.preventDefault();\n    }\n    // Limit the input to 10 characters\n    if (this.form.data.phone && this.form.data.phone.length >= 10 && input !== 'Backspace') {\n      event.preventDefault();\n    }\n  }\n\n\n  validateAlphabetInput(event) {\n    const charCode = event.which || event.keyCode;\n    const charStr = String.fromCharCode(charCode);\n\n    // Regular expression to test if the character is a letter\n    const letterRegex = /^[a-zA-Z\\s]+$/;\n\n    // Test if the input matches the allowed characters\n    if (!letterRegex.test(charStr)) {\n      event.preventDefault();\n    }\n\n    // Optionally, check the entire value against the name format regex\n    const inputElement = event.target;\n    const inputValue = inputElement.value + charStr; // Add the current character to the input value\n\n    // Regex for valid name format \"FirstName LastName\"\n    const nameRegex = /^[A-Z][a-z]+ [A-Z][a-z]+$/;\n\n    // Check if the current value matches the valid name format\n    if (!nameRegex.test(inputValue)) {\n      // Handle invalid input (e.g., disable submit button, show error message)\n      // Example:\n      inputElement.classList.add('invalid'); // Apply CSS class for invalid input\n    } else {\n      inputElement.classList.remove('invalid'); // Remove invalid CSS class if format is valid\n    }\n  }\n\n\n\n  parseDate(dateString: string): Date {\n    if (dateString) {\n      return new Date(dateString);\n    }\n    return null;\n  }\n  test() {\n\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhdGllbnQvcGF0aWVudGxpc3QuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<app-navbar></app-navbar>\\n\\n<style>\\n  #nnn {\\n    background: none;\\n    border: none;\\n    cursor: pointer;\\n  }\\n\\n  .panel-heading {\\n    height: 50px;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n  }\\n\\n  .search-inputs {\\n    margin-top: 20px;\\n  }\\n\\n  .search-inputs .form-control,\\n  .search-inputs .btn {\\n    margin-bottom: 10px;\\n  }\\n\\n  .content-wrapper {\\n    background: url(assets/files/wall.jpg) no-repeat center center;\\n    background-attachment: fixed;\\n    background-size: cover;\\n    width: auto;\\n    height: 105vh;\\n    padding: 20px;\\n  }\\n\\n  .table-responsive {\\n    margin-top: 20px;\\n  }\\n</style>\\n\\n<div class=\\\"content-wrapper\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"panel panel-primary\\\">\\n      <div class=\\\"panel-heading\\\">\\n        <h1 class=\\\"text-primary font-weight-bold\\\">{{ 'Patient List' | translate }}</h1>\\n      </div>\\n\\n      <div class=\\\"row search-inputs justify-content-center\\\">\\n        <div class=\\\"col-md-3\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.name\\\"\\n            placeholder=\\\"{{ 'Search name' | translate }}\\\">\\n        </div>\\n        <div class=\\\"col-md-3\\\">\\n          <input type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.mobile\\\"\\n            placeholder=\\\"{{ 'Search mobile' | translate }}\\\">\\n        </div>\\n        <div class=\\\"col-md-3\\\">\\n          <input type=\\\"date\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.dateOfVisit\\\"\\n            (ngModelChange)=\\\"formatDate($event)\\\" placeholder=\\\"{{ 'Search dateOfVisit' | translate }}\\\">\\n        </div>\\n        <div class=\\\"col-md-3\\\">\\n          <select class=\\\"form-control\\\" name=\\\"diseaseId\\\" [(ngModel)]=\\\"form.searchParams.diseaseId\\\">\\n            <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{ 'Select disease' | translate }}</option>\\n            <option *ngFor=\\\"let obj of form.preload.diseaseList\\\" [value]=\\\"obj.key\\\">{{ obj.value }}</option>\\n          </select>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"row mt-2 justify-content-center\\\">\\n        <div class=\\\"col-md-2\\\">\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary btn-block\\\">{{ 'Search' | translate }}</button>\\n        </div>\\n        <div class=\\\"col-md-2\\\">\\n          <button (click)=\\\"forward('/patient')\\\" type=\\\"button\\\" class=\\\"btn btn-success btn-block\\\">{{ 'Add Patient' |\\n            translate }}</button>\\n        </div>\\n        <div class=\\\"col-md-2\\\">\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger btn-block\\\">{{ 'Delete' | translate }}</button>\\n        </div>\\n      </div>\\n\\n      <div *ngIf=\\\"form.error || form.message\\\" class=\\\"row mt-2 justify-content-center\\\">\\n        <div class=\\\"col-md-6\\\">\\n          <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{ form.message }}\\n          </div>\\n          <div *ngIf=\\\"!form.error && form.message\\\" class=\\\"alert alert-success alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{ form.message }}\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"table-responsive mt-3\\\">\\n        <table class=\\\"table table-bordered table-hover font-weight-bold text-dark\\\">\\n          <thead class=\\\"thead-dark text-uppercase\\\">\\n            <tr align=\\\"center\\\">\\n              <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" name=\\\"list_name\\\"\\n                  (change)=\\\"checkUncheckAll($event)\\\" /></th>\\n              <th>{{ 'S.No' }}</th>\\n              <th>{{ 'name' }}</th>\\n              <th>{{ 'mobile' }}</th>\\n              <th>{{ 'dateOfVisit' }}</th>\\n              <th>{{ 'disease' }}</th>\\n              <th>{{ 'Edit' }}</th>\\n            </tr>\\n          </thead>\\n          <tbody>\\n            <tr *ngFor=\\\"let m of form.list; let i = index\\\" align=\\\"center\\\">\\n              <td><input type=\\\"checkbox\\\" #checkboxes (change)=\\\"checklistUpdate()\\\" name=\\\"list_name\\\" [id]=\\\"m.id\\\" /></td>\\n              <td>{{ (form.pageNo * 5) + i + 1 }}</td>\\n              <td>{{ m.name }}</td>\\n              <td>{{ m.mobile }}</td>\\n              <td>{{ convertToLocalDate(m.dateOfVisit) }}</td>\\n              <td>{{ m.diseaseName }}</td>\\n              <td>\\n                <button class=\\\"fa fa-edit text-primary\\\" id=\\\"nnn\\\" (click)=\\\"forward('/patient/' + m.id)\\\"></button>\\n              </td>\\n            </tr>\\n          </tbody>\\n        </table>\\n      </div>\\n\\n      <div class=\\\"d-flex justify-content-between mt-3\\\">\\n        <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\">{{ 'Previous' | translate\\n          }}</button>\\n        <div *ngIf=\\\"form.list.length == 0\\\">\\n          <a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/patientlist']\\\" (click)=\\\"exit()\\\">{{ 'Back' |\\n            translate }}</a>\\n        </div>\\n        <button (click)=\\\"next()\\\" [disabled]=\\\"nextList == 0\\\" class=\\\"btn btn-info\\\">{{ 'Next' | translate }}</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\nimport { BaseListCtl } from '../base-list.component';\nimport { ServiceLocatorService } from '../service-locator.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-patientlist',\n  templateUrl: './patientlist.component.html',\n  styleUrls: ['./patientlist.component.css']\n})\nexport class PatientlistComponent extends BaseListCtl implements OnInit {\n\n  public form = {\n    error: false,\n    message: null,\n    preload: [],\n    data: { id: null },\n    inputerror: {},\n    searchParams: {\n      date: '' // Initialize date field\n    },\n    searchMessage: null,\n    list: [],\n    pageNo: 0\n  };\n\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\n    super(locator.endpoints.PATIENT, locator, route);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n  }\n\n  // Format date function\n  formatDate(event: any) {\n    const selectedDate = new Date(event);\n    const formattedDate = selectedDate.toISOString().split('T')[0];\n    this.form.searchParams.date = formattedDate;\n  }\n\n  // Convert date to local format for display\n  convertToLocalDate(dateString: string): string {\n    const date = new Date(dateString);\n    // Format date to 'MM/DD/YYYY'\n    const options = { year: 'numeric', month: '2-digit', day: '2-digit' };\n    return date.toLocaleDateString(undefined, options);\n  }\n\n  // Submit method\n  submit() {\n    // Reset page number before searching\n    this.form.pageNo = 0;\n    // Call the search method after formatting the date\n    this.search();\n  }\n\n\n  // Search method\n  search() {\n    // Clear previous search message\n    this.form.searchMessage = null;\n    // Perform the search operation with the search parameters\n    super.search();\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2R1Y3QvcHJvZHVjdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"\\n<app-navbar></app-navbar>\\n<style>\\n  .grad {\\n    background-image: linear-gradient(to bottom right, rgb(32, 168, 168),\\n        rgb(219, 231, 237));\\n    background-repeat: no repeat;\\n    background-size: 100%;\\n    padding-bottom: 25px;\\n  }\\n</style>\\n<div class=\\\"row \\\" style=\\\"padding-top: 7%; padding-bottom:15%;\\nbackground: url(assets/files/wall.jpg) no-repeat center center;\\nbackground-attachment: fixed;\\nbackground-size: cover;width:auto;\\n  height: auto;\\\">\\n\\n  <div class=\\\"col-sm-4\\\"></div>\\n  <div class=\\\"col-sm-4\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-body shadow-lg grad\\\">\\n        <form>\\n          <h2 *ngIf=\\\"!form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\" style=\\\"text-align: center;\\\">{{'Add Product'\\n            |\\n            translate }}</h2>\\n          <h2 *ngIf=\\\"form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\" style=\\\"text-align: center;\\\">{{'Update\\n            Product' |\\n            translate }}</h2>\\n\\n\\n          <!-- <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{form.message}}\\n          </div> -->\\n          <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{form.message}}\\n          </div>\\n          <div *ngIf=\\\"form.error && form.message != null\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{form.message}}\\n          </div>\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'Name' | translate }}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"name\\\" [(ngModel)]=\\\"form.data.name\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter Product Name' | translate }}\\\">\\n              </div>\\n            </div>\\n          </div>\\n          <span class=\\\"alertRedColor\\\">{{form.inputerror.name}}</span>\\n\\n          <div style=\\\"padding-top:3%\\\">\\n            <span><b>{{'Description' | translate }}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-bars grey-text \\\"></i> </div>\\n                </div>\\n                <textarea name=\\\"description\\\" [(ngModel)]=\\\"form.data.description\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter Description' | translate }}\\\"></textarea>\\n              </div>\\n            </div>\\n            <span class=\\\"alertRedColor\\\">{{form.inputerror.description}}</span>\\n          </div>\\n          <div class=\\\"row pt-3 pl-3 pb-3\\\">\\n            <div class=\\\"pt-2\\\">\\n              <button *ngIf=\\\"!form.data.id>0\\\" (click)=\\\"submit()\\\" class=\\\"btn btn-success mr-2\\\">\\n                {{'Save' | translate }}</button>\\n            </div>\\n            <div class=\\\"pt-2\\\">\\n              <button *ngIf=\\\"form.data.id>0\\\" (click)=\\\"submit()\\\" class=\\\"btn btn-success mr-2\\\">\\n                {{'Update' | translate }}</button>\\n            </div>\\n\\n            <div class=\\\"pl-3 pt-2\\\">\\n              <button (click)=\\\"forward('/productlist')\\\" class=\\\"btn btn-md btn-warning\\\">\\n                {{'List' | translate }}</button>\\n            </div>\\n          </div>\\n        </form>\\n      </div>\\n\\n    </div>\\n\\n  </div>\\n</div>\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\nimport { ServiceLocatorService } from '../service-locator.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { BaseCtl } from '../base.component';\n\n@Component({\n  selector: 'app-product',\n  templateUrl: './product.component.html',\n  styleUrls: ['./product.component.css']\n})\nexport class ProductComponent extends BaseCtl {\n\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute) {\n    super(locator.endpoints.PRODUCT, locator, route);\n  }\n  validate() {\n    return this.validateForm(this.form.data);\n  }\n  validateForm(form) {\n    let flag = true;\n    let validator = this.serviceLocator.dataValidator;\n    flag = flag && validator.isNotNullObject(form.name);\n    flag = flag && validator.isNotNullObject(form.description);\n    return flag;\n  }\n\n  populateForm(form, data) {\n    form.id = data.id;\n    form.name = data.name;\n    form.description = data.description;\n    form.status = data.status;\n  }\n\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2R1Y3QvcHJvZHVjdGxpc3QuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<app-navbar></app-navbar>\\n<div class=\\\"content-wrapper\\\" style=\\\"padding-top: 3%;padding-bottom: 15;\\n background: url(assets/files/back1.jpg) no-repeat center center;\\nbackground-attachment: fixed;\\nbackground-size: cover;width:auto;\\n  height: 90vh;\\\">\\n  <div class=\\\"container-fluid\\\">\\n\\n    <div class=\\\"panel panel-primary\\\">\\n      <div class=\\\"panel-heading\\\" style=\\\"height: 50px;\\\">\\n\\n        <div class=\\\"text-center\\\">\\n          <h1 class=\\\"text-primary font-weight-bold\\\">{{'Product List' | translate}}</h1>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"row p-1\\\">\\n        <div class=\\\"col-sm-1\\\"></div>\\n        <div class=\\\"col-sm-2\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.name\\\"\\n            placeholder=\\\"{{'Search Name' | translate}}\\\">\\n\\n        </div>\\n        <!-- <div class=\\\"col-sm-2\\\">\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.loginId\\\" placeholder=\\\"{{'Search Email' | translate}}\\\">\\n                  </div> -->\\n        <div class=\\\"col-sm-2\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.description\\\"\\n            placeholder=\\\"{{'Search Description' | translate}}\\\">\\n\\n        </div>\\n\\n        <div class=\\\"col-sm-2\\\">\\n\\n          <select class=\\\"form-control\\\" name=\\\"id\\\" [(ngModel)]=\\\"form.searchParams.id\\\" aria-label=\\\"ngSelected\\\">\\n            <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{' Select Product' | translate }}</option>\\n            <option *ngFor=\\\"let obj of form.preload.productList\\\" [value]=\\\"obj.key\\\">{{obj.value}}</option>\\n          </select>\\n        </div>\\n\\n\\n\\n        <div class=\\\"col-sm-1 ml-3\\\">\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary\\\">\\n            {{'Search' | translate }}</button>\\n        </div>\\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\n        <div class=\\\"col-lg-2 ml-4\\\">\\n          <button (click)=\\\"forward('/product')\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">{{'Add Priority' | translate}}\\n          </button>\\n        </div>\\n\\n        <div class=\\\"col-sm-1\\\">\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger\\\">\\n            {{'Delete'| translate}}</button>\\n        </div>\\n      </div>\\n      <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n        {{form.message}}\\n      </div>\\n      <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n        {{form.message}}\\n      </div>\\n\\n\\n\\n      <div class=\\\"p-1\\\">\\n        <div class=\\\"table-responsive\\\">\\n          <table class=\\\"table table-bordered table-striped table-hover font-weight-bold text-primary\\\">\\n            <thead class=\\\"thead-light text-uppercase\\\">\\n              <tr>\\n                <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" name=\\\"list_name\\\" value=\\\"h1\\\"\\n                    (change)=\\\"checkUncheckAll($event)\\\" /></th>\\n                <th>{{'S.No' | translate }}</th>\\n                <th>{{'Name' | translate }}</th>\\n                <th>{{'Description' | translate }}</th>\\n                <th>{{'Edit' | translate}}</th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr *ngFor=\\\"let m of form.list; let i = index\\\">\\n                <td> <input type=\\\"checkbox\\\" #checkboxes (change)=\\\"checklistUpdate()\\\" name=\\\"list_name\\\" id=\\\"{{m.id}}\\\"\\n                    value=\\\"{{isMasterSel}}\\\" />\\n                </td>\\n                <td> {{(form.pageNo*5)+i+ 1}} </td>\\n                <td> {{ m.name }} </td>\\n                <td> {{ m.description }} </td>\\n                <td>\\n                  <a (click)=\\\"forward( '/product/' +  m.id)\\\" style=\\\"cursor: pointer;\\\">\\n                    <i class=\\\"fa fa-edit text-info\\\"></i>\\n                  </a>\\n                  <!-- /\\n                                    <a (click)=\\\"delete(m.id)\\\" style=\\\"cursor: pointer;\\\">\\n                                        <i class=\\\"fa fa-trash text-danger\\\"></i>\\n                                    </a> -->\\n                </td>\\n\\n              </tr>\\n            </tbody>\\n          </table>\\n        </div>\\n        <table style=\\\"width: 100%;\\\">\\n          <tr>\\n            <td style=\\\"width: 50%;\\\">\\n              <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\"> {{'Previous' | translate\\n                }} </button>\\n            </td>\\n            <td *ngIf=\\\"form.list.length!=0\\\" style=\\\"width: 50%;\\\"></td>\\n            <td *ngIf=\\\"form.list.length==0\\\" style=\\\"width: 50%;\\\">\\n              <a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/productlist']\\\" (click)=\\\"exit()\\\">{{'Back' |\\n                translate}}</a>\\n            </td>\\n\\n\\n\\n\\n            <td><button (click)=\\\"next()\\\" [disabled]=\\\"nextList==0\\\" type=\\\"button\\\" class=\\\"btn btn-info\\\"> {{'Next' |\\n                translate }}</button></td>\\n          </tr>\\n        </table>\\n\\n\\n\\n      </div>\\n\\n    </div>\\n\\n  </div>\\n</div>\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\nimport { BaseListCtl } from '../base-list.component';\nimport { ServiceLocatorService } from '../service-locator.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-productlist',\n  templateUrl: './productlist.component.html',\n  styleUrls: ['./productlist.component.css']\n})\nexport class ProductlistComponent extends BaseListCtl {\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute) {\n    super(locator.endpoints.PRODUCT, locator, route);\n  }\n\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2R1Y3RkZXRhaWxzL3Byb2R1Y3RkZXRhaWxzLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<app-navbar></app-navbar>\\n<style>\\n  .grad {\\n    background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\n    background-repeat: no-repeat;\\n    background-size: 100%;\\n    padding-bottom: 25px;\\n  }\\n\\n  .input-group-addon {\\n    box-shadow: 9px 8px 7px #001a33;\\n  }\\n\\n  .required-field {\\n    color: red;\\n    font-weight: bold;\\n  }\\n\\n  .alertRedColor {\\n    color: red;\\n  }\\n\\n  .card-body {\\n    padding: 2rem;\\n  }\\n\\n  .input-group-text i {\\n    width: 1.5rem;\\n  }\\n\\n  .btn-primary,\\n  .btn-success,\\n  .btn-warning {\\n    width: 100%;\\n  }\\n\\n  .form-control {\\n    height: calc(2.25rem + 2px);\\n  }\\n\\n  .form-group {\\n    margin-bottom: 1.5rem;\\n  }\\n\\n  .input-group-prepend .input-group-text {\\n    background-color: #e9ecef;\\n    border: 1px solid #ced4da;\\n  }\\n\\n  .input-group-prepend .input-group-text i {\\n    color: #495057;\\n  }\\n\\n  .row {\\n    margin-left: 0;\\n    margin-right: 0;\\n  }\\n\\n  .textarea-height {\\n    height: 100px;\\n  }\\n\\n  .card {\\n    margin: auto;\\n    max-width: 500px;\\n  }\\n</style>\\n\\n<div class=\\\"container-fluid\\\"\\n  style=\\\"padding: 2% 0; background: url('assets/files/wall.jpg') no-repeat center center; background-attachment: fixed; background-size: cover; width: 100%; height: auto;\\\">\\n  <div class=\\\"row justify-content-center\\\">\\n    <div class=\\\"col-md-6\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-body input-group-addon grad\\\">\\n          <form name=\\\"userForm\\\">\\n            <h2 *ngIf=\\\"!form.data.id\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{ 'Add Product Details' |\\n              translate }}\\n            </h2>\\n            <h2 *ngIf=\\\"form.data.id\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{ 'Update Product Details' |\\n              translate }}\\n            </h2>\\n\\n            <div *ngIf=\\\"!form.error && form.message\\\" class=\\\"alert alert-success alert-dismissible\\\">\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n              {{ form.message }}\\n            </div>\\n\\n            <div *ngIf=\\\"form.error && form.message\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n              {{ form.message }}\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label><b>{{ 'Category' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-flag grey-text\\\"></i></div>\\n                </div>\\n                <select class=\\\"form-control\\\" name=\\\"categoryId\\\" [(ngModel)]=\\\"form.data.categoryId\\\"\\n                  aria-label=\\\"ngSelected\\\">\\n                  <option [ngValue]=\\\"undefined\\\">{{ 'Select Category' | translate }}</option>\\n                  <option *ngFor=\\\"let obj of form.preload.categoryList\\\" [value]=\\\"obj.key\\\">{{ obj.value }}</option>\\n                </select>\\n              </div>\\n              <span *ngIf=\\\"form.inputerror.categoryId\\\" class=\\\"alertRedColor\\\">{{form.inputerror.categoryId}}</span>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label><b>{{ 'Name' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-tag grey-text\\\"></i></div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"name\\\" [(ngModel)]=\\\"form.data.name\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{ 'Enter name' | translate }}\\\">\\n              </div>\\n              <span *ngIf=\\\"form.inputerror.name\\\" class=\\\"alertRedColor\\\">{{form.inputerror.name}}</span>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label><b>{{ 'Price' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-dollar-sign grey-text\\\"></i></div>\\n                </div>\\n                <input type=\\\"number\\\" name=\\\"price\\\" [(ngModel)]=\\\"form.data.price\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{ 'Enter Price' | translate }}\\\">\\n              </div>\\n              <span *ngIf=\\\"form.inputerror.price\\\" class=\\\"alertRedColor\\\">{{ 'price' | translate }}</span>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label><b>{{ 'Date of Purchase' | translate }}</b><span class=\\\"required-field\\\"></span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-calendar-alt grey-text\\\"></i></div>\\n                </div>\\n                <input type=\\\"date\\\" name=\\\"dateOfPurchase\\\" [value]=\\\"form.data.dateOfPurchase | date:'yyyy-MM-dd'\\\"\\n                  (input)=\\\"form.data.dateOfPurchase=parseDate($event.target.value)\\\" class=\\\"form-control\\\" required />\\n              </div>\\n              <span *ngIf=\\\"form.inputerror.dateOfPurchase\\\" class=\\\"alertRedColor\\\">{{ 'dateOfPurchase' | translate\\n                }}</span>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label><b>{{ 'Description' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-bars grey-text\\\"></i></div>\\n                </div>\\n                <textarea name=\\\"description\\\" [(ngModel)]=\\\"form.data.description\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter Description' | translate }}\\\"></textarea>\\n              </div>\\n              <span *ngIf=\\\"form.inputerror.description\\\" class=\\\"alertRedColor\\\">{{form.inputerror.description}}</span>\\n            </div>\\n\\n            <div class=\\\"row pt-2 pb-3 justify-content-center\\\">\\n              <div class=\\\"col-md-4\\\">\\n                <button *ngIf=\\\"!form.data.id\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{ 'Save' | translate\\n                  }}</button>\\n              </div>\\n              <div class=\\\"col-md-4\\\">\\n                <button *ngIf=\\\"form.data.id\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{ 'Update' | translate\\n                  }}</button>\\n              </div>\\n              <div class=\\\"col-md-4\\\">\\n                <a class=\\\"btn btn-warning\\\" type=\\\"button\\\" [routerLink]=\\\"['/productdetailslist']\\\">{{ 'List' | translate\\n                  }}</a>\\n              </div>\\n            </div>\\n          </form>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { BaseCtl } from '../base.component';\nimport { ServiceLocatorService } from '../service-locator.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-productdetails',\n  templateUrl: './productdetails.component.html',\n  styleUrls: ['./productdetails.component.css']\n})\nexport class ProductdetailsComponent extends BaseCtl {\n\n  getKey = false;\n  selected = null;\n  userForm: FormGroup = null;\n  uploadForm: FormGroup;\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\n    super(locator.endpoints.PRODUCTDETAILS, locator, route);\n  }\n\n  submit() {\n    var _self = this;\n    console.log('in submit');\n    console.log(this.form);\n    console.log(this.form.data);\n\n    this.serviceLocator.httpService.post(this.api.save, this.form.data, function (res) {\n      _self.form.message = '';\n      _self.form.data.id = res.result.data;\n\n\n      if (res.success) {\n        _self.form.message = \"Data is saved\";\n        _self.form.data.id = res.result.data;\n\n        console.log(_self.form.data.id);\n        console.log(\"----------Chetan----------.\");\n\n      } else {\n        _self.form.error = true;\n        if (res.result.inputerror) {\n          _self.form.inputerror = res.result.inputerror;\n        }\n        _self.form.message = res.result.message;\n      }\n      _self.form.data.id = res.result.data;\n      console.log('FORM', _self.form);\n    });\n  }\n\n  submit1() {\n    var _self = this;\n    console.log(this.form + \"submit running start\");\n    console.log(this.form.data + \"form data going to be submit\");\n    this.serviceLocator.httpService.post(this.api.search, this.form.data, function (res) {\n      _self.form.message = '';\n      _self.form.inputerror = {};\n      _self.form.data.id = res.result.data;\n\n\n      if (res.success) {\n        _self.form.message = \"Data is saved\";\n        _self.form.data.id = res.result.data;\n\n\n        console.log(_self.form.data.id);\n        console.log(\"--------------------.\");\n\n      } else {\n        _self.form.error = true;\n        _self.form.inputerror = res.result.inputerror;\n        _self.form.message = res.result.message;\n      }\n      _self.form.data.id = res.result.data;\n      console.log('FORM', _self.form);\n    });\n  }\n\n\n\n\n  onUpload(userform: FormData) {\n    this.submit();\n    console.log(this.form.data.id + '---- after submit');\n\n  }\n\n\n\n  validateForm(form) {\n    let flag = true;\n    let validator = this.serviceLocator.dataValidator;\n    flag = flag && validator.isNotNullObject(form.categoryId);\n    console.log(form.categoryId);\n    flag = flag && validator.isNotNullObject(form.name);\n    console.log(form.name);\n    flag = flag && validator.isNotNullObject(form.price);\n    console.log(form.price);\n    flag = flag && validator.isNotNullObject(form.dateOfPurchase);\n    console.log(form.dateOfPurchase);\n    flag = flag && validator.isNotNullObject(form.description);\n    console.log(form.description);\n\n\n    return flag;\n  }\n\n  populateForm(form, data) {\n    form.id = data.id;\n    console.log(form.id + 'populate form in shoppingcomponent');\n    form.name = data.name;\n    form.price = data.price;\n    form.dateOfPurchase = data.dateOfPurchase;\n    form.description = data.description;\n    form.categoryId = data.categoryId;\n\n\n  }\n\n  validatePhone(event: KeyboardEvent) {\n    const input = event.key;\n    // Check if the input is a number or backspace\n    if ((isNaN(Number(input)) && input !== 'Backspace') || (input === ' ')) {\n      event.preventDefault();\n    }\n    // Limit the input to 10 characters\n    if (this.form.data.phone && this.form.data.phone.length >= 10 && input !== 'Backspace') {\n      event.preventDefault();\n    }\n  }\n\n  parseDate(dateString: string): Date {\n    if (dateString) {\n      return new Date(dateString);\n    }\n    return null;\n  }\n  test() {\n\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2R1Y3RkZXRhaWxzL3Byb2R1Y3RkZXRhaWxzbGlzdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-navbar></app-navbar>\\n\\n<style>\\n  #nnn {\\n    background: none;\\n    border: none;\\n    cursor: pointer;\\n  }\\n\\n  .panel-heading {\\n    height: 50px;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n  }\\n\\n  .search-inputs {\\n    margin-top: 20px;\\n  }\\n\\n  .search-inputs .form-control,\\n  .search-inputs .btn {\\n    margin-bottom: 10px;\\n  }\\n\\n  .content-wrapper {\\n    background: url(assets/files/wall.jpg) no-repeat center center;\\n    background-attachment: fixed;\\n    background-size: cover;\\n    width: auto;\\n    height: 105vh;\\n    padding: 20px;\\n  }\\n\\n  .table-responsive {\\n    margin-top: 20px;\\n  }\\n</style>\\n\\n<div class=\\\"content-wrapper\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"panel panel-primary\\\">\\n      <div class=\\\"panel-heading\\\">\\n        <h1 class=\\\"text-primary font-weight-bold\\\">{{ 'Product Details List' | translate }}</h1>\\n      </div>\\n\\n      <div class=\\\"row search-inputs p-1 justify-content-center\\\">\\n        <div class=\\\"col-sm-2\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.name\\\"\\n            placeholder=\\\"{{ 'Search name' | translate }}\\\">\\n        </div>\\n        <div class=\\\"col-sm-2\\\">\\n          <input type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.price\\\"\\n            placeholder=\\\"{{ 'Search price' | translate }}\\\">\\n        </div>\\n        <div class=\\\"col-sm-2\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.description\\\"\\n            placeholder=\\\"{{ 'Search description' | translate }}\\\">\\n        </div>\\n        <div class=\\\"col-sm-2\\\">\\n          <input type=\\\"date\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.dateOfPurchase\\\"\\n            (ngModelChange)=\\\"formatDate($event)\\\" placeholder=\\\"{{ 'Search dateOfPurchase' | translate }}\\\">\\n        </div>\\n        <div class=\\\"col-sm-2\\\">\\n          <select class=\\\"form-control\\\" name=\\\"categoryId\\\" [(ngModel)]=\\\"form.searchParams.categoryId\\\"\\n            aria-label=\\\"ngSelected\\\">\\n            <option [ngValue]=\\\"null\\\" value=\\\"\\\">{{ 'Select category' | translate }}</option>\\n            <option *ngFor=\\\"let obj of form.preload.categoryList\\\" [value]=\\\"obj.key\\\">{{ obj.value }}</option>\\n          </select>\\n        </div>\\n        <div class=\\\"col-sm-1\\\">\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary\\\">{{ 'Search' | translate }}</button>\\n        </div>\\n        <div class=\\\"col-sm-2\\\">\\n          <button (click)=\\\"forward('/productdetails')\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">{{ 'Add Product Details' |\\n            translate }}</button>\\n        </div>\\n        <div class=\\\"col-sm-1\\\">\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger\\\">{{ 'Delete' | translate }}</button>\\n        </div>\\n      </div>\\n\\n      <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n        {{ form.message }}\\n      </div>\\n      <div *ngIf=\\\"!form.error && form.message\\\" class=\\\"alert alert-success alert-dismissible\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n        {{ form.message }}\\n      </div>\\n\\n      <div class=\\\"table-responsive\\\">\\n        <table class=\\\"table table-bordered table-hover font-weight-bold text-dark\\\">\\n          <thead class=\\\"thead-dark text-uppercase\\\">\\n            <tr align=\\\"center\\\">\\n              <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" name=\\\"list_name\\\"\\n                  (change)=\\\"checkUncheckAll($event)\\\" /></th>\\n              <th>{{ 'S.No' | translate }}</th>\\n              <th>{{ 'name' | translate }}</th>\\n              <th>{{ 'price' | translate }}</th>\\n              <th>{{ 'dateOfPurchase' | translate }}</th>\\n              <th>{{ 'description' | translate }}</th>\\n              <th>{{ 'category' | translate }}</th>\\n              <th>{{ 'Edit' | translate }}</th>\\n            </tr>\\n          </thead>\\n          <tbody>\\n            <tr *ngFor=\\\"let m of form.list; let i = index\\\" align=\\\"center\\\">\\n              <td><input type=\\\"checkbox\\\" #checkboxes (change)=\\\"checklistUpdate()\\\" name=\\\"list_name\\\" [id]=\\\"m.id\\\" /></td>\\n              <td>{{ (form.pageNo * 5) + i + 1 }}</td>\\n              <td>{{ m.name }}</td>\\n              <td>{{ m.price }}</td>\\n              <td>{{ convertToLocalDate(m.dateOfPurchase) }}</td>\\n              <td>{{ m.description }}</td>\\n              <td>{{ m.categoryName }}</td>\\n              <td>\\n                <button class=\\\"fa fa-edit text-primary\\\" id=\\\"nnn\\\" (click)=\\\"forward('/productdetails/' + m.id)\\\"></button>\\n              </td>\\n            </tr>\\n          </tbody>\\n        </table>\\n\\n        <div class=\\\"d-flex justify-content-between mt-3\\\">\\n          <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\">{{ 'Previous' | translate\\n            }}</button>\\n          <div *ngIf=\\\"form.list.length == 0\\\">\\n            <a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/productdetailslist']\\\" (click)=\\\"exit()\\\">{{ 'Back' |\\n              translate }}</a>\\n          </div>\\n          <button (click)=\\\"next()\\\" [disabled]=\\\"nextList == 0\\\" class=\\\"btn btn-info\\\">{{ 'Next' | translate }}</button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\nimport { BaseListCtl } from '../base-list.component';\nimport { ServiceLocatorService } from '../service-locator.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-productdetailslist',\n  templateUrl: './productdetailslist.component.html',\n  styleUrls: ['./productdetailslist.component.css']\n})\nexport class ProductdetailslistComponent extends BaseListCtl implements OnInit {\n\n  public form = {\n    error: false,\n    message: null,\n    preload: [],\n    data: { id: null },\n    inputerror: {},\n    searchParams: {\n      name: '', // Add name field for search\n      price: null,\n      description: '',\n      dateOfPurchase: '',\n      categoryId: null,\n      date: '' // Initialize date field\n    },\n    searchMessage: null,\n    list: [],\n    pageNo: 0\n  };\n\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\n    super(locator.endpoints.PRODUCTDETAILS, locator, route);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n  }\n\n  // Format date function\n  formatDate(event: any) {\n    const selectedDate = new Date(event);\n    const formattedDate = selectedDate.toISOString().split('T')[0];\n    this.form.searchParams.date = formattedDate;\n  }\n\n  // Convert date to local format for display\n  convertToLocalDate(dateString: string): string {\n    const date = new Date(dateString);\n    // Format date to 'MM/DD/YYYY'\n    const options = { year: 'numeric', month: '2-digit', day: '2-digit' };\n    return date.toLocaleDateString(undefined, options);\n  }\n\n  // Submit method\n  submit() {\n    // Reset page number before searching\n    this.form.pageNo = 0;\n    // Call the search method after formatting the date\n    this.search();\n  }\n\n\n  // Search method\n  search() {\n    // Clear previous search message\n    this.form.searchMessage = null;\n    // Perform the search operation with the search parameters\n    super.search();\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2plY3QvcHJvamVjdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-navbar></app-navbar>\\n\\n<style>\\n  .grad {\\n    background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\n    background-repeat: no-repeat;\\n    background-size: 100%;\\n    padding-bottom: 25px;\\n  }\\n\\n  .input-group-addon {\\n    box-shadow: 9px 8px 7px #001a33;\\n  }\\n\\n  .required-field {\\n    color: red;\\n    font-weight: bold;\\n  }\\n\\n  .alertRedColor {\\n    color: red;\\n  }\\n\\n  .card-body {\\n    padding: 2rem;\\n  }\\n\\n  .input-group-text i {\\n    width: 1.5rem;\\n  }\\n\\n  .btn-primary,\\n  .btn-success,\\n  .btn-warning {\\n    width: 100%;\\n  }\\n\\n  .form-control {\\n    height: calc(2.25rem + 2px);\\n  }\\n\\n  .form-group {\\n    margin-bottom: 1.5rem;\\n  }\\n\\n  .input-group-prepend .input-group-text {\\n    background-color: #e9ecef;\\n    border: 1px solid #ced4da;\\n  }\\n\\n  .input-group-prepend .input-group-text i {\\n    color: #495057;\\n  }\\n\\n  .row {\\n    margin-left: 0;\\n    margin-right: 0;\\n  }\\n\\n  .textarea-height {\\n    height: 100px;\\n  }\\n\\n  .card {\\n    margin: auto;\\n    max-width: 500px;\\n  }\\n</style>\\n\\n<div class=\\\"container-fluid\\\" style=\\\"padding: 2% 0; background: url('assets/files/wall.jpg') no-repeat center center; background-attachment: fixed; background-size: cover; width: 100%; height: auto;\\\">\\n  <div class=\\\"row justify-content-center\\\">\\n    <div class=\\\"col-md-6\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-body input-group-addon grad\\\">\\n          <form name=\\\"userForm\\\">\\n            <h2 *ngIf=\\\"!form.data.id\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{ 'Add Project' | translate }}</h2>\\n            <h2 *ngIf=\\\"form.data.id\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{ 'Update Project' | translate }}</h2>\\n\\n            <div *ngIf=\\\"!form.error && form.message == 'Data is saved'\\\" class=\\\"alert alert-success alert-dismissible\\\">\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n              {{ form.message }}\\n            </div>\\n\\n            <div *ngIf=\\\"form.error && form.message\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n              {{ form.message }}\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label><b>{{ 'Category' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fas fa-flag\\\"></i></div>\\n                </div>\\n                <select class=\\\"form-control\\\" name=\\\"categoryId\\\" [(ngModel)]=\\\"form.data.categoryId\\\" aria-label=\\\"ngSelected\\\">\\n                  <option [ngValue]=\\\"undefined\\\">{{ 'Select category' | translate }}</option>\\n                  <option *ngFor=\\\"let obj of form.preload.categoryList\\\" [value]=\\\"obj.key\\\">{{ obj.value }}</option>\\n                </select>\\n              </div>\\n              <span *ngIf=\\\"form.inputerror.categoryId\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.categoryId }}</span>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label><b>{{ 'Name' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fas fa-user\\\"></i></div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"name\\\" [(ngModel)]=\\\"form.data.name\\\" class=\\\"form-control\\\" placeholder=\\\"{{ 'Enter name' | translate }}\\\" (keypress)=\\\"validateAlphabetInput($event)\\\">\\n              </div>\\n              <span *ngIf=\\\"form.inputerror.name\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.name }}</span>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label><b>{{ 'Version' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fas fa-money-bill-wave\\\"></i></div>\\n                </div>\\n                <input type=\\\"number\\\" name=\\\"version\\\" [(ngModel)]=\\\"form.data.version\\\" class=\\\"form-control\\\" placeholder=\\\"{{ 'Enter version' | translate }}\\\" (keypress)=\\\"validateNumberInput($event)\\\">\\n              </div>\\n              <span *ngIf=\\\"form.inputerror.version\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.version }}</span>\\n            </div>\\n            \\n            \\n            \\n\\n            <div class=\\\"form-group\\\">\\n              <label><b>{{ 'Open Date' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"far fa-calendar-alt\\\"></i></div>\\n                </div>\\n                <input type=\\\"date\\\" name=\\\"openDate\\\" [value]=\\\"form.data.openDate | date:'yyyy-MM-dd'\\\" (input)=\\\"form.data.openDate=parseDate($event.target.value)\\\" class=\\\"form-control\\\" required />\\n              </div>\\n              <span *ngIf=\\\"form.inputerror.openDate\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.openDate }}</span>\\n            </div>\\n\\n            <div class=\\\"row pt-2 pb-3 justify-content-center\\\">\\n              <div class=\\\"col-md-4\\\">\\n                <button *ngIf=\\\"!form.data.id\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{ 'Save' | translate }}</button>\\n              </div>\\n              <div class=\\\"col-md-4\\\">\\n                <button *ngIf=\\\"form.data.id\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{ 'Update' | translate }}</button>\\n              </div>\\n              <div class=\\\"col-md-4\\\">\\n                <a class=\\\"btn btn-warning\\\" type=\\\"button\\\" [routerLink]=\\\"['/projectlist']\\\">{{ 'List' | translate }}</a>\\n              </div>\\n            </div>\\n          </form>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<app-footer></app-footer>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { BaseCtl } from '../base.component';\nimport { ServiceLocatorService } from '../service-locator.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-project',\n  templateUrl: './project.component.html',\n  styleUrls: ['./project.component.css']\n})\nexport class ProjectComponent  extends BaseCtl {\n\n  getKey = false;\n  selected = null;\n  userForm: FormGroup = null;\n  uploadForm: FormGroup;\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\n    super(locator.endpoints.PROJECT, locator, route);\n  }\n\n  submit() {\n    var _self = this;\n    console.log('in submit');\n    console.log(this.form);\n    console.log(this.form.data);\n  \n    this.serviceLocator.httpService.post(this.api.save, this.form.data, function (res) {\n      _self.form.message = '';\n      _self.form.inputerror = {}; // Clear input errors here\n  \n      if (res.success) {\n        _self.form.error = false; // Set error to false on success\n        _self.form.message = \"Data is saved\";\n        _self.form.data.id = res.result.data;\n        console.log(_self.form.data.id);\n        console.log(\"----------Chetan----------.\");\n  \n        // Clear form data if needed\n        // _self.form.data = {};\n  \n      } else {\n        _self.form.error = true;\n        if (res.result.inputerror) {\n          _self.form.inputerror = res.result.inputerror;\n        }\n        _self.form.message = res.result.message;\n      }\n      console.log('FORM', _self.form);\n    });\n  }\n  \n  \n\n  submit1() {\n    var _self = this;\n    console.log(this.form + \"submit running start\");\n    console.log(this.form.data + \"form data going to be submit\");\n    this.serviceLocator.httpService.post(this.api.search, this.form.data, function (res) {\n      _self.form.message = '';\n      _self.form.inputerror = {};\n      _self.form.data.id = res.result.data;\n\n\n      if (res.success) {\n        _self.form.message = \"Data is saved\";\n        _self.form.data.id = res.result.data;\n\n\n        console.log(_self.form.data.id);\n        console.log(\"--------------------.\");\n\n      } else {\n        _self.form.error = true;\n        _self.form.inputerror = res.result.inputerror;\n        _self.form.message = res.result.message;\n      }\n      _self.form.data.id = res.result.data;\n      console.log('FORM', _self.form);\n    });\n  }\n\n\n\n\n  onUpload(userform: FormData) {\n    this.submit();\n    console.log(this.form.data.id + '---- after submit');\n\n  }\n\n\n  validateForm(form) {\n    let flag = true;\n    let validator = this.serviceLocator.dataValidator;\n    flag = flag && validator.isNotNullObject(form.categoryId);\n    console.log(form.categoryId);\n    flag = flag && validator.isNotNullObject(form.name);\n    console.log(form.name);\n    flag = flag && validator.isNotNullObject(form.version);\n    console.log(form.paymentTerm);\n    flag = flag && validator.isNotNullObject(form.openDate);\n    console.log(form.openDate);\n\n    return flag;\n  }\n\n  populateForm(form, data) {\n    form.id = data.id;\n    console.log(form.id + 'populate form in shoppingcomponent');\n    form.name = data.name;\n    form.version = data.version;\n    form.openDate = data.openDate;\n    form.categoryId = data.categoryId;\n\n\n  }\n\n  validatePhone(event: KeyboardEvent) {\n    const input = event.key;\n    // Check if the input is a number or backspace\n    if ((isNaN(Number(input)) && input !== 'Backspace') || (input === ' ')) {\n      event.preventDefault();\n    }\n    // Limit the input to 10 characters\n    if (this.form.data.phone && this.form.data.phone.length >= 10 && input !== 'Backspace') {\n      event.preventDefault();\n    }\n  }\n\n  validateNumberInput(event: KeyboardEvent) {\n    const charCode = event.which ? event.which : event.keyCode;\n    const charStr = String.fromCharCode(charCode);\n\n    // Allow only digits\n    if (!/^\\d$/.test(charStr)) {\n      event.preventDefault();\n    }\n  }\n\n\n  validateAlphabetInput(event) {\n    const charCode = event.which || event.keyCode;\n    const charStr = String.fromCharCode(charCode);\n\n    // Regular expression to test if the character is a letter\n    const letterRegex = /^[a-zA-Z\\s]+$/;\n\n    // Test if the input matches the allowed characters\n    if (!letterRegex.test(charStr)) {\n      event.preventDefault();\n    }\n\n    // Optionally, check the entire value against the name format regex\n    const inputElement = event.target;\n    const inputValue = inputElement.value + charStr; // Add the current character to the input value\n\n    // Regex for valid name format \"FirstName LastName\"\n    const nameRegex = /^[A-Z][a-z]+ [A-Z][a-z]+$/;\n\n    // Check if the current value matches the valid name format\n    if (!nameRegex.test(inputValue)) {\n      // Handle invalid input (e.g., disable submit button, show error message)\n      // Example:\n      inputElement.classList.add('invalid'); // Apply CSS class for invalid input\n    } else {\n      inputElement.classList.remove('invalid'); // Remove invalid CSS class if format is valid\n    }\n  }\n\n\n\n\n  parseDate(dateString: string): Date {\n    if (dateString) {\n      return new Date(dateString);\n    }\n    return null;\n  }\n  test() {\n\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2plY3QvcHJvamVjdGxpc3QuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<app-navbar></app-navbar>\\n\\n<style>\\n  /* Adjustments for panel heading and main content wrapper */\\n  .panel-heading {\\n    height: 50px;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    margin-bottom: 20px; /* Added margin bottom for spacing */\\n  }\\n\\n  .content-wrapper {\\n    background: url(assets/files/wall.jpg) no-repeat center center;\\n    background-attachment: fixed;\\n    background-size: cover;\\n    padding: 20px;\\n    min-height: calc(100vh - 20px); /* Adjusted to ensure full height minus padding */\\n    box-sizing: border-box; /* Ensures padding is included in height calculation */\\n  }\\n\\n  .search-inputs {\\n    margin-top: 20px;\\n    margin-bottom: 20px; /* Added margin bottom for spacing */\\n  }\\n\\n  .search-inputs .form-control,\\n  .search-inputs .btn {\\n    margin-bottom: 10px;\\n  }\\n\\n  .table-responsive {\\n    margin-top: 20px;\\n    overflow-x: auto; /* Ensures horizontal scroll if table overflows */\\n  }\\n</style>\\n\\n<div class=\\\"content-wrapper\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"panel panel-primary\\\">\\n      <div class=\\\"panel-heading\\\">\\n        <h1 class=\\\"text-primary font-weight-bold\\\">{{ 'Project List' | translate }}</h1>\\n      </div>\\n\\n      <div class=\\\"row search-inputs justify-content-center\\\">\\n        <div class=\\\"col-md-3\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.name\\\"\\n            placeholder=\\\"{{ 'Search Name' | translate }}\\\" (input)=\\\"validateInput($event, 'name')\\\">\\n          <div *ngIf=\\\"!isValidNameInput\\\" class=\\\"text-danger\\\">{{ nameErrorMessage }}</div>\\n        </div>\\n\\n        <div class=\\\"col-md-3\\\">\\n          <input type=\\\"date\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.openDate\\\"\\n            (ngModelChange)=\\\"formatDate($event)\\\" placeholder=\\\"{{ 'Search openDate' | translate }}\\\">\\n        </div>\\n\\n        <div class=\\\"col-md-3\\\">\\n          <input type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.version\\\"\\n            placeholder=\\\"{{ 'Search version' | translate }}\\\">\\n        </div>\\n\\n        <div class=\\\"col-md-3\\\">\\n          <select class=\\\"form-control\\\" name=\\\"categoryId\\\" [(ngModel)]=\\\"form.searchParams.categoryId\\\">\\n            <option [ngValue]=\\\"undefined\\\">{{ 'Select category' | translate }}</option>\\n            <option *ngFor=\\\"let obj of form.preload.categoryList\\\" [value]=\\\"obj.key\\\">{{ obj.value }}</option>\\n          </select>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"row mt-2 justify-content-center\\\">\\n        <div class=\\\"col-md-2\\\">\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary btn-block\\\">{{ 'Search' | translate }}</button>\\n        </div>\\n        <div class=\\\"col-md-2\\\">\\n          <button (click)=\\\"forward('/project')\\\" type=\\\"button\\\" class=\\\"btn btn-success btn-block\\\">{{ 'Add project' | translate }}</button>\\n        </div>\\n        <div class=\\\"col-md-2\\\">\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger btn-block\\\">{{ 'Delete' | translate }}</button>\\n        </div>\\n      </div>\\n\\n      <div *ngIf=\\\"form.error || form.message\\\" class=\\\"row mt-2 justify-content-center\\\">\\n        <div class=\\\"col-md-6\\\">\\n          <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{ form.message }}\\n          </div>\\n          <div *ngIf=\\\"!form.error && form.message\\\" class=\\\"alert alert-success alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{ form.message }}\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"table-responsive mt-3\\\">\\n        <table class=\\\"table table-bordered table-hover font-weight-bold text-dark\\\">\\n          <thead class=\\\"thead-dark text-uppercase\\\">\\n            <tr align=\\\"center\\\">\\n              <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" name=\\\"list_name\\\" (change)=\\\"checkUncheckAll($event)\\\" /></th>\\n              <th>{{ 'S.No' }}</th>\\n              <th>{{ 'Name' }}</th>\\n              <th>{{ 'version' }}</th>\\n              <th>{{ 'open Date' }}</th>\\n              <th>{{ 'Category' }}</th>\\n              <th>{{ 'Edit' }}</th>\\n            </tr>\\n          </thead>\\n          <tbody>\\n            <tr *ngFor=\\\"let m of form.list; let i = index\\\" align=\\\"center\\\">\\n              <td><input type=\\\"checkbox\\\" #checkboxes (change)=\\\"checklistUpdate()\\\" name=\\\"list_name\\\" [id]=\\\"m.id\\\" /></td>\\n              <td>{{ (form.pageNo * 5) + i + 1 }}</td>\\n              <td>{{ m.name }}</td>\\n              <td>{{ m.version }}</td>\\n              <td>{{ convertToLocalDate(m.openDate) }}</td>\\n              <td>{{ m.categoryName }}</td>\\n              <td>\\n                <button class=\\\"fa fa-edit text-primary\\\" id=\\\"nnn\\\" (click)=\\\"forward('/project/' + m.id)\\\"></button>\\n              </td>\\n            </tr>\\n          </tbody>\\n        </table>\\n      </div>\\n\\n      <div class=\\\"d-flex justify-content-between mt-3\\\">\\n        <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\">{{ 'Previous' | translate }}</button>\\n        <div *ngIf=\\\"form.list.length == 0\\\">\\n          <a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/projectlist']\\\" (click)=\\\"exit()\\\">{{ 'Back' | translate }}</a>\\n        </div>\\n        <button (click)=\\\"next()\\\" [disabled]=\\\"nextList == 0\\\" class=\\\"btn btn-info\\\">{{ 'Next' | translate }}</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<app-footer></app-footer>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { BaseListCtl } from '../base-list.component';\nimport { ServiceLocatorService } from '../service-locator.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\n\n@Component({\n  selector: 'app-projectlist',\n  templateUrl: './projectlist.component.html',\n  styleUrls: ['./projectlist.component.css']\n})\nexport class ProjectlistComponent extends BaseListCtl implements OnInit {\n\n  public form = {\n    error: false,\n    message: null,\n    preload: [],\n    data: { id: null },\n    inputerror: {},\n    searchParams: {\n\n      name: '',\n      version: '',\n      opendate: '', // Initialize date field\n      categoryId: '',\n      date: ''\n    },\n    searchMessage: null,\n    list: [],\n    pageNo: 0\n  };\n\n  isValidMobileInput: boolean = true;\n  isValidNameInput: boolean = true;\n  nameErrorMessage: string = '';\n  mobileErrorMessage: string = '';\n\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\n    super(locator.endpoints.PROJECT, locator, route);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n  }\n\n  // Format date function\n  formatDate(event: any) {\n    const selectedDate = new Date(event);\n    const formattedDate = selectedDate.toISOString().split('T')[0]; // Ensure it's in ISO format\n    this.form.searchParams.date = formattedDate;\n  }\n\n\n  // Convert date to local format for display\n  convertToLocalDate(dateString: string): string {\n    const date = new Date(dateString);\n    // Format date to 'MM/DD/YYYY'\n    const options = { year: 'numeric', month: '2-digit', day: '2-digit' };\n    return date.toLocaleDateString(undefined, options);\n  }\n\n  // Validate input for name and mobile fields\n  validateInput(event: any, field: string) {\n    const value = event.target.value;\n    if (field === 'mobile') {\n      this.isValidMobileInput = /^[0-9]*$/.test(value); // Check if the input contains only numbers\n      if (!this.isValidMobileInput) {\n        this.mobileErrorMessage = 'Please type numbers only';\n      } else {\n        this.mobileErrorMessage = '';\n      }\n    } else if (field === 'name') {\n      this.isValidNameInput = /^[A-Za-z\\s]*$/.test(value); // Check if the input contains only letters and spaces\n      if (!this.isValidNameInput) {\n        this.nameErrorMessage = 'Please type alphabets only';\n      } else {\n        this.nameErrorMessage = '';\n      }\n    }\n  }\n\n\n  // Submit method\n  submit() {\n    // Reset page number before searching\n    this.form.pageNo = 0;\n    // Call the search method after formatting the date\n    this.search();\n  }\n\n\n  // Search method\n  search() {\n    // Clear previous search message\n    this.form.searchMessage = null;\n    // Perform the search operation with the search parameters\n    super.search();\n  }\n}\n","module.exports = \"<app-navbar></app-navbar>\\n<div class=\\\"content-wrapper\\\" style=\\\"padding-top: 3%;padding-bottom: 15;\\n background: url(assets/files/back1.jpg) no-repeat center center;\\nbackground-attachment: fixed;\\nbackground-size: cover;width:auto;\\n  height: 90vh;\\\" >\\n    <div class=\\\"container-fluid\\\">\\n\\n        <div class=\\\"panel panel-primary\\\">\\n            <div class=\\\"panel-heading\\\" style=\\\"height: 50px;\\\">\\n                \\n                <div class=\\\"text-center\\\">\\n                    <h1 class=\\\"text-primary font-weight-bold\\\">{{'Role List' | translate}}</h1>\\n                  </div>\\n                </div>\\n          \\n                <div class=\\\"row p-1\\\">\\n                  <div class=\\\"col-sm-1\\\"></div>\\n                  <div class=\\\"col-sm-2\\\">\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.name\\\"\\n                      placeholder=\\\"{{'Search Name' | translate}}\\\">\\n          \\n                  </div>\\n                  <!-- <div class=\\\"col-sm-2\\\">\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.loginId\\\" placeholder=\\\"{{'Search Email' | translate}}\\\">\\n                  </div> -->\\n                  <div class=\\\"col-sm-2\\\">\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.description\\\"\\n                      placeholder=\\\"{{'Search Description' | translate}}\\\">\\n          \\n                  </div>\\n\\n                  <div class=\\\"col-sm-2\\\">\\n\\n                    <select class=\\\"form-control\\\" name=\\\"id\\\" [(ngModel)]=\\\"form.searchParams.id\\\" aria-label=\\\"ngSelected\\\">\\n                      <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{' Select Role' | translate }}</option>\\n                      <option *ngFor=\\\"let obj of form.preload.roleList\\\" [value]=\\\"obj.key\\\">{{obj.value}}</option>\\n                    </select>\\n                  </div>\\n          \\n                  \\n                 \\n                  <div class=\\\"col-sm-1 ml-3\\\">\\n                    <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary\\\">\\n                      {{'Search' | translate }}</button>\\n                  </div>\\n                  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\n                  <div class=\\\"col-lg-2 ml-4\\\">\\n                    <button (click)=\\\"forward('/role')\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">{{'Add Role' | translate}}\\n                    </button>\\n                  </div>\\n          \\n                  <div class=\\\"col-sm-1\\\">\\n                    <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger\\\">\\n                      {{'Delete'| translate}}</button>\\n                  </div>\\n                </div>\\n            <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n                {{form.message}}\\n              </div>\\n              <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n                {{form.message}}\\n              </div>\\n\\n          \\n\\n            <div class=\\\"p-1\\\">\\n                <div class=\\\"table-responsive\\\">\\n                    <table class=\\\"table table-bordered table-striped table-hover font-weight-bold text-primary\\\">\\n                        <thead class=\\\"thead-light text-uppercase\\\">\\n                            <tr>\\n                                <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" name=\\\"list_name\\\" value=\\\"h1\\\" (change)=\\\"checkUncheckAll($event)\\\"/></th>\\n                                <th>{{'S.No' | translate }}</th>\\n                                <th>{{'Name' | translate }}</th>\\n                                <th>{{'Description' | translate }}</th>\\n                                <th>{{'Edit' | translate}}</th>\\n                            </tr>\\n                        </thead>\\n                        <tbody>\\n                            <tr *ngFor=\\\"let m of form.list; let i = index\\\">\\n                                <td> <input type=\\\"checkbox\\\"  #checkboxes (change)=\\\"checklistUpdate()\\\"  name=\\\"list_name\\\"  id=\\\"{{m.id}}\\\" value=\\\"{{isMasterSel}}\\\"/>\\n                                </td>\\n                                <td> {{(form.pageNo*5)+i+ 1}} </td>\\n                                <td> {{ m.name }} </td>\\n                                <td> {{ m.description }} </td>\\n                                <td>\\n                                    <a (click)=\\\"forward( '/role/' +  m.id)\\\" style=\\\"cursor: pointer;\\\">\\n                                        <i class=\\\"fa fa-edit text-info\\\"></i>\\n                                    </a>\\n                                    <!-- /\\n                                    <a (click)=\\\"delete(m.id)\\\" style=\\\"cursor: pointer;\\\">\\n                                        <i class=\\\"fa fa-trash text-danger\\\"></i>\\n                                    </a> -->\\n                                </td>\\n                                \\n                            </tr>\\n                        </tbody>\\n                    </table>\\n                </div><table style=\\\"width: 100%;\\\">\\n                    <tr>\\n                      <td style=\\\"width: 50%;\\\">\\n                  <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\"> {{'Previous' | translate\\n                    }} </button></td>\\n                    <td *ngIf=\\\"form.list.length!=0\\\" style=\\\"width: 50%;\\\"></td>\\n                    <td *ngIf=\\\"form.list.length==0\\\" style=\\\"width: 50%;\\\">\\n                      <a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/rolelist']\\\" (click)=\\\"exit()\\\">{{'Back' | translate}}</a></td>\\n        \\n          \\n          \\n                \\n                    <td><button (click)=\\\"next()\\\" [disabled]=\\\"nextList==0\\\" type=\\\"button\\\" class=\\\"btn btn-info\\\"> {{'Next' |\\n                      translate }}</button></td>\\n                    </tr>\\n                    </table>\\n              \\n                    \\n               \\n            </div>\\n\\n        </div>\\n\\n    </div>\\n</div>\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\nimport { BaseListCtl } from '../base-list.component';\nimport { ServiceLocatorService } from '../service-locator.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n    selector: 'app-role-list',\n    templateUrl: './role-list.component.html',\n    styleUrls: ['./role.component.css']\n  })\n\n\n  export class RoleListComponent extends BaseListCtl {\n    constructor(public locator: ServiceLocatorService, public route: ActivatedRoute) {\n      super(locator.endpoints.ROLE, locator, route);\n    }\n  \n  }","module.exports = \".alertRedColor {\\n    color: red;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcm9sZS9yb2xlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxVQUFVO0FBQ2QiLCJmaWxlIjoic3JjL2FwcC9yb2xlL3JvbGUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5hbGVydFJlZENvbG9yIHtcbiAgICBjb2xvcjogcmVkO1xufSJdfQ== */\"","module.exports = \"<app-navbar></app-navbar>\\n<style>\\n  .grad {\\n    background-image: linear-gradient(to bottom right, rgb(32, 168, 168),\\n        rgb(219, 231, 237));\\n    background-repeat: no repeat;\\n    background-size: 100%;\\n    padding-bottom: 25px;\\n  }\\n</style>\\n<div class=\\\"row \\\" style=\\\"padding-top: 7%; padding-bottom:15%;\\nbackground: url(assets/files/wall.jpg) no-repeat center center;\\nbackground-attachment: fixed;\\nbackground-size: cover;width:auto;\\n  height: auto;\\\">\\n\\n  <div class=\\\"col-sm-4\\\"></div>\\n  <div class=\\\"col-sm-4\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-body shadow-lg grad\\\">\\n        <form>\\n          <h2 *ngIf=\\\"!form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\" style=\\\"text-align: center;\\\">{{'Add Role' |\\n            translate }}</h2>\\n          <h2 *ngIf=\\\"form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\" style=\\\"text-align: center;\\\">{{'Update Role' |\\n            translate }}</h2>\\n\\n\\n          <!-- <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{form.message}}\\n          </div> -->\\n          <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{form.message}}\\n          </div>\\n          <div *ngIf=\\\"form.error && form.message != null\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{form.message}}\\n          </div>\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'Name' | translate }}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"name\\\" [(ngModel)]=\\\"form.data.name\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter Role Name' | translate }}\\\">\\n              </div>\\n            </div>\\n          </div>\\n          <span class=\\\"alertRedColor\\\">{{form.inputerror.name}}</span>\\n\\n          <div style=\\\"padding-top:3%\\\">\\n            <span><b>{{'Description' | translate }}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-bars grey-text \\\"></i> </div>\\n                </div>\\n                <textarea name=\\\"description\\\" [(ngModel)]=\\\"form.data.description\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter Description' | translate }}\\\"></textarea>\\n              </div>\\n            </div>\\n            <span class=\\\"alertRedColor\\\">{{form.inputerror.description}}</span>\\n          </div>\\n          <div class=\\\"row pt-3 pl-3 pb-3\\\">\\n            <div class=\\\"pt-2\\\">\\n              <button *ngIf=\\\"!form.data.id>0\\\" (click)=\\\"submit()\\\" class=\\\"btn btn-success mr-2\\\">\\n                {{'Save' | translate }}</button>\\n            </div>\\n            <div class=\\\"pt-2\\\">\\n              <button *ngIf=\\\"form.data.id>0\\\" (click)=\\\"submit()\\\" class=\\\"btn btn-success mr-2\\\">\\n                {{'Update' | translate }}</button>\\n            </div>\\n\\n            <div class=\\\"pl-3 pt-2\\\">\\n              <button (click)=\\\"forward('/rolelist')\\\" class=\\\"btn btn-md btn-warning\\\">\\n                {{'List' | translate }}</button>\\n            </div>\\n          </div>\\n        </form>\\n      </div>\\n\\n    </div>\\n\\n  </div>\\n</div>\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\nimport { ServiceLocatorService } from '../service-locator.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { BaseCtl } from '../base.component';\n\n@Component({\n  selector: 'app-role',\n  templateUrl: './role.component.html',\n  styleUrls: ['./role.component.css']\n})\n\nexport class RoleComponent extends BaseCtl {\n\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute) {\n    super(locator.endpoints.ROLE, locator, route);\n  }\n  validate() {\n    return this.validateForm(this.form.data);\n  }\n  validateForm(form) {\n    let flag = true;\n    let validator = this.serviceLocator.dataValidator;\n    flag = flag && validator.isNotNullObject(form.name);\n    flag = flag && validator.isNotNullObject(form.description);\n    return flag;\n  }\n\n  populateForm(form, data) {\n    form.id = data.id;\n    form.name = data.name;\n    form.description = data.description;\n    form.status = data.status;\n  }\n\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JvdXRlL3JvdXRlLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<app-navbar></app-navbar>\\n\\n<style>\\n  .grad {\\n    background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\n    background-repeat: no-repeat;\\n    background-size: 100%;\\n    padding-bottom: 25px;\\n  }\\n\\n  .input-group-addon {\\n    box-shadow: 9px 8px 7px #001a33;\\n  }\\n\\n  .required-field {\\n    color: red;\\n    font-weight: bold;\\n  }\\n\\n  .alertRedColor {\\n    color: red;\\n  }\\n\\n  .card-body {\\n    padding: 2rem;\\n  }\\n\\n  .input-group-text i {\\n    width: 1.5rem;\\n  }\\n\\n  .btn-primary,\\n  .btn-success,\\n  .btn-warning {\\n    width: 100%;\\n  }\\n\\n  .form-control {\\n    height: calc(2.25rem + 2px);\\n  }\\n\\n  .form-group {\\n    margin-bottom: 1.5rem;\\n  }\\n\\n  .input-group-prepend .input-group-text {\\n    background-color: #e9ecef;\\n    border: 1px solid #ced4da;\\n  }\\n\\n  .input-group-prepend .input-group-text i {\\n    color: #495057;\\n  }\\n\\n  .row {\\n    margin-left: 0;\\n    margin-right: 0;\\n  }\\n\\n  .textarea-height {\\n    height: 100px;\\n  }\\n\\n  .card {\\n    margin: auto;\\n    max-width: 500px;\\n  }\\n</style>\\n\\n<div class=\\\"container-fluid\\\" style=\\\"padding: 2% 0; background: url('assets/files/wall.jpg') no-repeat center center; background-attachment: fixed; background-size: cover; width: 100%; height: auto;\\\">\\n  <div class=\\\"row justify-content-center\\\">\\n    <div class=\\\"col-md-6\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-body input-group-addon grad\\\">\\n          <form name=\\\"userForm\\\">\\n            <h2 *ngIf=\\\"!form.data.id\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{ 'Add Route' | translate }}</h2>\\n            <h2 *ngIf=\\\"form.data.id\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{ 'Update Route' | translate }}</h2>\\n\\n            <div *ngIf=\\\"!form.error && form.message == 'Data is saved'\\\" class=\\\"alert alert-success alert-dismissible\\\">\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n              {{ form.message }}\\n            </div>\\n\\n            <div *ngIf=\\\"form.error && form.message\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n              {{ form.message }}\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label><b>{{ 'VehicleId' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-flag grey-text\\\"></i></div>\\n                </div>\\n                <select class=\\\"form-control\\\" name=\\\"vehicleIdId\\\" [(ngModel)]=\\\"form.data.vehicleIdId\\\"\\n                  aria-label=\\\"ngSelected\\\">\\n                  <option [ngValue]=\\\"undefined\\\">{{ 'Select vehicleId' | translate }}</option>\\n                  <option *ngFor=\\\"let obj of form.preload.vehicleIdList\\\" [value]=\\\"obj.key\\\">{{ obj.key }}</option>\\n                </select>\\n              </div>\\n              <span *ngIf=\\\"form.inputerror.vehicleIdId\\\" class=\\\"alertRedColor\\\">{{form.inputerror.vehicleIdId}}</span>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label><b>{{ 'Name' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fas fa-user\\\"></i></div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"name\\\" [(ngModel)]=\\\"form.data.name\\\" class=\\\"form-control\\\" placeholder=\\\"{{ 'Enter name' | translate }}\\\" (keypress)=\\\"validateAlphabetInput($event)\\\">\\n              </div>\\n              <span *ngIf=\\\"form.inputerror.name\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.name }}</span>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label><b>{{ 'Allowed Speed' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fas fa-money-bill-wave\\\"></i></div>\\n                </div>\\n                <input type=\\\"number\\\" name=\\\"allowedSpeed\\\" [(ngModel)]=\\\"form.data.allowedSpeed\\\" class=\\\"form-control\\\" placeholder=\\\"{{ 'Enter allowedSpeed' | translate }}\\\">\\n              </div>\\n              <span *ngIf=\\\"form.inputerror.allowedSpeed\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.allowedSpeed }}</span>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label><b>{{ 'Start Date' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"far fa-calendar-alt\\\"></i></div>\\n                </div>\\n                <input type=\\\"date\\\" name=\\\"startDate\\\" [value]=\\\"form.data.startDate | date:'yyyy-MM-dd'\\\" (input)=\\\"form.data.startDate=parseDate($event.target.value)\\\" class=\\\"form-control\\\" required />\\n              </div>\\n              <span *ngIf=\\\"form.inputerror.startDate\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.startDate }}</span>\\n            </div>\\n\\n            <div class=\\\"row pt-2 pb-3 justify-content-center\\\">\\n              <div class=\\\"col-md-4\\\">\\n                <button *ngIf=\\\"!form.data.id\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{ 'Save' | translate }}</button>\\n              </div>\\n              <div class=\\\"col-md-4\\\">\\n                <button *ngIf=\\\"form.data.id\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{ 'Update' | translate }}</button>\\n              </div>\\n              <div class=\\\"col-md-4\\\">\\n                <a class=\\\"btn btn-warning\\\" type=\\\"button\\\" [routerLink]=\\\"['/routelist']\\\">{{ 'List' | translate }}</a>\\n              </div>\\n            </div>\\n          </form>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<app-footer></app-footer>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { BaseCtl } from '../base.component';\nimport { ServiceLocatorService } from '../service-locator.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-route',\n  templateUrl: './route.component.html',\n  styleUrls: ['./route.component.css']\n})\nexport class RouteComponent extends BaseCtl {\n\n  getKey = false;\n  selected = null;\n  userForm: FormGroup = null;\n  uploadForm: FormGroup;\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\n    super(locator.endpoints.ROUTE, locator, route);\n  }\n\n  submit() {\n    var _self = this;\n    console.log('in submit');\n    console.log(this.form);\n    console.log(this.form.data);\n  \n    this.serviceLocator.httpService.post(this.api.save, this.form.data, function (res) {\n      _self.form.message = '';\n      _self.form.inputerror = {}; // Clear input errors here\n  \n      if (res.success) {\n        _self.form.error = false; // Set error to false on success\n        _self.form.message = \"Data is saved\";\n        _self.form.data.id = res.result.data;\n        console.log(_self.form.data.id);\n        console.log(\"----------Chetan----------.\");\n  \n        // Clear form data if needed\n        // _self.form.data = {};\n  \n      } else {\n        _self.form.error = true;\n        if (res.result.inputerror) {\n          _self.form.inputerror = res.result.inputerror;\n        }\n        _self.form.message = res.result.message;\n      }\n      console.log('FORM', _self.form);\n    });\n  }\n  \n  \n\n  submit1() {\n    var _self = this;\n    console.log(this.form + \"submit running start\");\n    console.log(this.form.data + \"form data going to be submit\");\n    this.serviceLocator.httpService.post(this.api.search, this.form.data, function (res) {\n      _self.form.message = '';\n      _self.form.inputerror = {};\n      _self.form.data.id = res.result.data;\n\n\n      if (res.success) {\n        _self.form.message = \"Data is saved\";\n        _self.form.data.id = res.result.data;\n\n\n        console.log(_self.form.data.id);\n        console.log(\"--------------------.\");\n\n      } else {\n        _self.form.error = true;\n        _self.form.inputerror = res.result.inputerror;\n        _self.form.message = res.result.message;\n      }\n      _self.form.data.id = res.result.data;\n      console.log('FORM', _self.form);\n    });\n  }\n\n\n\n\n  onUpload(userform: FormData) {\n    this.submit();\n    console.log(this.form.data.id + '---- after submit');\n\n  }\n\n  validatePaymentTerm() {\n    const paymentTerm = this.form.data.paymentTerm;\n    const paymentTermPattern = /^[a-zA-Z ]*$/; // Only allows alphabetic characters and spaces\n    if (!paymentTermPattern.test(paymentTerm)) {\n      this.form.inputerror.paymentTerm = 'Invalid payment term';\n    } else {\n      delete this.form.inputerror.paymentTerm;\n    }\n  }\n\n\n  validateForm(form) {\n    let flag = true;\n    let validator = this.serviceLocator.dataValidator;\n    flag = flag && validator.isNotNullObject(form.vehicleIdId);\n    console.log(form.vehicleIdId);\n    flag = flag && validator.isNotNullObject(form.name);\n    console.log(form.name);\n    flag = flag && validator.isNotNullObject(form.allowedSpeed);\n    console.log(form.allowedSpeed);\n    flag = flag && validator.isNotNullObject(form.startDate);\n    console.log(form.startDate);\n\n    return flag;\n  }\n\n  populateForm(form, data) {\n    form.id = data.id;\n    console.log(form.id + 'populate form in shoppingcomponent');\n    form.name = data.name;\n    form.allowedSpeed = data.allowedSpeed;\n    form.startDate = data.startDate;\n    form.vehicleIdId = data.vehicleIdId;\n\n\n  }\n\n  validatePhone(event: KeyboardEvent) {\n    const input = event.key;\n    // Check if the input is a number or backspace\n    if ((isNaN(Number(input)) && input !== 'Backspace') || (input === ' ')) {\n      event.preventDefault();\n    }\n    // Limit the input to 10 characters\n    if (this.form.data.phone && this.form.data.phone.length >= 10 && input !== 'Backspace') {\n      event.preventDefault();\n    }\n  }\n\n  validateAlphabetInput(event) {\n    const charCode = event.which || event.keyCode;\n    const charStr = String.fromCharCode(charCode);\n\n    // Regular expression to test if the character is a letter\n    const letterRegex = /^[a-zA-Z\\s]+$/;\n\n    // Test if the input matches the allowed characters\n    if (!letterRegex.test(charStr)) {\n      event.preventDefault();\n    }\n\n    // Optionally, check the entire value against the name format regex\n    const inputElement = event.target;\n    const inputValue = inputElement.value + charStr; // Add the current character to the input value\n\n    // Regex for valid name format \"FirstName LastName\"\n    const nameRegex = /^[A-Z][a-z]+ [A-Z][a-z]+$/;\n\n    // Check if the current value matches the valid name format\n    if (!nameRegex.test(inputValue)) {\n      // Handle invalid input (e.g., disable submit button, show error message)\n      // Example:\n      inputElement.classList.add('invalid'); // Apply CSS class for invalid input\n    } else {\n      inputElement.classList.remove('invalid'); // Remove invalid CSS class if format is valid\n    }\n  }\n\n\n\n\n  parseDate(dateString: string): Date {\n    if (dateString) {\n      return new Date(dateString);\n    }\n    return null;\n  }\n  test() {\n\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JvdXRlL3JvdXRlbGlzdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-navbar></app-navbar>\\n\\n<style>\\n  #nnn {\\n    background: none;\\n    border: none;\\n    cursor: pointer;\\n  }\\n\\n  .panel-heading {\\n    height: 50px;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n  }\\n\\n  .search-inputs {\\n    margin-top: 20px;\\n  }\\n\\n  .search-inputs .form-control,\\n  .search-inputs .btn {\\n    margin-bottom: 10px;\\n  }\\n\\n  .content-wrapper {\\n    background: url(assets/files/wall.jpg) no-repeat center center;\\n    background-attachment: fixed;\\n    background-size: cover;\\n    width: auto;\\n    height: 105vh;\\n    padding: 20px;\\n  }\\n\\n  .table-responsive {\\n    margin-top: 20px;\\n  }\\n</style>\\n\\n<div class=\\\"content-wrapper\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"panel panel-primary\\\">\\n      <div class=\\\"panel-heading\\\">\\n        <h1 class=\\\"text-primary font-weight-bold\\\">{{ 'Route List' | translate }}</h1>\\n      </div>\\n\\n      <div class=\\\"row search-inputs justify-content-center\\\">\\n        <div class=\\\"col-md-3\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.name\\\"\\n            placeholder=\\\"{{ 'Search Name' | translate }}\\\" (input)=\\\"validateInput($event, 'name')\\\">\\n          <div *ngIf=\\\"!isValidNameInput\\\" class=\\\"text-danger\\\">{{ nameErrorMessage }}</div>\\n        </div>\\n        <!--  <div class=\\\"col-md-3\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.mobile\\\"\\n            placeholder=\\\"{{ 'Search mobile' | translate }}\\\" (input)=\\\"validateInput($event, 'mobile')\\\">\\n          <div *ngIf=\\\"!isValidMobileInput\\\" class=\\\"text-danger\\\">{{ mobileErrorMessage }}</div>\\n        </div> -->\\n\\n        <div class=\\\"col-md-3\\\">\\n          <input type=\\\"date\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.startDate\\\"\\n            (ngModelChange)=\\\"formatDate($event)\\\" placeholder=\\\"{{ 'Search startDate' | translate }}\\\">\\n        </div>\\n\\n        <div class=\\\"col-md-3\\\">\\n          <input type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.allowedSpeed\\\"\\n            placeholder=\\\"{{ 'Search allowedSpeed' | translate }}\\\" (input)=\\\"validateInput($event, 'allowedSpeed')\\\">\\n          <div *ngIf=\\\"!isValidAllowedSpeed\\\" class=\\\"text-danger\\\">{{ allowedSpeedErrorMessage }}</div>\\n        </div>\\n\\n\\n        <div class=\\\"col-md-3\\\">\\n          <select class=\\\"form-control\\\" name=\\\"vehicleIdId\\\" [(ngModel)]=\\\"form.searchParams.vehicleIdId\\\">\\n            <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{ 'Select vehicleId' | translate }}</option>\\n            <option *ngFor=\\\"let obj of form.preload.vehicleIdList\\\" [value]=\\\"obj.key\\\">{{ obj.key }}</option>\\n          </select>\\n        </div>\\n      </div>\\n      \\n\\n      <div class=\\\"row mt-2 justify-content-center\\\">\\n        <div class=\\\"col-md-2\\\">\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary btn-block\\\">{{ 'Search' | translate }}</button>\\n        </div>\\n        <div class=\\\"col-md-2\\\">\\n          <button (click)=\\\"forward('/route')\\\" type=\\\"button\\\" class=\\\"btn btn-success btn-block\\\">{{ 'Add Route' |\\n            translate }}</button>\\n        </div>\\n        <div class=\\\"col-md-2\\\">\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger btn-block\\\">{{ 'Delete' | translate }}</button>\\n        </div>\\n      </div>\\n\\n      <div *ngIf=\\\"form.error || form.message\\\" class=\\\"row mt-2 justify-content-center\\\">\\n        <div class=\\\"col-md-6\\\">\\n          <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{ form.message }}\\n          </div>\\n          <div *ngIf=\\\"!form.error && form.message\\\" class=\\\"alert alert-success alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{ form.message }}\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"table-responsive mt-3\\\">\\n        <table class=\\\"table table-bordered table-hover font-weight-bold text-dark\\\">\\n          <thead class=\\\"thead-dark text-uppercase\\\">\\n            <tr align=\\\"center\\\">\\n              <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" name=\\\"list_name\\\"\\n                  (change)=\\\"checkUncheckAll($event)\\\" /></th>\\n              <th>{{ 'S.No' }}</th>\\n              <th>{{ 'name' }}</th>\\n              <th>{{ 'allowed Speed' }}</th>\\n              <th>{{ 'Start date' }}</th>\\n              <th>{{ 'vehicleId' }}</th>\\n              <th>{{ 'Edit' }}</th>\\n            </tr>\\n          </thead>\\n          <tbody>\\n            <tr *ngFor=\\\"let m of form.list; let i = index\\\" align=\\\"center\\\">\\n              <td><input type=\\\"checkbox\\\" #checkboxes (change)=\\\"checklistUpdate()\\\" name=\\\"list_name\\\" [id]=\\\"m.id\\\" /></td>\\n              <td>{{ (form.pageNo * 5) + i + 1 }}</td>\\n              <td>{{ m.name }}</td>\\n              <td>{{ m.allowedSpeed }}</td>\\n              <td>{{ convertToLocalDate(m.startDate) }}</td>\\n              <td>{{ m.vehicleIdId }}</td>\\n              <td>\\n                <button class=\\\"fa fa-edit text-primary\\\" id=\\\"nnn\\\" (click)=\\\"forward('/route/' + m.id)\\\"></button>\\n              </td>\\n            </tr>\\n          </tbody>\\n        </table>\\n      </div>\\n\\n      <div class=\\\"d-flex justify-content-between mt-3\\\">\\n        <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\">{{ 'Previous' | translate\\n          }}</button>\\n        <div *ngIf=\\\"form.list.length == 0\\\">\\n          <a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/routelist']\\\" (click)=\\\"exit()\\\">{{ 'Back' |\\n            translate }}</a>\\n        </div>\\n        <button (click)=\\\"next()\\\" [disabled]=\\\"nextList == 0\\\" class=\\\"btn btn-info\\\">{{ 'Next' | translate }}</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\nimport { BaseListCtl } from '../base-list.component';\nimport { ServiceLocatorService } from '../service-locator.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-routelist',\n  templateUrl: './routelist.component.html',\n  styleUrls: ['./routelist.component.css']\n})\nexport class RoutelistComponent extends BaseListCtl implements OnInit {\n\n  public form = {\n    error: false,\n    message: null,\n    preload: [],\n    data: { id: null },\n    inputerror: {},\n    searchParams: {\n      name: '',\n      allowedSpeed: '',\n      date: '', // Initialize date field\n      vehicleIdId: '',\n      startDate: ''\n    },\n    searchMessage: null,\n    list: [],\n    pageNo: 0\n  };\n\n  isValidMobileInput: boolean = true;\n  isValidNameInput: boolean = true;\n  isValidAllowedSpeed: boolean = true;\n  nameErrorMessage: string = '';\n  mobileErrorMessage: string = '';\n  allowedSpeedErrorMessage: string = '';\n\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\n    super(locator.endpoints.ROUTE, locator, route);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n  }\n\n  // Format date function\n  formatDate(event: any) {\n    const selectedDate = new Date(event);\n    const formattedDate = selectedDate.toISOString().split('T')[0];\n    this.form.searchParams.date = formattedDate;\n  }\n\n  // Convert date to local format for display\n  convertToLocalDate(dateString: string): string {\n    const date = new Date(dateString);\n    const options = { year: 'numeric', month: '2-digit', day: '2-digit' };\n    return date.toLocaleDateString(undefined, options);\n  }\n\n  // Validate input for name, mobile, and allowedSpeed fields\n  validateInput(event: any, field: string) {\n    const value = event.target.value;\n    if (field === 'mobile') {\n      this.isValidMobileInput = /^[0-9]*$/.test(value); // Check if the input contains only numbers\n      if (!this.isValidMobileInput) {\n        this.mobileErrorMessage = 'Please type numbers only';\n      } else {\n        this.mobileErrorMessage = '';\n      }\n    } else if (field === 'name') {\n      this.isValidNameInput = /^[A-Za-z\\s]*$/.test(value); // Check if the input contains only letters and spaces\n      if (!this.isValidNameInput) {\n        this.nameErrorMessage = 'Please type alphabets only';\n      } else {\n        this.nameErrorMessage = '';\n      }\n    } else if (field === 'allowedSpeed') {\n      if (value === '') {\n        this.isValidAllowedSpeed = true; // Treat empty input as valid\n        this.allowedSpeedErrorMessage = '';\n      } else {\n        const speed = parseInt(value, 10);\n        this.isValidAllowedSpeed = speed >= 70 && speed <= 150; // Check if the input is between 70 and 150\n        if (!this.isValidAllowedSpeed) {\n          this.allowedSpeedErrorMessage = 'Please type a valid allowed speed (70-150)';\n        } else {\n          this.allowedSpeedErrorMessage = '';\n        }\n      }\n    }\n  }\n\n  // Submit method\n  submit() {\n    // Reset page number before searching\n    this.form.pageNo = 0;\n    // Call the search method after formatting the date\n    this.search();\n  }\n\n  // Search method\n  search() {\n    // Clear previous search message\n    this.form.searchMessage = null;\n    // Perform the search operation with the search parameters\n    super.search();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpServiceService } from './http-service.service';\nimport { DataValidator } from './utility/data-validator';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { EndpointServiceService } from './endpoint-service.service';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ServiceLocatorService {\n\n  \n  httpService = null;\n  dataValidator = null;\n  router = null;\n  endpoints = null;\n\n  constructor(private hs: HttpServiceService, private dv: DataValidator, private r: Router, private ep: EndpointServiceService) {\n    this.httpService = hs;\n    this.dataValidator = dv;\n    this.router = r;\n    this.endpoints = ep;\n  }\n \n  /**\n   * get path variable from url\n   * \n   * @param route \n   * @param callback \n   */\n  getPathVariable(route: ActivatedRoute, callback) {\n    route.params.subscribe(params => {\n      callback(params)\n    });\n  }\n\n  /**\n   * Forward to page \n   * \n   * @param page \n   */\n  forward(page){\n    this.router.navigateByUrl(page);\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NwaW5uZXIvc3Bpbm5lci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<p>\\n  spinner works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-spinner',\n  templateUrl: './spinner.component.html',\n  styleUrls: ['./spinner.component.css']\n})\nexport class SpinnerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<app-navbar></app-navbar>\\n<div class=\\\"content-wrapper\\\" style=\\\"padding-top: 3%; padding-bottom: 15%; \\nbackground: url(assets/files/gettyimages-1132439283-640x640.jpg) no-repeat center center;\\nbackground-attachment: fixed;\\nbackground-size: cover;width:auto;\\n  height: 90vh;\\\">\\n  <div class=\\\"container-fluid\\\">\\n\\n    <div class=\\\"panel panel-primary\\\">\\n      <div class=\\\"panel-heading\\\" style=\\\"height: 70px;\\\">\\n\\n        <div class=\\\"text-center\\\">\\n          <h2 class=\\\"text-primary font-weight-bold\\\">{{'Student List' | translate }}</h2>\\n\\n        </div>\\n      </div>\\n\\n      <div class=\\\"row p-1\\\">\\n        <div class=\\\"col-sm-2\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.enrolNo\\\"\\n            placeholder=\\\"{{'Search Enrollment' | translate }}\\\">\\n        </div>\\n        <div class=\\\"col-sm-2\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.collegeName\\\"\\n            placeholder=\\\"{{'Search College' | translate }}\\\">\\n        </div>\\n\\n        <div class=\\\"col-sm-2\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.email\\\"\\n            placeholder=\\\"{{'Search Email' | translate }}\\\">\\n        </div>\\n        <div class=\\\"col-sm-2\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.phoneNo\\\"\\n            placeholder=\\\"{{'Search Mobile Number' | translate }}\\\">\\n        </div>\\n        <div class=\\\"col-sm-1\\\">\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary\\\">\\n            {{'Search' | translate }}</button>\\n        </div>\\n\\n\\n\\n        <div class=\\\"col-lg-2\\\">\\n          <button (click)=\\\"forward('/student')\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">{{'Add Student' | translate }}\\n          </button>\\n        </div>\\n\\n\\n        <div class=\\\"col-sm-1\\\">\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger\\\">\\n            {{'Delete'| translate}}</button>\\n        </div>\\n      </div>\\n\\n      <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n        {{form.message}}\\n      </div>\\n      <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n        {{form.message}}\\n      </div>\\n      <div class=\\\"p-1\\\">\\n        <div class=\\\"table-responsive\\\">\\n          <table class=\\\"table table-bordered table-striped table-hover\\\">\\n            <thead class=\\\"thead-light text-uppercase\\\">\\n              <tr align=\\\"center\\\">\\n                <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" name=\\\"list_name\\\" value=\\\"h1\\\"\\n                    (change)=\\\"checkUncheckAll($event)\\\" /></th>\\n                <th>{{'S.No' | translate }}</th>\\n                <th>{{'Enrollment No' | translate }}</th>\\n                <th>{{'First Name' | translate }}</th>\\n                <th>{{'Last Name' | translate }}</th>\\n                <th>{{'College' | translate }}</th>\\n                <th>{{'DOB' | translate }}</th>\\n                <th>{{'Mobile' | translate }}</th>\\n                <th>{{'Email' | translate }}</th>\\n                <th>{{'Edit' | translate}}</th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr *ngFor=\\\"let m of form.list; let i = index\\\" align=\\\"center\\\">\\n                <td> <input type=\\\"checkbox\\\" #checkboxes (change)=\\\"checklistUpdate()\\\" name=\\\"list_name\\\" id=\\\"{{m.id}}\\\" value=\\\"{{isMasterSel}}\\\" />\\n                </td>\\n                <td> {{(form.pageNo*5)+i+ 1}} </td>\\n                <td>{{m.enrolNo}}</td>\\n                <td> {{ m.firstName }} </td>\\n                <td> {{ m.lastName }} </td>\\n                <td> {{ m.collegeName }} </td>\\n                <td>{{m.dob | date : 'dd-MM-yyyy'}}</td>\\n                <td> {{ m.phoneNo }} </td>\\n                <td> {{ m.email }} </td>\\n                <td>\\n                  <a (click)=\\\"forward( '/student/' +  m.id)\\\" style=\\\"cursor: pointer;\\\">\\n                    <i class=\\\"fa fa-edit text-info\\\"></i>\\n                  </a>\\n                  <!-- /\\n                  <a (click)=\\\"delete(m.id)\\\" style=\\\"cursor: pointer;\\\">\\n                    <i class=\\\"fa fa-trash text-danger\\\"></i>\\n                  </a> -->\\n                </td>\\n              </tr>\\n            </tbody>\\n          </table>\\n          <table style=\\\"width: 100%;\\\">\\n              <tr> <td style=\\\"width: 50%;\\\"><button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\">{{'Previous' |\\n                    translate }} </button>\\n                </td>  \\n                <td *ngIf=\\\"form.list.length!=0\\\" style=\\\"width: 50%;\\\"></td>\\n                <td *ngIf=\\\"form.list.length==0\\\" style=\\\"width: 50%;\\\"><a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/studentlist']\\\" (click)=\\\"exit()\\\">{{'Back' | translate}}</a></td>\\n                <td>\\n                  <button (click)=\\\"next()\\\" [disabled]=\\\"nextList==0\\\" type=\\\"button\\\" class=\\\"btn btn-info\\\">{{'Next' | translate }} </button>\\n                 </td>\\n                </tr>\\n              </table>\\n          \\n        </div>\\n      </div>\\n\\n    </div>\\n  </div>\\n</div>\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\nimport { ServiceLocatorService } from '../service-locator.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { BaseListCtl } from '../base-list.component';\n\n@Component({\n  selector: 'app-student-list',\n  templateUrl: './student-list.component.html',\n  styleUrls: ['./student.component.css']\n})\n\nexport class StudentListComponent extends BaseListCtl {\n\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute) {\n    super(locator.endpoints.STUDENT, locator, route);\n  }\n\n\n\n}","module.exports = \".alertRedColor {\\n    color: red;\\n}\\n\\n\\n.required-field::after { \\t\\t\\n  content: \\\"*\\\";\\t\\t\\n  color: red;\\t\\t\\n   }\\n\\n\\n.successColor{\\n    color: green;\\n   }\\n\\n\\n.btn-space {\\n    margin-right: 5px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc3R1ZGVudC9zdHVkZW50LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxVQUFVO0FBQ2Q7OztBQUdBO0VBQ0UsWUFBWTtFQUNaLFVBQVU7R0FDVDs7O0FBRUE7SUFDQyxZQUFZO0dBQ2I7OztBQUVBO0lBQ0MsaUJBQWlCO0FBQ3JCIiwiZmlsZSI6InNyYy9hcHAvc3R1ZGVudC9zdHVkZW50LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYWxlcnRSZWRDb2xvciB7XG4gICAgY29sb3I6IHJlZDtcbn1cblxuXG4ucmVxdWlyZWQtZmllbGQ6OmFmdGVyIHsgXHRcdFxuICBjb250ZW50OiBcIipcIjtcdFx0XG4gIGNvbG9yOiByZWQ7XHRcdFxuICAgfVx0XG5cbiAgIC5zdWNjZXNzQ29sb3J7XG4gICAgY29sb3I6IGdyZWVuO1xuICAgfVxuXG4gICAuYnRuLXNwYWNlIHtcbiAgICBtYXJnaW4tcmlnaHQ6IDVweDtcbn0iXX0= */\"","module.exports = \"<app-navbar></app-navbar>\\n<style>\\n  .grad{\\n background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\n background-repeat: no repeat;\\n background-size: 100%;\\n padding-bottom: 25px\\n ;\\n }\\n</style>\\n<div class=\\\"row \\\" style=\\\"padding-top: 3%; \\npadding-bottom:3%;\\nbackground: url(assets/files/wall.jpg) no-repeat center center;\\nbackground-attachment: fixed;\\nbackground-size: cover;width:auto;\\n  height: auto;\\\">\\n\\n  <div class=\\\"col-sm-4\\\"></div>\\n  <div class=\\\"col-sm-4\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-body shadow-lg grad\\\">\\n        <form>\\n          <h2 *ngIf=\\\"!form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\" style=\\\"text-align: center;\\\">{{'Add Student' | translate }}</h2>\\n          <h2 *ngIf=\\\"form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\" style=\\\"text-align: center;\\\">{{'Update Student' | translate }}</h2>\\n\\n          <div *ngIf=\\\"form.error && form.message != null\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{form.message}}\\n          </div>\\n          <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{form.message}}\\n          </div>\\n\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'Enrollment No' | translate }}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-id-card grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"enrolNo\\\" [(ngModel)]=\\\"form.data.enrolNo\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter Enrollment Number' | translate }}\\\">\\n              </div>\\n            </div>\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.enrolNo}} </span>\\n          </div>\\n\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'First Name' | translate }}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"firstN\\\" [(ngModel)]=\\\"form.data.firstName\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter First Name' | translate }}\\\">\\n              </div>\\n            </div>\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.firstName}} </span>\\n          </div>\\n\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'Last Name' | translate }}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user-circle grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"lastN\\\" [(ngModel)]=\\\"form.data.lastName\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter Last Name' | translate }}\\\">\\n              </div>\\n            </div>\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.firstName}} </span>\\n          </div>\\n\\n\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'College' | translate }} </b>\\n              <span class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-university grey-text\\\"></i> </div>\\n                </div>\\n\\n                <select class=\\\"form-control\\\" name=\\\"collegeId\\\" [(ngModel)]=\\\"form.data.collegeId\\\"\\n                  style=\\\"cursor: pointer;\\\">\\n                  <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{' Select College' | translate }}</option>\\n                  <option *ngFor=\\\"let obj of form.preload.collegeList\\\" [value]=\\\"obj.key\\\">{{obj.value}}</option>\\n                </select>\\n              </div>\\n            </div>\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.collegeId}} </span>\\n          </div>\\n\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'Email' | translate }} </b>\\n              <span class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"email\\\" [(ngModel)]=\\\"form.data.email\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter Email Id' | translate }}\\\">\\n              </div>\\n            </div>\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.email}} </span>\\n          </div>\\n          \\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'DOB' | translate }}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-table grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"date\\\" name=\\\"dob\\\" [value]=\\\"form.data.dob| date:'yyyy-MM-dd'\\\"\\n                (input)=\\\"form.data.dob=parseDate($event.target.value)\\\"\\n                class=\\\"form-control form-control-sm\\\" required />\\n              </div>\\n            </div>\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.dob}} </span>\\n          </div>\\n\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"  ><b>{{'Mobile No' | translate }} </b>\\n              <span class=\\\"required-field\\\" ></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-phone grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"text\\\" maxlength=\\\"10\\\" name=\\\"phoneNo\\\" [(ngModel)]=\\\"form.data.phoneNo\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter Mobile Number' | translate }}\\\">\\n              </div>\\n            </div>\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.phoneNo}} </span>\\n          </div>\\n\\n          <div class=\\\"row pt-3 pl-3 pb-3\\\">\\n            <div class=\\\"pt-2\\\">\\n              <button *ngIf=\\\"!form.data.id>0\\\" (click)=\\\"submit()\\\" class=\\\"btn btn-success mr-2\\\">\\n                {{'Save' | translate }}</button>\\n            </div>\\n            <div class=\\\"pt-2\\\">\\n              <button *ngIf=\\\"form.data.id>0\\\" (click)=\\\"submit()\\\" class=\\\"btn btn-success mr-2\\\">\\n                {{'Update' | translate }}</button>\\n            </div>\\n            <div class=\\\"pt-2\\\">\\n              <button (click)=\\\"forward('/studentlist')\\\" type=\\\"button\\\"\\n                class=\\\"btn btn-warning mr-1\\\">{{'List' | translate }}\\n              </button>\\n            </div>\\n          </div>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\nimport { ServiceLocatorService } from '../service-locator.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { BaseCtl } from '../base.component';\n\n@Component({\n  selector: 'app-student',\n  templateUrl: './student.component.html',\n  styleUrls: ['./student.component.css']\n})\nexport class StudentComponent extends BaseCtl {\n  selected = null;\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute) {\n    super(locator.endpoints.STUDENT, locator, route);\n  }\n\n  validateForm(form) {\n    let flag = true;\n    let validator = this.serviceLocator.dataValidator;\n    flag = flag && validator.isNotNullObject(form.firstName);\n    flag = flag && validator.isNotNullObject(form.lastName);\n    flag = flag && validator.isNotNullObject(form.enrolNo);\n    flag = flag && validator.isNotNullObject(form.phoneNo);\n    flag = flag && validator.isNotNullObject(form.email);\n    flag = flag && validator.isNotNullObject(form.dob);\n\n    return flag;\n  }\n\n  populateForm(form, data) {\n    form.id = data.id;\n    form.collegeId = data.collegeId;\n    console.log(form.collegeId + \" inside populateForm method\");\n\n    form.email = data.email;\n    form.enrolNo = data.enrolNo;\n    form.dob = data.dob;\n\n    //let ndate = new Date(data.dob);\n   \n    //console.log(form.dob + 'date ------',ndate)\n    form.firstName = data.firstName;\n    form.lastName = data.lastName;\n    form.phoneNo = data.phoneNo;\n  }\n  parseDate(dateString: string): Date {\n    if (dateString) {\n      return new Date(dateString);\n    }\n    return null;\n  }\n\n}\n","module.exports = \"<app-navbar></app-navbar>\\n<div class=\\\"content-wrapper\\\" style=\\\"padding-top: 3%;padding-bottom: 15%; \\nbackground: url(assets/files/gettyimages-1132439283-640x640.jpg) no-repeat center center;\\nbackground-attachment: fixed;\\nbackground-size: cover;width:auto;\\n  height: 90vh;\\\" >\\n  <div class=\\\"container-fluid\\\">\\n\\n    <div class=\\\"panel panel-primary\\\">\\n      <div class=\\\"panel-heading\\\" style=\\\"height: 50px;\\\">\\n        <div class=\\\"text-center\\\">\\n          <h1 class=\\\"text-primary font-weight-bold\\\">{{'Subject List' | translate }}</h1>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"row p-1\\\">\\n        <div class=\\\"col-sm-1\\\"></div>\\n        <div class=\\\"col-sm-2\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.subjectName\\\"\\n            placeholder=\\\"{{'Search Subject' | translate}}\\\">\\n\\n        </div>\\n        <!-- <div class=\\\"col-sm-2\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.loginId\\\" placeholder=\\\"{{'Search Email' | translate}}\\\">\\n        </div> -->\\n        <div class=\\\"col-sm-2\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.courseName\\\"\\n            placeholder=\\\"{{'Search Course' | translate}}\\\">\\n\\n        </div>\\n\\n        \\n        <div class=\\\"col-sm-2\\\">\\n          <!-- <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.status\\\" placeholder=\\\"{{'Search Status' | translate}}\\\"> -->\\n        </div>\\n        <div class=\\\"col-sm-1 ml-3\\\">\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary\\\">\\n            {{'Search' | translate }}</button>\\n        </div>\\n        <div class=\\\"col-lg-2 ml-4\\\">\\n          <button (click)=\\\"forward('/subject')\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">{{'Add Subject' | translate}}\\n          </button>\\n        </div>\\n\\n        <div class=\\\"col-sm-1\\\">\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger\\\">\\n            {{'Delete'| translate}}</button>\\n        </div>\\n      </div>\\n      \\n      <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n        {{form.message}}\\n      </div>\\n      <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n        {{form.message}}\\n      </div>\\n\\n\\n      <div class=\\\"p-1\\\">\\n        <div class=\\\"table-responsive\\\">\\n          <table class=\\\"table table-bordered table-striped table-hover\\\">\\n            <thead class=\\\"thead-light text-uppercase\\\">\\n              <tr>\\n                <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" name=\\\"list_name\\\" value=\\\"h1\\\" (change)=\\\"checkUncheckAll($event)\\\"/></th>\\n                <th>{{'S.No.' | translate}}</th>\\n                <th>{{'Name' | translate}}</th>\\n                <th>{{'Course' | translate}}</th>\\n               \\n                <th>{{'Description' | translate}}</th>\\n                <th>{{'Edit' | translate }}</th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr *ngFor=\\\"let m of form.list; let i = index\\\">\\n                <td> <input type=\\\"checkbox\\\"  #checkboxes (change)=\\\"checklistUpdate()\\\"  name=\\\"list_name\\\"  id=\\\"{{m.id}}\\\" value=\\\"{{isMasterSel}}\\\"/>\\n                </td>\\n                <td> {{(form.pageNo*5)+i+ 1}} </td>\\n                <td> {{ m.subjectName}} </td>\\n                <td> {{ m.courseName}} </td>\\n               \\n                <td> {{ m.description }} </td>\\n                <td>\\n                  <a (click)=\\\"forward( '/subject/' +  m.id)\\\" style=\\\"cursor: pointer;\\\">\\n                    <i class=\\\"fa fa-edit text-info\\\"></i>\\n                  </a>\\n                  <!-- /\\n                  <a (click)=\\\"delete(m.id)\\\" style=\\\"cursor: pointer;\\\">\\n                    <i class=\\\"fa fa-trash text-danger\\\"></i>\\n                  </a> -->\\n                </td>\\n                \\n              </tr>\\n            </tbody>\\n          </table>\\n          <table style=\\\"width: 100%;\\\">\\n            <tr>\\n              <td style=\\\"width: 50%;\\\">\\n          <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\"> {{'Previous' | translate\\n            }} </button></td>\\n            <td *ngIf=\\\"form.list.length!=0\\\" style=\\\"width: 50%;\\\"></td>\\n            <td *ngIf=\\\"form.list.length==0\\\" style=\\\"width: 50%;\\\"><a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/subjectlist']\\\"  (click)=\\\"exit()\\\">{{'Back' | translate}}</a></td>\\n\\n\\n        \\n            <td><button (click)=\\\"next()\\\" [disabled]=\\\"nextList==0\\\" type=\\\"button\\\" class=\\\"btn btn-info\\\"> {{'Next' |\\n              translate }}</button></td>\\n            </tr>\\n            </table>\\n\\n                \\n            \\n        </div>\\n      </div>\\n\\n    </div>\\n\\n  </div>\\n</div>\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\n\nimport { ServiceLocatorService } from '../service-locator.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { BaseListCtl } from '../base-list.component';\n\n@Component({\n  selector: 'app-subject-list',\n  templateUrl: './subject-list.component.html',\n  styleUrls: ['./subject.component.css']\n})\nexport class SubjectListComponent  extends BaseListCtl {\n\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute) {\n    super( locator.endpoints.SUBJECT, locator, route);\n  }\n\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N1YmplY3Qvc3ViamVjdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-navbar></app-navbar>\\n\\n<style>\\n  .grad{\\n background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\n background-repeat: no repeat;\\n background-size: 100%;\\n padding-bottom: 25px\\n ;\\n }\\n</style>\\n\\n<div class=\\\"row \\\" style=\\\"padding-top: 3%; padding-bottom:13%;\\nbackground: url(assets/files/wall.jpg) no-repeat center center;\\nbackground-attachment: fixed;\\nbackground-size: cover;width:auto;\\n  height: auto;\\\">\\n\\n  <div class=\\\"col-sm-4\\\"></div>\\n  <div class=\\\"col-sm-4\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-body shadow-lg grad\\\">\\n        <form>\\n          <h2 *ngIf=\\\"!form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\">{{'Add Subject' | translate}}</h2>\\n          <h2 *ngIf=\\\"form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\">{{'Update Subject' | translate}}</h2>\\n          <div *ngIf=\\\"form.error && form.message != null\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{form.message}}\\n          </div>\\n          <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{form.message}}\\n          </div>\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'Subject Name' | translate}}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-file grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"subjectName\\\" [(ngModel)]=\\\"form.data.subjectName\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter Subject Name' | translate}}\\\">\\n              </div>\\n            </div>\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.subjectName}} </span>\\n          </div>\\n\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'Description' | translate}}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-bars grey-text\\\"></i> </div>\\n                </div>\\n                <textarea class=\\\"form-control\\\" name=\\\"description\\\" [(ngModel)]=\\\"form.data.description\\\"\\n                  placeholder=\\\"{{'Enter Description' | translate}}\\\"></textarea>\\n              </div>\\n            </div>\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.description}} </span>\\n          </div>\\n\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'Subject Name' | translate}}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-bars grey-text\\\"></i> </div>\\n                </div>\\n                <select class=\\\"form-control\\\" name=\\\"courseId\\\" [(ngModel)]=\\\"form.data.courseId\\\" style=\\\"cursor: pointer;\\\">\\n                  <option *ngFor=\\\"let obj of form.preload.courseList\\\" [value]=\\\"obj.key\\\">{{obj.value}}</option>\\n                </select>\\n              </div>\\n            </div>\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.subjectName}} </span>\\n          </div>\\n\\n          <div class=\\\"row pt-3 pl-3 pb-3\\\">\\n            <div class=\\\"pt-2\\\">\\n              <button *ngIf=\\\"!form.data.id>0\\\" (click)=\\\"submit()\\\" [disabled]=\\\"!validate()\\\" class=\\\"btn btn-success mr-2\\\">\\n                {{'Save' | translate}}</button>\\n            </div>\\n            <div class=\\\"pt-2\\\">\\n              <button *ngIf=\\\"form.data.id>0\\\" (click)=\\\"submit()\\\" class=\\\"btn btn-success mr-2\\\">\\n                {{'Update' | translate}}</button>\\n            </div>\\n            <div class=\\\"pt-2\\\">\\n              <button (click)=\\\"forward('/subjectlist')\\\" type=\\\"button\\\"\\n                class=\\\"btn btn-warning mr-1\\\">{{'List' | translate}}\\n              </button></div>\\n          </div>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpServiceService } from '../http-service.service';\nimport { SearchResponse, RecordResponse } from '../response';\nimport { BaseCtl } from '../base.component';\nimport { ActivatedRoute } from '@angular/router';\nimport { ServiceLocatorService } from '../service-locator.service';\n\n@Component({\n  selector: 'app-subject',\n  templateUrl: './subject.component.html',\n  styleUrls: ['./subject.component.css']\n})\nexport class SubjectComponent extends BaseCtl {\n\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute) {\n    super(locator.endpoints.SUBJECT, locator, route);\n\n  }\n\n  validate() {\n    return this.validateForm(this.form.data);\n  }\n\n  validateForm(form) {\n    let flag = true;\n    let validator = this.serviceLocator.dataValidator;\n    flag = flag && validator.isNotNullObject(form.subjectName);\n    flag = flag && validator.isNotNullObject(form.description);\n    flag = flag && validator.isNotNullObject(form.courseId);\n    return flag;\n  }\n\n  populateForm(form, data) {\n    form.id = data.id;\n    form.subjectName = data.subjectName;\n    form.description = data.description;\n    form.courseId = data.courseId;\n    console.log('Populated Form', form);\n  }\n\n}","module.exports = \"\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N1cHBsaWVyL3N1cHBsaWVyLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<app-navbar></app-navbar>\\n\\n<style>\\n  .grad {\\n    background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\n    background-repeat: no-repeat;\\n    background-size: 100%;\\n    padding-bottom: 25px;\\n  }\\n\\n  \\n  .input-group-addon {\\n    box-shadow: 9px 8px 7px #001a33;\\n  }\\n\\n  .required-field {\\n    color: red;\\n    font-weight: bold;\\n  }\\n\\n  .alertRedColor {\\n    color: red;\\n  }\\n\\n  .card-body {\\n    padding: 2rem;\\n  }\\n\\n  .input-group-text i {\\n    width: 1.5rem;\\n  }\\n\\n  .btn-primary,\\n  .btn-success,\\n  .btn-warning {\\n    width: 100%;\\n  }\\n\\n  .form-control {\\n    height: calc(2.25rem + 2px);\\n  }\\n\\n  .form-group {\\n    margin-bottom: 1.5rem;\\n  }\\n\\n  .input-group-prepend .input-group-text {\\n    background-color: #e9ecef;\\n    border: 1px solid #ced4da;\\n  }\\n\\n  .input-group-prepend .input-group-text i {\\n    color: #495057;\\n  }\\n\\n  .row {\\n    margin-left: 0;\\n    margin-right: 0;\\n  }\\n\\n  .textarea-height {\\n    height: 100px;\\n  }\\n\\n  .card {\\n    margin: auto;\\n    max-width: 450px;\\n  }\\n</style>\\n\\n<div class=\\\"container-fluid\\\" style=\\\"padding: 2% 0; background: url('assets/files/wall.jpg') no-repeat center center; background-attachment: fixed; background-size: cover; width: 100%; height: 86vh;\\\">\\n  <div class=\\\"row justify-content-center\\\">\\n    <div class=\\\"col-md-6\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-body input-group-addon grad\\\">\\n          <form name=\\\"userForm\\\">\\n            <h2 *ngIf=\\\"!form.data.id\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{ 'Add Supplier' | translate }}</h2>\\n            <h2 *ngIf=\\\"form.data.id\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{ 'Update Supplier' | translate }}</h2>\\n\\n            <div *ngIf=\\\"!form.error && form.message == 'Data is saved'\\\" class=\\\"alert alert-success alert-dismissible\\\">\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n              {{ form.message }}\\n            </div>\\n\\n            <div *ngIf=\\\"form.error && form.message\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n              {{ form.message }}\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label><b>{{ 'Category' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fas fa-flag\\\"></i></div>\\n                </div>\\n                <select class=\\\"form-control\\\" name=\\\"categoryId\\\" [(ngModel)]=\\\"form.data.categoryId\\\" aria-label=\\\"ngSelected\\\">\\n                  <option [ngValue]=\\\"undefined\\\">{{ 'Select category' | translate }}</option>\\n                  <option *ngFor=\\\"let obj of form.preload.categoryList\\\" [value]=\\\"obj.key\\\">{{ obj.value }}</option>\\n                </select>\\n              </div>\\n              <span *ngIf=\\\"form.inputerror.categoryId\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.categoryId }}</span>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label><b>{{ 'Name' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fas fa-user\\\"></i></div>\\n                </div>\\n                <input type=\\\"text\\\" maxlength=\\\"25\\\" name=\\\"name\\\" [(ngModel)]=\\\"form.data.name\\\" class=\\\"form-control\\\" placeholder=\\\"{{ 'Enter name' | translate }}\\\" (keypress)=\\\"validateAlphabetInput($event)\\\">\\n              </div>\\n              <span *ngIf=\\\"form.inputerror.name\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.name }}</span>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label><b>{{ 'Payment Term' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fas fa-money-bill-wave\\\"></i></div>\\n                </div>\\n                <input type=\\\"text\\\" maxlength=\\\"7\\\" name=\\\"paymentTerm\\\" [(ngModel)]=\\\"form.data.paymentTerm\\\" class=\\\"form-control\\\" placeholder=\\\"{{ 'Enter payment term' | translate }}\\\" (keypress)=\\\"validateNumberInput($event)\\\">\\n              </div>\\n              <span *ngIf=\\\"form.inputerror.paymentTerm\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.paymentTerm }}</span>\\n            </div>\\n            \\n            \\n            \\n\\n            <div class=\\\"form-group\\\">\\n              <label><b>{{ 'Registration Date' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"far fa-calendar-alt\\\"></i></div>\\n                </div>\\n                <input type=\\\"date\\\" name=\\\"registrationDate\\\" [value]=\\\"form.data.registrationDate | date:'yyyy-MM-dd'\\\" (input)=\\\"form.data.registrationDate=parseDate($event.target.value)\\\" class=\\\"form-control\\\" required />\\n              </div>\\n              <span *ngIf=\\\"form.inputerror.registrationDate\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.registrationDate }}</span>\\n            </div>\\n\\n            <div class=\\\"row pt-2 pb-3 justify-content-center\\\">\\n              <div class=\\\"col-md-4\\\">\\n                <button *ngIf=\\\"!form.data.id\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{ 'Save' | translate }}</button>\\n              </div>\\n              <div class=\\\"col-md-4\\\">\\n                <button *ngIf=\\\"form.data.id\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{ 'Update' | translate }}</button>\\n              </div>\\n              <div class=\\\"col-md-4\\\">\\n                <a class=\\\"btn btn-warning\\\" type=\\\"button\\\" [routerLink]=\\\"['/supplierlist']\\\">{{ 'List' | translate }}</a>\\n              </div>\\n            </div>\\n          </form>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<app-footer></app-footer>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { BaseCtl } from '../base.component';\nimport { ServiceLocatorService } from '../service-locator.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n@Component({\n  selector: 'app-supplier',\n  templateUrl: './supplier.component.html',\n  styleUrls: ['./supplier.component.css']\n})\n\nexport class SupplierComponent extends BaseCtl {\n\n  getKey = false;\n  selected = null;\n  userForm: FormGroup = null;\n  uploadForm: FormGroup;\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\n    super(locator.endpoints.SUPPLIER, locator, route);\n  }\n\n  submit() {\n    var _self = this;\n    console.log('in submit');\n    console.log(this.form);\n    console.log(this.form.data);\n  \n    this.serviceLocator.httpService.post(this.api.save, this.form.data, function (res) {\n      _self.form.message = '';\n      _self.form.inputerror = {}; // Clear input errors here\n  \n      if (res.success) {\n        _self.form.error = false; // Set error to false on success\n        _self.form.message = \"Data is saved\";\n        _self.form.data.id = res.result.data;\n        console.log(_self.form.data.id);\n        console.log(\"----------Chetan----------.\");\n  \n        // Clear form data if needed\n        // _self.form.data = {};\n  \n      } else {\n        _self.form.error = true;\n        if (res.result.inputerror) {\n          _self.form.inputerror = res.result.inputerror;\n        }\n        _self.form.message = res.result.message;\n      }\n      console.log('FORM', _self.form);\n    });\n  }\n  \n  \n\n  submit1() {\n    var _self = this;\n    console.log(this.form + \"submit running start\");\n    console.log(this.form.data + \"form data going to be submit\");\n    this.serviceLocator.httpService.post(this.api.search, this.form.data, function (res) {\n      _self.form.message = '';\n      _self.form.inputerror = {};\n      _self.form.data.id = res.result.data;\n\n\n      if (res.success) {\n        _self.form.message = \"Data is saved\";\n        _self.form.data.id = res.result.data;\n\n\n        console.log(_self.form.data.id);\n        console.log(\"--------------------.\");\n\n      } else {\n        _self.form.error = true;\n        _self.form.inputerror = res.result.inputerror;\n        _self.form.message = res.result.message;\n      }\n      _self.form.data.id = res.result.data;\n      console.log('FORM', _self.form);\n    });\n  }\n\n\n\n\n  onUpload(userform: FormData) {\n    this.submit();\n    console.log(this.form.data.id + '---- after submit');\n\n  }\n\n\n  validateForm(form) {\n    let flag = true;\n    let validator = this.serviceLocator.dataValidator;\n    flag = flag && validator.isNotNullObject(form.categoryId);\n    console.log(form.categoryId);\n    flag = flag && validator.isNotNullObject(form.name);\n    console.log(form.name);\n    flag = flag && validator.isNotNullObject(form.paymentTerm);\n    console.log(form.paymentTerm);\n    flag = flag && validator.isNotNullObject(form.registrationDate);\n    console.log(form.registrationDate);\n\n    return flag;\n  }\n\n  populateForm(form, data) {\n    form.id = data.id;\n    console.log(form.id + 'populate form in shoppingcomponent');\n    form.name = data.name;\n    form.paymentTerm = data.paymentTerm;\n    form.registrationDate = data.registrationDate;\n    form.categoryId = data.categoryId;\n\n\n  }\n\n  validatePhone(event: KeyboardEvent) {\n    const input = event.key;\n    // Check if the input is a number or backspace\n    if ((isNaN(Number(input)) && input !== 'Backspace') || (input === ' ')) {\n      event.preventDefault();\n    }\n    // Limit the input to 10 characters\n    if (this.form.data.phone && this.form.data.phone.length >= 10 && input !== 'Backspace') {\n      event.preventDefault();\n    }\n  }\n\n  validateNumberInput(event: KeyboardEvent) {\n    const charCode = event.which ? event.which : event.keyCode;\n    const charStr = String.fromCharCode(charCode);\n\n    // Allow only digits\n    if (!/^\\d$/.test(charStr)) {\n      event.preventDefault();\n    }\n  }\n\n\n  validateAlphabetInput(event) {\n    const charCode = event.which || event.keyCode;\n    const charStr = String.fromCharCode(charCode);\n\n    // Regular expression to test if the character is a letter\n    const letterRegex = /^[a-zA-Z\\s]+$/;\n\n    // Test if the input matches the allowed characters\n    if (!letterRegex.test(charStr)) {\n      event.preventDefault();\n    }\n\n    // Optionally, check the entire value against the name format regex\n    const inputElement = event.target;\n    const inputValue = inputElement.value + charStr; // Add the current character to the input value\n\n    // Regex for valid name format \"FirstName LastName\"\n    const nameRegex = /^[A-Z][a-z]+ [A-Z][a-z]+$/;\n\n    // Check if the current value matches the valid name format\n    if (!nameRegex.test(inputValue)) {\n      // Handle invalid input (e.g., disable submit button, show error message)\n      // Example:\n      inputElement.classList.add('invalid'); // Apply CSS class for invalid input\n    } else {\n      inputElement.classList.remove('invalid'); // Remove invalid CSS class if format is valid\n    }\n  }\n\n\n\n\n  parseDate(dateString: string): Date {\n    if (dateString) {\n      return new Date(dateString);\n    }\n    return null;\n  }\n  test() {\n\n  }\n\n}\n","module.exports = \"\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N1cHBsaWVyL3N1cHBsaWVybGlzdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-navbar></app-navbar>\\n\\n<style>\\n  /* Adjustments for panel heading and main content wrapper */\\n  .panel-heading {\\n    height: 50px;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    margin-bottom: 20px; /* Added margin bottom for spacing */\\n  }\\n\\n\\n  .content-wrapper {\\n    background: url(assets/files/wall.jpg) no-repeat center center;\\n    background-attachment: fixed;\\n    background-size: cover;\\n    padding: 20px;\\n    min-height: calc(100vh - 20px); /* Adjusted to ensure full height minus padding */\\n    box-sizing: border-box; /* Ensures padding is included in height calculation */\\n  }\\n\\n  .search-inputs {\\n    margin-top: 20px;\\n    margin-bottom: 20px; /* Added margin bottom for spacing */\\n  }\\n\\n  .search-inputs .form-control,\\n  .search-inputs .btn {\\n    margin-bottom: 10px;\\n  }\\n\\n  .table-responsive {\\n    margin-top: 20px;\\n    overflow-x: auto; /* Ensures horizontal scroll if table overflows */\\n  }\\n</style>\\n\\n<div class=\\\"content-wrapper\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"panel panel-primary\\\">\\n      <div class=\\\"panel-heading\\\">\\n        <h1 class=\\\"text-primary font-weight-bold\\\">{{ 'Supplier List' | translate }}</h1>\\n      </div>\\n\\n      <div class=\\\"row search-inputs justify-content-center\\\">\\n        <div class=\\\"col-md-3\\\">\\n          <input type=\\\"text\\\" [maxLength]=\\\"25\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.name\\\"\\n            placeholder=\\\"{{ 'Search Name' | translate }}\\\" (input)=\\\"validateInput($event, 'name')\\\">\\n          <div *ngIf=\\\"!isValidNameInput\\\" class=\\\"text-danger\\\">{{ nameErrorMessage }}</div>\\n        </div>\\n\\n        <div class=\\\"col-md-3\\\">\\n          <input type=\\\"date\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.registrationDate\\\"\\n            (ngModelChange)=\\\"formatDate($event)\\\" placeholder=\\\"{{ 'Search registrationDate' | translate }}\\\">\\n        </div>\\n\\n        <div class=\\\"col-md-3\\\">\\n          <input type=\\\"text\\\" [maxLength]=\\\"10\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.paymentTerm\\\"\\n            placeholder=\\\"{{ 'Search paymentTerm' | translate }}\\\" (input)=\\\"validateInput($event, 'paymentTerm')\\\">\\n            <div *ngIf=\\\"!isValidpaymentTermInput\\\" class=\\\"text-danger\\\">{{ paymentTermErrorMessage }}</div>\\n        </div>\\n\\n        <div class=\\\"col-md-3\\\">\\n          <select class=\\\"form-control\\\" name=\\\"categoryId\\\" [(ngModel)]=\\\"form.searchParams.categoryId\\\">\\n            <option [ngValue]=\\\"undefined\\\">{{ 'Select category' | translate }}</option>\\n            <option *ngFor=\\\"let obj of form.preload.categoryList\\\" [value]=\\\"obj.key\\\">{{ obj.value }}</option>\\n          </select>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"row mt-2 justify-content-center\\\">\\n        <div class=\\\"col-md-2\\\">\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary btn-block\\\">{{ 'Search' | translate }}</button>\\n        </div>\\n        <div class=\\\"col-md-2\\\">\\n          <button (click)=\\\"forward('/supplier')\\\" type=\\\"button\\\" class=\\\"btn btn-success btn-block\\\">{{ 'Add supplier' | translate }}</button>\\n        </div>\\n        <div class=\\\"col-md-2\\\">\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger btn-block\\\">{{ 'Delete' | translate }}</button>\\n        </div>\\n      </div>\\n\\n      <div *ngIf=\\\"form.error || form.message\\\" class=\\\"row mt-2 justify-content-center\\\">\\n        <div class=\\\"col-md-6\\\">\\n          <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{ form.message }}\\n          </div>\\n          <div *ngIf=\\\"!form.error && form.message\\\" class=\\\"alert alert-success alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{ form.message }}\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"table-responsive mt-3\\\">\\n        <table class=\\\"table table-bordered table-hover font-weight-bold text-dark\\\">\\n          <thead class=\\\"thead-dark text-uppercase\\\">\\n            <tr align=\\\"center\\\">\\n              <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" name=\\\"list_name\\\" (change)=\\\"checkUncheckAll($event)\\\" /></th>\\n              <th>{{ 'S.No' }}</th>\\n              <th>{{ 'Name' }}</th>\\n              <th>{{ 'Payment Term' }}</th>\\n              <th>{{ 'Registration Date' }}</th>\\n              <th>{{ 'Category' }}</th>\\n              <th>{{ 'Edit' }}</th>\\n            </tr>\\n          </thead>\\n          <tbody>\\n            <tr *ngFor=\\\"let m of form.list; let i = index\\\" align=\\\"center\\\">\\n              <td><input type=\\\"checkbox\\\" #checkboxes (change)=\\\"checklistUpdate()\\\" name=\\\"list_name\\\" [id]=\\\"m.id\\\" /></td>\\n              <td>{{ (form.pageNo * 5) + i + 1 }}</td>\\n              <td>{{ m.name }}</td>\\n              <td>{{ m.paymentTerm }}</td>\\n              <td>{{ convertToLocalDate(m.registrationDate) }}</td>\\n              <td>{{ m.categoryName }}</td>\\n              <td>\\n                <button class=\\\"fa fa-edit text-primary\\\" id=\\\"nnn\\\" (click)=\\\"forward('/supplier/' + m.id)\\\"></button>\\n              </td>\\n            </tr>\\n          </tbody>\\n        </table>\\n      </div>\\n\\n      <div class=\\\"d-flex justify-content-between mt-3\\\">\\n        <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\">{{ 'Previous' | translate }}</button>\\n        <div *ngIf=\\\"form.list.length == 0\\\">\\n          <a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/supplierlist']\\\" (click)=\\\"exit()\\\">{{ 'Back' | translate }}</a>\\n        </div>\\n        <button (click)=\\\"next()\\\" [disabled]=\\\"nextList == 0\\\" class=\\\"btn btn-info\\\">{{ 'Next' | translate }}</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<app-footer></app-footer>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { BaseListCtl } from '../base-list.component';\nimport { ServiceLocatorService } from '../service-locator.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: \"app-supplierlist\",\n  templateUrl: \"./supplierlist.component.html\",\n  styleUrls: [\"./supplierlist.component.css\"],\n})\nexport class SupplierlistComponent extends BaseListCtl implements OnInit {\n  public form = {\n    error: false,\n    message: null,\n    preload: [],\n    data: { id: null },\n    inputerror: {},\n    searchParams: {\n      name: \"\",\n      paymentTerm: \"\",\n      registrationdate: \"\", // Initialize date field\n      categoryId: \"\",\n      date: \"\",\n    },\n    searchMessage: null,\n    list: [],\n    pageNo: 0,\n  };\n\n  isValidpaymentTermInput: boolean = true;\n  isValidNameInput: boolean = true;\n  nameErrorMessage: string = \"\";\n  paymentTermErrorMessage: string = \"\";\n\n  constructor(\n    public locator: ServiceLocatorService,\n    public route: ActivatedRoute,\n    private httpClient: HttpClient\n  ) {\n    super(locator.endpoints.SUPPLIER, locator, route);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n  }\n\n  // Format date function\n  formatDate(event: any) {\n    const selectedDate = new Date(event);\n    const formattedDate = selectedDate.toISOString().split(\"T\")[0]; // Ensure it's in ISO format\n    this.form.searchParams.date = formattedDate;\n  }\n\n  // Convert date to local format for display\n  convertToLocalDate(dateString: string): string {\n    const date = new Date(dateString);\n    // Format date to 'MM/DD/YYYY'\n    const options = { year: \"numeric\", month: \"2-digit\", day: \"2-digit\" };\n    return date.toLocaleDateString(undefined, options);\n  }\n\n  // Validate input for name and mobile fields\n  validateInput(event: any, field: string) {\n    const value = event.target.value;\n    if (field === \"paymentTerm\") {\n      this.isValidpaymentTermInput = /^[0-9]*$/.test(value); // Check if the input contains only numbers\n      if (!this.isValidpaymentTermInput) {\n        this.paymentTermErrorMessage = \"Please type numbers only\";\n      } else {\n        this.paymentTermErrorMessage = \"\";\n      }\n    } else if (field === \"name\") {\n      this.isValidNameInput = /^[A-Za-z\\s]*$/.test(value); // Check if the input contains only letters and spaces\n      if (!this.isValidNameInput) {\n        this.nameErrorMessage = \"Please type alphabets only\";\n      } else {\n        this.nameErrorMessage = \"\";\n      }\n    }\n  }\n\n  // Submit method\n  submit() {\n    // Reset page number before searching\n    this.form.pageNo = 0;\n    // Call the search method after formatting the date\n    this.search();\n  }\n\n  // Search method\n  search() {\n    // Clear previous search message\n    this.form.searchMessage = null;\n    // Perform the search operation with the search parameters\n    super.search();\n  }\n}\n","module.exports = \"<app-navbar></app-navbar>\\n<div class=\\\"content-wrapper\\\" style=\\\"padding-top: 3%; padding-bottom: 15%; \\nbackground: url(assets/files/gettyimages-1132439283-640x640.jpg) no-repeat center center;\\nbackground-attachment: fixed;\\nbackground-size: cover;width:auto;\\n  height: 90vh;\\\">\\n  <div class=\\\"container-fluid\\\">\\n\\n    <div class=\\\"panel panel-primary\\\">\\n      <div class=\\\"panel-heading\\\" style=\\\"height: 50px;\\\">\\n        <div class=\\\"text-center\\\">\\n          <h1 class=\\\"text-primary font-weight-bold\\\">{{'TimeTable List' | translate }}</h1>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"row p-1\\\">\\n        <div class=\\\"col-sm-1\\\"></div>\\n        <div class=\\\"col-sm-2\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.subjectName\\\"\\n            placeholder=\\\"{{'Search Subject' | translate}}\\\">\\n\\n        </div>\\n        <!-- <div class=\\\"col-sm-2\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.loginId\\\" placeholder=\\\"{{'Search Email' | translate}}\\\">\\n        </div> -->\\n        <div class=\\\"col-sm-2\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.courseName\\\"\\n            placeholder=\\\"{{'Search Course' | translate}}\\\">\\n\\n        </div>\\n\\n        \\n        <div class=\\\"col-sm-2\\\">\\n          <!-- <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.status\\\" placeholder=\\\"{{'Search Status' | translate}}\\\"> -->\\n        </div>\\n        <div class=\\\"col-sm-1 ml-3\\\">\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary\\\">\\n            {{'Search' | translate }}</button>\\n        </div>\\n        <div class=\\\"col-lg-2 ml-4\\\">\\n          <button (click)=\\\"forward('/timetable')\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">{{'Add TimeTable' | translate}}\\n          </button>\\n        </div>\\n\\n        <div class=\\\"col-sm-1\\\">\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger\\\">\\n            {{'Delete'| translate}}</button>\\n        </div>\\n      </div>\\n\\n      <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n        {{form.message}}\\n      </div>\\n      <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n        {{form.message}}\\n      </div>\\n\\n      <div class=\\\"p-1\\\">\\n        <div class=\\\"table-responsive\\\">\\n          <table class=\\\"table table-bordered table-striped table-hover\\\">\\n            <thead class=\\\"thead-light text-uppercase\\\">\\n              <tr>\\n                <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" name=\\\"list_name\\\" value=\\\"h1\\\"\\n                    (change)=\\\"checkUncheckAll($event)\\\" /></th>\\n\\n                <th>{{'S.No.' | translate }}</th>\\n                <th>{{'Semester' | translate }}</th>\\n                <th>{{'ExamDate' | translate }}</th>\\n                <th>{{'ExamTime' | translate }}</th>\\n                <th>{{'Course' | translate }}</th>\\n                <th>{{'Subject' | translate }}</th>\\n                <th>{{'Description' | translate }}</th>\\n                <th>{{'Edit' | translate}}</th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              \\n              <tr *ngFor=\\\"let m of form.list; let i = index;\\\">\\n                <td> <input type=\\\"checkbox\\\" #checkboxes (change)=\\\"checklistUpdate()\\\" name=\\\"list_name\\\" id=\\\"{{m.id}}\\\" value=\\\"{{isMasterSel}}\\\" />\\n                </td>\\n                <td> {{(form.pageNo*5)+i+ 1}} </td>\\n                <td> {{ m.semester }} </td>\\n                <td> {{ m.examDate | date : 'dd-MM-yyyy' }} </td>\\n                <td> {{ m.examTime }} </td>\\n                <td> {{ m.courseName }} </td>\\n                <td> {{ m.subjectName }} </td>\\n                <td> {{ m.description }} </td>\\n                <td>\\n                  <a (click)=\\\"forward( '/timetable/' +  m.id)\\\" style=\\\"cursor: pointer;\\\">\\n                    <i class=\\\"fa fa-edit text-info\\\"></i>\\n                  </a>\\n                  <!-- /\\n                    <a (click)=\\\"delete(m.id)\\\" style=\\\"cursor: pointer;\\\">\\n                      <i class=\\\"fa fa-trash text-danger\\\"></i>\\n                    </a>\\n                  </td> -->\\n\\n              </tr>\\n            </tbody>\\n          </table>\\n          <table style=\\\"width: 100%;\\\">\\n            <tr>\\n              <td style=\\\"width: 50%;\\\">\\n          <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\"> {{'Previous' | translate\\n            }} </button></td>\\n            <td *ngIf=\\\"form.list.length!=0\\\" style=\\\"width: 50%;\\\"></td>\\n            <td *ngIf=\\\"form.list.length==0\\\" style=\\\"width: 50%;\\\"><a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/timetablelist']\\\"  (click)=\\\"exit()\\\">{{'Back' | translate}}</a></td>\\n\\n\\n        \\n            <td><button (click)=\\\"next()\\\" [disabled]=\\\"nextList==0\\\" type=\\\"button\\\" class=\\\"btn btn-info\\\"> {{'Next' |\\n              translate }}</button></td>\\n            </tr>\\n            </table>\\n\\n              \\n            \\n        </div>\\n      </div>\\n\\n    </div>\\n\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { BaseCtl } from '../base.component';\nimport { ServiceLocatorService } from '../service-locator.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { BaseListCtl } from '../base-list.component';\n\n@Component({\n  selector: 'app-timetable-list',\n  templateUrl: './timetable-list.component.html',\n  styleUrls: ['./timetable.component.css']\n})\nexport class TimetableListComponent  extends BaseListCtl {\n\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute) {\n    super( locator.endpoints.TIMETABLE, locator, route);\n    let ppSize= 0;\n  }\n  \n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RpbWV0YWJsZS90aW1ldGFibGUuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<app-navbar></app-navbar>\\n\\n<style>\\n  .grad{\\n background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\n background-repeat: no repeat;\\n background-size: 100%;\\n padding-bottom: 25px\\n ;\\n }\\n</style>\\n\\n<div class=\\\"row \\\" style=\\\"padding-top: 3%; padding-bottom:3%;\\nbackground: url(assets/files/wall.jpg) no-repeat center center;\\nbackground-attachment: fixed;\\nbackground-size: cover;width:auto;\\n  height: auto;\\\">\\n\\n  <div class=\\\"col-sm-4\\\"></div>\\n  <div class=\\\"col-sm-4\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-body shadow-lg grad\\\">\\n        <form>\\n          <h2 *ngIf=\\\"!form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\">{{'Add TimeTable' | translate }}</h2>\\n          <h2 *ngIf=\\\"form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\">{{'Update TimeTable' | translate }}</h2>\\n          <div *ngIf=\\\"form.error && form.message != null\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{form.message}}\\n          </div>\\n          <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{form.message}}\\n          </div>\\n\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'Course' | translate }}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-file grey-text\\\"></i> </div>\\n                </div>\\n                <select class=\\\"form-control\\\" name=\\\"courseId\\\" [(ngModel)]=\\\"form.data.courseId\\\"\\n                  style=\\\"cursor: pointer;\\\">\\n                  <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{' Select Course' | translate }}</option>\\n                  <option *ngFor=\\\"let obj of form.preload.courseList\\\" [value]=\\\"obj.key\\\">{{obj.value}}</option>\\n                </select>\\n              </div>\\n            </div>\\n          \\n          </div>\\n\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'Subject' | translate }}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-globe grey-text\\\"></i> </div>\\n                </div>\\n                <select class=\\\"form-control\\\" name=\\\"subjectId\\\" [(ngModel)]=\\\"form.data.subjectId\\\" style=\\\"cursor: pointer;\\\">\\n                  <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{' Select Subject' | translate }}</option>\\n            \\n                  <option *ngFor=\\\"let obj of form.preload.subjectList\\\" [value]=\\\"obj.key\\\">{{obj.value}}</option>\\n                </select>\\n              </div>\\n              <span class=\\\"alertRedColor\\\"> {{form.inputerror.subject}} </span>\\n            </div>\\n          </div>\\n\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'Semester' | translate }}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-list-ol grey-text\\\"></i> </div>\\n                </div>\\n                <select class=\\\"form-control\\\" name=\\\"semester\\\" [(ngModel)]=\\\"form.data.semester\\\" style=\\\"cursor: pointer;\\\">\\n                  <option [ngValue]=\\\"\\\" value=\\\"undefined\\\"> {{'Please select' | translate}} </option>\\n                  <option value=\\\"1 Semester\\\">1 Semester</option>\\n                  <option value=\\\"2 Semester\\\">2 Semester</option>\\n                  <option value=\\\"3 Semester\\\">3 Semester</option>\\n                  <option value=\\\"4 Semester\\\">4 Semester</option>\\n                  <option value=\\\"5 Semester\\\">5 Semester</option>\\n                  <option value=\\\"6 Semester\\\">6 Semester</option>\\n                  <option value=\\\"7 Semester\\\">7 Semester</option>\\n                  <option value=\\\"8 Semester\\\">8 Semester</option>\\n                </select>\\n              </div>\\n              <span class=\\\"alertRedColor\\\"> {{form.inputerror.semester}} </span>\\n            </div>\\n          </div>\\n\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'Exam Date' | translate }}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-table grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"date\\\" name=\\\"examDate\\\" [value]=\\\"form.data.examDate | date:'yyyy-MM-dd'\\\"\\n                (input)=\\\"form.data.examDate=parseDate($event.target.value)\\\"\\n                class=\\\"form-control form-control-sm\\\" required />\\n              </div>\\n              <span class=\\\"alertRedColor\\\"> {{form.inputerror.examDate}} </span>\\n            </div>\\n          </div>\\n\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'Exam Time' | translate }}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-clock-o grey-text\\\"></i> </div>\\n                </div>\\n                <select class=\\\"form-control\\\" name=\\\"examTime\\\" [(ngModel)]=\\\"form.data.examTime\\\">\\n                  <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{' Select examTime' | translate }}</option>\\n            \\n                  <option selected disabled>{{'Please select' | translate }}</option>\\n                  <option value=\\\"08:00 AM to 11:00 AM\\\">08:00 AM to 11:00 AM</option>\\n                  <option value=\\\"12:00PM to 3:00PM\\\">12:00PM to 3:00PM</option>\\n                  <option value=\\\"3:00PM to 6:00PM\\\">3:00PM to 6:00PM</option>\\n                </select>\\n              </div>\\n              <span class=\\\"alertRedColor\\\"> {{form.inputerror.examTime}} </span>\\n            </div>\\n          </div>\\n\\n          <div style=\\\"padding-top:3%\\\">\\n            <span><b>{{'Description' | translate }}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-bars grey-text \\\"></i> </div>\\n                </div>\\n                <textarea  name=\\\"description\\\" [(ngModel)]=\\\"form.data.description\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter Description' | translate }}\\\"></textarea>\\n              </div>\\n            </div>\\n            <span class=\\\"alertRedColor\\\">{{form.inputerror.description}}</span>\\n          </div>\\n\\n          <div class=\\\"row pt-3 pl-3 pb-3\\\">\\n            <div class=\\\"pt-2\\\">\\n              <button *ngIf=\\\"!form.data.id>0\\\"  (click)=\\\"submit()\\\" [disabled]=\\\"!validate()\\\" class=\\\"btn btn-success mr-2\\\">\\n                {{'Save' | translate }}</button>\\n            </div>\\n            <div class=\\\"pt-2\\\">\\n              <button  *ngIf=\\\"form.data.id>0\\\"  (click)=\\\"submit()\\\" class=\\\"btn btn-success mr-2\\\">\\n              {{'Update' | translate }}</button>\\n            </div>\\n           \\n           \\n            <div class=\\\"pl-3 pt-2\\\">\\n              <button (click)=\\\"forward('/timetablelist')\\\" type=\\\"button\\\" class=\\\"btn btn-warning mr-1\\\">{{'List' | translate }}\\n              </button>\\n            </div>\\n          </div>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div><app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\nimport { BaseCtl } from '../base.component';\nimport { ServiceLocatorService } from '../service-locator.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-timetable',\n  templateUrl: './timetable.component.html',\n  styleUrls: ['./timetable.component.css']\n})\n\n\nexport class TimetableComponent extends BaseCtl {\n\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute) {\n    super(locator.endpoints.TIMETABLE, locator, route);\n  }\n\n  validate() {\n    return this.validateForm(this.form.data);\n\n  }\n\n  validateForm(form) {\n    let flag = true;\n    let validator = this.serviceLocator.dataValidator;\n    flag = flag && validator.isNotNullObject(form.semester);\n    flag = flag && validator.isNotNullObject(form.examDate);\n    console.log(form.examDate);\n    flag = flag && validator.isNotNullObject(form.examTime);\n    flag = flag && validator.isNotNullObject(form.courseId);\n    flag = flag && validator.isNotNullObject(form.subjectId);\n    flag = flag && validator.isNotNullObject(form.description);\n    \n    return flag;\n  }\n\n  populateForm(form, data) {\n    form.id = data.id;\n    form.courseId = data.courseId;\n    form.subjectId = data.subjectId;\n    form.semester = data.semester;\n    form.examDate = data.examDate;\n    form.examTime = data.examTime;\n    form.description = data.description;\n\n    console.log('Populated Form', form);\n  }\n  parseDate(dateString: string): Date {\n    if (dateString) {\n      return new Date(dateString);\n    }\n    return null;\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RyYW5zYWN0aW9ucy90cmFuc2FjdGlvbnMuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<app-navbar></app-navbar>\\n\\n<style>\\n  .grad {\\n    background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\n    background-repeat: no-repeat;\\n    background-size: 100%;\\n    padding-bottom: 25px;\\n  }\\n\\n  .input-group-addon {\\n    box-shadow: 9px 8px 7px #001a33;\\n  }\\n\\n  .required-field {\\n    color: red;\\n    font-weight: bold;\\n  }\\n\\n  .alertRedColor {\\n    color: red;\\n  }\\n\\n  .card-body {\\n    padding: 2rem;\\n  }\\n\\n  .input-group-text i {\\n    width: 1.5rem;\\n  }\\n\\n  .btn-primary,\\n  .btn-success,\\n  .btn-warning {\\n    width: 100%;\\n  }\\n\\n  .form-control {\\n    height: calc(2.25rem + 2px);\\n  }\\n\\n  .form-group {\\n    margin-bottom: 1.5rem;\\n  }\\n\\n  .input-group-prepend .input-group-text {\\n    background-color: #e9ecef;\\n    border: 1px solid #ced4da;\\n  }\\n\\n  .input-group-prepend .input-group-text i {\\n    color: #495057;\\n  }\\n\\n  .row {\\n    margin-left: 0;\\n    margin-right: 0;\\n  }\\n\\n  .textarea-height {\\n    height: 100px;\\n  }\\n\\n  .card {\\n    margin: auto;\\n    max-width: 500px;\\n  }\\n</style>\\n\\n<div class=\\\"container-fluid\\\"\\n  style=\\\"padding: 2% 0; background: url('assets/files/wall.jpg') no-repeat center center; background-attachment: fixed; background-size: cover; width: 100%; height: auto;\\\">\\n  <div class=\\\"row justify-content-center\\\">\\n    <div class=\\\"col-md-6\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-body input-group-addon grad\\\">\\n          <form name=\\\"userForm\\\">\\n            <h2 *ngIf=\\\"!form.data.id\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{ 'Add Transactions' |\\n              translate }}</h2>\\n            <h2 *ngIf=\\\"form.data.id\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{ 'Update Transactions' |\\n              translate }}</h2>\\n\\n            <div *ngIf=\\\"!form.error && form.message == 'Data is saved'\\\" class=\\\"alert alert-success alert-dismissible\\\">\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n              {{ form.message }}\\n            </div>\\n\\n            <div *ngIf=\\\"form.error && form.message\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n              {{ form.message }}\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label><b>{{ 'AccountId' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-flag grey-text\\\"></i></div>\\n                </div>\\n                <select class=\\\"form-control\\\" name=\\\"accountIdId\\\" [(ngModel)]=\\\"form.data.accountIdId\\\"\\n                  aria-label=\\\"ngSelected\\\">\\n                  <option [ngValue]=\\\"undefined\\\">{{ 'Select accountId' | translate }}</option>\\n                  <option *ngFor=\\\"let obj of form.preload.accountIdList\\\" [value]=\\\"obj.key\\\">{{ obj.key }}</option>\\n                </select>\\n              </div>\\n              <span *ngIf=\\\"form.inputerror.accountIdId\\\" class=\\\"alertRedColor\\\">{{form.inputerror.accountIdId}}</span>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label><b>{{ 'Transaction Type' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-flag grey-text\\\"></i></div>\\n                </div>\\n                <select class=\\\"form-control\\\" name=\\\"transactionType\\\" [(ngModel)]=\\\"form.data.transactionTypeId\\\"\\n                  aria-label=\\\"ngSelected\\\">\\n                  <option [ngValue]=\\\"undefined\\\">{{ 'Select transactionType' | translate }}</option>\\n                  <option *ngFor=\\\"let obj of form.preload.transactionTypeList\\\" [value]=\\\"obj.key\\\">{{ obj.value }}</option>\\n                </select>\\n              </div>\\n              <span *ngIf=\\\"form.inputerror.transactionTypeId\\\"\\n                class=\\\"alertRedColor\\\">{{form.inputerror.transactionTypeId}}</span>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label><b>{{ 'Description' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-align-left grey-text\\\"></i></div>\\n                </div>\\n                <textarea name=\\\"description\\\" [(ngModel)]=\\\"form.data.description\\\" class=\\\"form-control textarea-height\\\"\\n                  placeholder=\\\"{{ 'Enter description' | translate }}\\\"></textarea>\\n              </div>\\n              <span *ngIf=\\\"form.inputerror.description\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.description }}</span>\\n            </div>\\n\\n\\n            <div class=\\\"form-group\\\">\\n              <label><b>{{ 'Transaction Date' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"far fa-calendar-alt\\\"></i></div>\\n                </div>\\n                <input type=\\\"date\\\" name=\\\"transactionDate\\\" [value]=\\\"form.data.transactionDate | date:'yyyy-MM-dd'\\\"\\n                  (input)=\\\"form.data.transactionDate=parseDate($event.target.value)\\\" class=\\\"form-control\\\" required />\\n              </div>\\n              <span *ngIf=\\\"form.inputerror.transactionDate\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.transactionDate\\n                }}</span>\\n            </div>\\n\\n            <div class=\\\"row pt-2 pb-3 justify-content-center\\\">\\n              <div class=\\\"col-md-4\\\">\\n                <button *ngIf=\\\"!form.data.id\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{ 'Save' | translate\\n                  }}</button>\\n              </div>\\n              <div class=\\\"col-md-4\\\">\\n                <button *ngIf=\\\"form.data.id\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{ 'Update' | translate\\n                  }}</button>\\n              </div>\\n              <div class=\\\"col-md-4\\\">\\n                <a class=\\\"btn btn-warning\\\" type=\\\"button\\\" [routerLink]=\\\"['/transactionslist']\\\">{{ 'List' | translate\\n                  }}</a>\\n              </div>\\n            </div>\\n          </form>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { BaseCtl } from '../base.component';\nimport { ServiceLocatorService } from '../service-locator.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-transactions',\n  templateUrl: './transactions.component.html',\n  styleUrls: ['./transactions.component.css']\n})\nexport class TransactionsComponent extends BaseCtl {\n\n  getKey = false;\n  selected = null;\n  userForm: FormGroup = null;\n  uploadForm: FormGroup;\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\n    super(locator.endpoints.TRANSACTIONS, locator, route);\n  }\n\n  submit() {\n    var _self = this;\n    console.log('in submit');\n    console.log(this.form);\n    console.log(this.form.data);\n\n    this.serviceLocator.httpService.post(this.api.save, this.form.data, function (res) {\n      _self.form.message = '';\n      _self.form.inputerror = {}; // Clear input errors here\n\n      if (res.success) {\n        _self.form.error = false; // Set error to false on success\n        _self.form.message = \"Data is saved\";\n        _self.form.data.id = res.result.data;\n        console.log(_self.form.data.id);\n        console.log(\"----------Chetan----------.\");\n\n        // Clear form data if needed\n        // _self.form.data = {};\n\n      } else {\n        _self.form.error = true;\n        if (res.result.inputerror) {\n          _self.form.inputerror = res.result.inputerror;\n        }\n        _self.form.message = res.result.message;\n      }\n      console.log('FORM', _self.form);\n    });\n  }\n\n\n\n  submit1() {\n    var _self = this;\n    console.log(this.form + \"submit running start\");\n    console.log(this.form.data + \"form data going to be submit\");\n    this.serviceLocator.httpService.post(this.api.search, this.form.data, function (res) {\n      _self.form.message = '';\n      _self.form.inputerror = {};\n      _self.form.data.id = res.result.data;\n\n\n      if (res.success) {\n        _self.form.message = \"Data is saved\";\n        _self.form.data.id = res.result.data;\n\n\n        console.log(_self.form.data.id);\n        console.log(\"--------------------.\");\n\n      } else {\n        _self.form.error = true;\n        _self.form.inputerror = res.result.inputerror;\n        _self.form.message = res.result.message;\n      }\n      _self.form.data.id = res.result.data;\n      console.log('FORM', _self.form);\n    });\n  }\n\n\n\n\n  onUpload(userform: FormData) {\n    this.submit();\n    console.log(this.form.data.id + '---- after submit');\n\n  }\n\n  // validatePaymentTerm() {\n  //   const paymentTerm = this.form.data.paymentTerm;\n  //   const paymentTermPattern = /^[a-zA-Z ]*$/; // Only allows alphabetic characters and spaces\n  //   if (!paymentTermPattern.test(paymentTerm)) {\n  //     this.form.inputerror.paymentTerm = 'Invalid payment term';\n  //   } else {\n  //     delete this.form.inputerror.paymentTerm;\n  //   }\n  // }\n\n\n  validateForm(form) {\n    let flag = true;\n    let validator = this.serviceLocator.dataValidator;\n    flag = flag && validator.isNotNullObject(form.description);\n    console.log(form.description);\n    flag = flag && validator.isNotNullObject(form.accountIdId);\n    console.log(form.accountIdId);\n    flag = flag && validator.isNotNullObject(form.transactionTypeId);\n    console.log(form.transactionTypeId);\n    flag = flag && validator.isNotNullObject(form.transactionDate);\n    console.log(form.transactionDate);\n\n    return flag;\n  }\n\n  populateForm(form, data) {\n    form.id = data.id;\n    console.log(form.id + 'populate form in transactioncomponent');\n    form.description = data.description;\n    form.transactionTypeId = data.transactionTypeId;\n    form.transactionDate = data.transactionDate;\n    form.accountIdId = data.accountIdId;\n\n\n  }\n\n  // validatePhone(event: KeyboardEvent) {\n  //   const input = event.key;\n  //   // Check if the input is a number or backspace\n  //   if ((isNaN(Number(input)) && input !== 'Backspace') || (input === ' ')) {\n  //     event.preventDefault();\n  //   }\n  //   // Limit the input to 10 characters\n  //   if (this.form.data.phone && this.form.data.phone.length >= 10 && input !== 'Backspace') {\n  //     event.preventDefault();\n  //   }\n  // }\n\n  // validateAlphabetInput(event) {\n  //   const charCode = event.which || event.keyCode;\n  //   const charStr = String.fromCharCode(charCode);\n\n  //   // Regular expression to test if the character is a letter\n  //   const letterRegex = /^[a-zA-Z\\s]+$/;\n\n  //   // Test if the input matches the allowed characters\n  //   if (!letterRegex.test(charStr)) {\n  //     event.preventDefault();\n  //   }\n\n  //   // Optionally, check the entire value against the name format regex\n  //   const inputElement = event.target;\n  //   const inputValue = inputElement.value + charStr; // Add the current character to the input value\n\n  //   // Regex for valid name format \"FirstName LastName\"\n  //   const nameRegex = /^[A-Z][a-z]+ [A-Z][a-z]+$/;\n\n  //   // Check if the current value matches the valid name format\n  //   if (!nameRegex.test(inputValue)) {\n  //     // Handle invalid input (e.g., disable submit button, show error message)\n  //     // Example:\n  //     inputElement.classList.add('invalid'); // Apply CSS class for invalid input\n  //   } else {\n  //     inputElement.classList.remove('invalid'); // Remove invalid CSS class if format is valid\n  //   }\n  // }\n\n\n\n\n  parseDate(dateString: string): Date {\n    if (dateString) {\n      return new Date(dateString);\n    }\n    return null;\n  }\n  test() {\n\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RyYW5zYWN0aW9ucy90cmFuc2FjdGlvbnNsaXN0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<app-navbar></app-navbar>\\n\\n<style>\\n  #nnn {\\n    background: none;\\n    border: none;\\n    cursor: pointer;\\n  }\\n\\n  .panel-heading {\\n    height: 50px;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n  }\\n\\n  .search-inputs {\\n    margin-top: 20px;\\n  }\\n\\n  .search-inputs .form-control,\\n  .search-inputs .btn {\\n    margin-bottom: 10px;\\n  }\\n\\n  .content-wrapper {\\n    background: url(assets/files/wall.jpg) no-repeat center center;\\n    background-attachment: fixed;\\n    background-size: cover;\\n    width: auto;\\n    height: 105vh;\\n    padding: 20px;\\n  }\\n\\n  .table-responsive {\\n    margin-top: 20px;\\n  }\\n</style>\\n\\n<div class=\\\"content-wrapper\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"panel panel-primary\\\">\\n      <div class=\\\"panel-heading\\\">\\n        <h1 class=\\\"text-primary font-weight-bold\\\">{{ 'Transaction List' | translate }}</h1>\\n      </div>\\n\\n      <div class=\\\"row search-inputs justify-content-center\\\">\\n        <div class=\\\"col-md-3\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.description\\\"\\n            placeholder=\\\"{{ 'Search description' | translate }}\\\">\\n        </div>\\n        <div class=\\\"col-md-3\\\">\\n          <input type=\\\"date\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.transactionDate\\\"\\n            (ngModelChange)=\\\"formatDate($event)\\\" placeholder=\\\"{{ 'Search transactionDate' | translate }}\\\">\\n        </div>\\n        <div class=\\\"col-md-3\\\">\\n          <select class=\\\"form-control\\\" name=\\\"accountIdId\\\" [(ngModel)]=\\\"form.searchParams.accountIdId\\\">\\n            <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{ 'Select accountId' | translate }}</option>\\n            <option *ngFor=\\\"let obj of form.preload.accountIdList\\\" [value]=\\\"obj.key\\\">{{ obj.key }}</option>\\n          </select>\\n        </div>\\n        <div class=\\\"col-md-3\\\">\\n          <select class=\\\"form-control\\\" name=\\\"transactionTypeId\\\" [(ngModel)]=\\\"form.searchParams.transactionTypeId\\\">\\n            <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{ 'Select transactionType' | translate }}</option>\\n            <option *ngFor=\\\"let obj of form.preload.transactionTypeList\\\" [value]=\\\"obj.key\\\">{{ obj.value }}</option>\\n          </select>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"row mt-2 justify-content-center\\\">\\n        <div class=\\\"col-md-2\\\">\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary btn-block\\\">{{ 'Search' | translate }}</button>\\n        </div>\\n        <div class=\\\"col-md-2\\\">\\n          <button (click)=\\\"forward('/transactions')\\\" type=\\\"button\\\" class=\\\"btn btn-success btn-block\\\">{{ 'Add Transaction'\\n            | translate }}</button>\\n        </div>\\n        <div class=\\\"col-md-2\\\">\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger btn-block\\\">{{ 'Delete' | translate }}</button>\\n        </div>\\n      </div>\\n\\n      <div *ngIf=\\\"form.error || form.message\\\" class=\\\"row mt-2 justify-content-center\\\">\\n        <div class=\\\"col-md-6\\\">\\n          <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{ form.message }}\\n          </div>\\n          <div *ngIf=\\\"!form.error && form.message\\\" class=\\\"alert alert-success alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{ form.message }}\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"table-responsive mt-3\\\">\\n        <table class=\\\"table table-bordered table-hover font-weight-bold text-dark\\\">\\n          <thead class=\\\"thead-dark text-uppercase\\\">\\n            <tr align=\\\"center\\\">\\n              <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" name=\\\"list_name\\\" (change)=\\\"checkUncheckAll($event)\\\" /></th>\\n              <th>{{ 'S.No' }}</th>\\n              <th>{{ 'description' }}</th>\\n              <th>{{ 'accountId' }}</th>\\n              <th>{{ 'Transaction Date' }}</th>\\n              <th>{{ 'Transaction Type' }}</th>\\n              <th>{{ 'Edit' }}</th>\\n            </tr>\\n          </thead>\\n          <tbody>\\n            <tr *ngFor=\\\"let m of form.list; let i = index\\\" align=\\\"center\\\">\\n              <td><input type=\\\"checkbox\\\" #checkboxes (change)=\\\"checklistUpdate()\\\" name=\\\"list_name\\\" [id]=\\\"m.id\\\" /></td>\\n              <td>{{ (form.pageNo * 5) + i + 1 }}</td>\\n              <td>{{ m.description }}</td>\\n              <td>{{ m.accountIdId }}</td>\\n              <td>{{ convertToLocalDate(m.transactionDate) }}</td>\\n              <td>{{ m.transactionTypeName }}</td>\\n              <td>\\n                <button class=\\\"fa fa-edit text-primary\\\" id=\\\"nnn\\\" (click)=\\\"forward('/transactions/' + m.id)\\\"></button>\\n              </td>\\n            </tr>\\n          </tbody>\\n        </table>\\n      </div>\\n\\n      <div class=\\\"d-flex justify-content-between mt-3\\\">\\n        <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\">{{ 'Previous' | translate }}</button>\\n        <div *ngIf=\\\"form.list.length == 0\\\">\\n          <a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/transactionslist']\\\" (click)=\\\"exit()\\\">{{ 'Back' | translate }}</a>\\n        </div>\\n        <button (click)=\\\"next()\\\" [disabled]=\\\"nextList == 0\\\" class=\\\"btn btn-info\\\">{{ 'Next' | translate }}</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<app-footer></app-footer>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { BaseListCtl } from '../base-list.component';\nimport { ServiceLocatorService } from '../service-locator.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-transactionslist',\n  templateUrl: './transactionslist.component.html',\n  styleUrls: ['./transactionslist.component.css']\n})\nexport class TransactionslistComponent extends BaseListCtl implements OnInit {\n\n  public form = {\n    error: false,\n    message: null,\n    preload: [],\n    data: { id: null },\n    inputerror: {},\n    searchParams: {\n      description: '',\n      date: '', // Initialize date field\n      accountIdId: '',\n      transactionTypeId: '',\n      transactionDate: ''\n    },\n    searchMessage: null,\n    list: [],\n    pageNo: 0\n  };\n\n  isValidMobileInput: boolean = true;\n  isValidNameInput: boolean = true;\n  isValidAllowedSpeed: boolean = true;\n  nameErrorMessage: string = '';\n  mobileErrorMessage: string = '';\n  allowedSpeedErrorMessage: string = '';\n\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\n    super(locator.endpoints.TRANSACTIONS, locator, route);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n  }\n\n  // Format date function\n  formatDate(event: any) {\n    const selectedDate = new Date(event);\n    const formattedDate = selectedDate.toISOString().split('T')[0];\n    this.form.searchParams.date = formattedDate;\n  }\n\n  // Convert date to local format for display\n  convertToLocalDate(dateString: string): string {\n    const date = new Date(dateString);\n    const options = { year: 'numeric', month: '2-digit', day: '2-digit' };\n    return date.toLocaleDateString(undefined, options);\n  }\n\n  // Validate input for name, mobile, and allowedSpeed fields\n  validateInput(event: any, field: string) {\n    const value = event.target.value;\n    if (field === 'mobile') {\n      this.isValidMobileInput = /^[0-9]*$/.test(value); // Check if the input contains only numbers\n      if (!this.isValidMobileInput) {\n        this.mobileErrorMessage = 'Please type numbers only';\n      } else {\n        this.mobileErrorMessage = '';\n      }\n    } else if (field === 'name') {\n      this.isValidNameInput = /^[A-Za-z\\s]*$/.test(value); // Check if the input contains only letters and spaces\n      if (!this.isValidNameInput) {\n        this.nameErrorMessage = 'Please type alphabets only';\n      } else {\n        this.nameErrorMessage = '';\n      }\n    } else if (field === 'allowedSpeed') {\n      if (value === '') {\n        this.isValidAllowedSpeed = true; // Treat empty input as valid\n        this.allowedSpeedErrorMessage = '';\n      } else {\n        const speed = parseInt(value, 10);\n        this.isValidAllowedSpeed = speed >= 70 && speed <= 150; // Check if the input is between 70 and 150\n        if (!this.isValidAllowedSpeed) {\n          this.allowedSpeedErrorMessage = 'Please type a valid allowed speed (70-150)';\n        } else {\n          this.allowedSpeedErrorMessage = '';\n        }\n      }\n    }\n  }\n\n  // Submit method\n  submit() {\n    // Reset page number before searching\n    this.form.pageNo = 0;\n    // Call the search method after formatting the date\n    this.search();\n  }\n\n  // Search method\n  search() {\n    // Clear previous search message\n    this.form.searchMessage = null;\n    // Perform the search operation with the search parameters\n    super.search();\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RyYW5zcG9ydGF0aW9uL3RyYW5zcG9ydGF0aW9uLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<app-navbar></app-navbar>\\n\\n<style>\\n  .grad {\\n    background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\n    background-repeat: no-repeat;\\n    background-size: 100%;\\n    padding-bottom: 25px;\\n  }\\n\\n  .input-group-addon {\\n    box-shadow: 9px 8px 7px #001a33;\\n  }\\n\\n  .required-field {\\n    color: red;\\n    font-weight: bold;\\n  }\\n\\n  .alertRedColor {\\n    color: red;\\n  }\\n\\n  .card-body {\\n    padding: 2rem;\\n  }\\n\\n  .input-group-text i {\\n    width: 1.5rem;\\n  }\\n\\n  .btn-primary,\\n  .btn-success,\\n  .btn-warning {\\n    width: 100%;\\n  }\\n\\n  .form-control {\\n    height: calc(2.25rem + 2px);\\n  }\\n\\n  .form-group {\\n    margin-bottom: 1.5rem;\\n  }\\n\\n  .input-group-prepend .input-group-text {\\n    background-color: #e9ecef;\\n    border: 1px solid #ced4da;\\n  }\\n\\n  .input-group-prepend .input-group-text i {\\n    color: #495057;\\n  }\\n\\n  .row {\\n    margin-left: 0;\\n    margin-right: 0;\\n  }\\n\\n  .textarea-height {\\n    height: 100px;\\n  }\\n\\n  .card {\\n    margin: auto;\\n    max-width: 500px;\\n  }\\n</style>\\n\\n<div class=\\\"container-fluid\\\"\\n  style=\\\"padding: 2% 0; background: url('assets/files/wall.jpg') no-repeat center center; background-attachment: fixed; background-size: cover; width: 100%; height: auto;\\\">\\n  <div class=\\\"row justify-content-center\\\">\\n    <div class=\\\"col-md-6\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-body input-group-addon grad\\\">\\n          <form name=\\\"userForm\\\">\\n            <h2 *ngIf=\\\"!form.data.id\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{ 'Add Transportation' |\\n              translate }}</h2>\\n            <h2 *ngIf=\\\"form.data.id\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{ 'Update Transportation' |\\n              translate }}</h2>\\n\\n            <div *ngIf=\\\"!form.error && form.message == 'Data is saved'\\\" class=\\\"alert alert-success alert-dismissible\\\">\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n              {{ form.message }}\\n            </div>\\n\\n            <div *ngIf=\\\"form.error && form.message\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n              {{ form.message }}\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label><b>{{ 'Mode' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fas fa-flag\\\"></i></div>\\n                </div>\\n                <select class=\\\"form-control\\\" name=\\\"modeId\\\" [(ngModel)]=\\\"form.data.modeId\\\" aria-label=\\\"ngSelected\\\">\\n                  <option [ngValue]=\\\"undefined\\\">{{ 'Select mode' | translate }}</option>\\n                  <option *ngFor=\\\"let obj of form.preload.modeList\\\" [value]=\\\"obj.key\\\">{{ obj.value }}</option>\\n                </select>\\n              </div>\\n              <span *ngIf=\\\"form.inputerror.modeId\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.modeId }}</span>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label><b>{{ 'Description' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-home grey-text\\\"></i></div>\\n                </div>\\n                <textarea name=\\\"address\\\" [(ngModel)]=\\\"form.data.description\\\" class=\\\"form-control textarea-height\\\"\\n                  placeholder=\\\"{{ 'Enter Description' | translate }}\\\"></textarea>\\n              </div>\\n              <span *ngIf=\\\"form.inputerror.description\\\" class=\\\"alertRedColor\\\">{{form.inputerror.description}}</span>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label><b>{{ 'Cost' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fas fa-money-bill-wave\\\"></i></div>\\n                </div>\\n                <input type=\\\"number\\\" name=\\\"cost\\\" [(ngModel)]=\\\"form.data.cost\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{ 'Enter cost' | translate }}\\\">\\n              </div>\\n              <span *ngIf=\\\"form.inputerror.cost\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.cost }}</span>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label><b>{{ 'Date' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"far fa-calendar-alt\\\"></i></div>\\n                </div>\\n                <input type=\\\"date\\\" name=\\\"date\\\" [value]=\\\"form.data.date | date:'yyyy-MM-dd'\\\"\\n                  (input)=\\\"form.data.date=parseDate($event.target.value)\\\" class=\\\"form-control\\\" required />\\n              </div>\\n              <span *ngIf=\\\"form.inputerror.date\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.date }}</span>\\n            </div>\\n\\n            <div class=\\\"row pt-2 pb-3 justify-content-center\\\">\\n              <div class=\\\"col-md-4\\\">\\n                <button *ngIf=\\\"!form.data.id\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{ 'Save' | translate\\n                  }}</button>\\n              </div>\\n              <div class=\\\"col-md-4\\\">\\n                <button *ngIf=\\\"form.data.id\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{ 'Update' | translate\\n                  }}</button>\\n              </div>\\n              <div class=\\\"col-md-4\\\">\\n                <a class=\\\"btn btn-warning\\\" type=\\\"button\\\" [routerLink]=\\\"['/transportationlist']\\\">{{ 'List' | translate\\n                  }}</a>\\n              </div>\\n            </div>\\n          </form>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { BaseCtl } from '../base.component';\nimport { ServiceLocatorService } from '../service-locator.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-transportation',\n  templateUrl: './transportation.component.html',\n  styleUrls: ['./transportation.component.css']\n})\nexport class TransportationComponent extends BaseCtl {\n\n  getKey = false;\n  selected = null;\n  userForm: FormGroup = null;\n  uploadForm: FormGroup;\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\n    super(locator.endpoints.TRANSPORTATION, locator, route);\n  }\n\n  submit() {\n    var _self = this;\n    console.log('in submit');\n    console.log(this.form);\n    console.log(this.form.data);\n\n    this.serviceLocator.httpService.post(this.api.save, this.form.data, function (res) {\n      _self.form.message = '';\n      _self.form.inputerror = {}; // Clear input errors here\n\n      if (res.success) {\n        _self.form.error = false; // Set error to false on success\n        _self.form.message = \"Data is saved\";\n        _self.form.data.id = res.result.data;\n        console.log(_self.form.data.id);\n        console.log(\"----------Chetan----------.\");\n\n        // Clear form data if needed\n        // _self.form.data = {};\n\n      } else {\n        _self.form.error = true;\n        if (res.result.inputerror) {\n          _self.form.inputerror = res.result.inputerror;\n        }\n        _self.form.message = res.result.message;\n      }\n      console.log('FORM', _self.form);\n    });\n  }\n\n\n\n  submit1() {\n    var _self = this;\n    console.log(this.form + \"submit running start\");\n    console.log(this.form.data + \"form data going to be submit\");\n    this.serviceLocator.httpService.post(this.api.search, this.form.data, function (res) {\n      _self.form.message = '';\n      _self.form.inputerror = {};\n      _self.form.data.id = res.result.data;\n\n\n      if (res.success) {\n        _self.form.message = \"Data is saved\";\n        _self.form.data.id = res.result.data;\n\n\n        console.log(_self.form.data.id);\n        console.log(\"--------------------.\");\n\n      } else {\n        _self.form.error = true;\n        _self.form.inputerror = res.result.inputerror;\n        _self.form.message = res.result.message;\n      }\n      _self.form.data.id = res.result.data;\n      console.log('FORM', _self.form);\n    });\n  }\n\n\n\n\n  onUpload(userform: FormData) {\n    this.submit();\n    console.log(this.form.data.id + '---- after submit');\n\n  }\n\n  validatePaymentTerm() {\n    const paymentTerm = this.form.data.paymentTerm;\n    const paymentTermPattern = /^[a-zA-Z ]*$/; // Only allows alphabetic characters and spaces\n    if (!paymentTermPattern.test(paymentTerm)) {\n      this.form.inputerror.paymentTerm = 'Invalid payment term';\n    } else {\n      delete this.form.inputerror.paymentTerm;\n    }\n  }\n\n\n  validateForm(form) {\n    let flag = true;\n    let validator = this.serviceLocator.dataValidator;\n    flag = flag && validator.isNotNullObject(form.modeId);\n    console.log(form.modeId);\n    flag = flag && validator.isNotNullObject(form.description);\n    console.log(form.description);\n    flag = flag && validator.isNotNullObject(form.cost);\n    console.log(form.cost);\n    flag = flag && validator.isNotNullObject(form.date);\n    console.log(form.date);\n\n    return flag;\n  }\n\n  populateForm(form, data) {\n    form.id = data.id;\n    console.log(form.id + 'populate form in shoppingcomponent');\n    form.description = data.description;\n    form.cost = data.cost;\n    form.date = data.date;\n    form.modeId = data.modeId;\n\n\n  }\n\n  validatePhone(event: KeyboardEvent) {\n    const input = event.key;\n    // Check if the input is a number or backspace\n    if ((isNaN(Number(input)) && input !== 'Backspace') || (input === ' ')) {\n      event.preventDefault();\n    }\n    // Limit the input to 10 characters\n    if (this.form.data.phone && this.form.data.phone.length >= 10 && input !== 'Backspace') {\n      event.preventDefault();\n    }\n  }\n\n  validateAlphabetInput(event) {\n    const charCode = event.which || event.keyCode;\n    const charStr = String.fromCharCode(charCode);\n\n    // Regular expression to test if the character is a letter\n    const letterRegex = /^[a-zA-Z\\s]+$/;\n\n    // Test if the input matches the allowed characters\n    if (!letterRegex.test(charStr)) {\n      event.preventDefault();\n    }\n\n    // Optionally, check the entire value against the name format regex\n    const inputElement = event.target;\n    const inputValue = inputElement.value + charStr; // Add the current character to the input value\n\n    // Regex for valid name format \"FirstName LastName\"\n    const nameRegex = /^[A-Z][a-z]+ [A-Z][a-z]+$/;\n\n    // Check if the current value matches the valid name format\n    if (!nameRegex.test(inputValue)) {\n      // Handle invalid input (e.g., disable submit button, show error message)\n      // Example:\n      inputElement.classList.add('invalid'); // Apply CSS class for invalid input\n    } else {\n      inputElement.classList.remove('invalid'); // Remove invalid CSS class if format is valid\n    }\n  }\n\n\n\n\n  parseDate(dateString: string): Date {\n    if (dateString) {\n      return new Date(dateString);\n    }\n    return null;\n  }\n  test() {\n\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RyYW5zcG9ydGF0aW9uL3RyYW5zcG9ydGF0aW9ubGlzdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-navbar></app-navbar>\\n\\n<style>\\n  /* Adjustments for panel heading and main content wrapper */\\n  .panel-heading {\\n    height: 50px;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    margin-bottom: 20px;\\n    /* Added margin bottom for spacing */\\n  }\\n\\n  .content-wrapper {\\n    background: url(assets/files/wall.jpg) no-repeat center center;\\n    background-attachment: fixed;\\n    background-size: cover;\\n    padding: 20px;\\n    min-height: calc(100vh - 20px);\\n    /* Adjusted to ensure full height minus padding */\\n    box-sizing: border-box;\\n    /* Ensures padding is included in height calculation */\\n  }\\n\\n  .search-inputs {\\n    margin-top: 20px;\\n    margin-bottom: 20px;\\n    /* Added margin bottom for spacing */\\n  }\\n\\n  .search-inputs .form-control,\\n  .search-inputs .btn {\\n    margin-bottom: 10px;\\n  }\\n\\n  .table-responsive {\\n    margin-top: 20px;\\n    overflow-x: auto;\\n    /* Ensures horizontal scroll if table overflows */\\n  }\\n</style>\\n\\n<div class=\\\"content-wrapper\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"panel panel-primary\\\">\\n      <div class=\\\"panel-heading\\\">\\n        <h1 class=\\\"text-primary font-weight-bold\\\">{{ 'Transportation List' | translate }}</h1>\\n      </div>\\n\\n      <div class=\\\"row search-inputs justify-content-center\\\">\\n        <div class=\\\"col-md-3\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.description\\\"\\n            placeholder=\\\"{{ 'Search description' | translate }}\\\">\\n        </div>\\n\\n        <div class=\\\"col-md-3\\\">\\n          <input type=\\\"date\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.date\\\"\\n            (ngModelChange)=\\\"formatDate($event)\\\" placeholder=\\\"{{ 'Search date' | translate }}\\\">\\n        </div>\\n\\n        <div class=\\\"col-md-3\\\">\\n          <input type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.cost\\\"\\n            placeholder=\\\"{{ 'Search cost' | translate }}\\\" (ngModelChange)=\\\"validateCost()\\\">\\n          <div *ngIf=\\\"!isValidCost\\\" class=\\\"text-danger\\\">{{ costErrorMessage }}</div>\\n        </div>\\n\\n\\n        <div class=\\\"col-md-3\\\">\\n          <select class=\\\"form-control\\\" name=\\\"modeId\\\" [(ngModel)]=\\\"form.searchParams.modeId\\\">\\n            <option [ngValue]=\\\"undefined\\\">{{ 'Select mode' | translate }}</option>\\n            <option *ngFor=\\\"let obj of form.preload.modeList\\\" [value]=\\\"obj.key\\\">{{ obj.value }}</option>\\n          </select>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"row mt-2 justify-content-center\\\">\\n        <div class=\\\"col-md-2\\\">\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary btn-block\\\">{{ 'Search' | translate }}</button>\\n        </div>\\n        <div class=\\\"col-md-2\\\">\\n          <button (click)=\\\"forward('/transportation')\\\" type=\\\"button\\\" class=\\\"btn btn-success btn-block\\\">{{ 'Add\\n            transportation' | translate }}</button>\\n        </div>\\n        <div class=\\\"col-md-2\\\">\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger btn-block\\\">{{ 'Delete' | translate }}</button>\\n        </div>\\n      </div>\\n\\n      <div *ngIf=\\\"form.error || form.message\\\" class=\\\"row mt-2 justify-content-center\\\">\\n        <div class=\\\"col-md-6\\\">\\n          <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{ form.message }}\\n          </div>\\n          <div *ngIf=\\\"!form.error && form.message\\\" class=\\\"alert alert-success alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{ form.message }}\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"table-responsive mt-3\\\">\\n        <table class=\\\"table table-bordered table-hover font-weight-bold text-dark\\\">\\n          <thead class=\\\"thead-dark text-uppercase\\\">\\n            <tr align=\\\"center\\\">\\n              <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" name=\\\"list_name\\\"\\n                  (change)=\\\"checkUncheckAll($event)\\\" /></th>\\n              <th>{{ 'S.No' }}</th>\\n              <th>{{ 'Description' }}</th>\\n              <th>{{ 'Cost' }}</th>\\n              <th>{{ 'Date' }}</th>\\n              <th>{{ 'Mode' }}</th>\\n              <th>{{ 'Edit' }}</th>\\n            </tr>\\n          </thead>\\n          <tbody>\\n            <tr *ngFor=\\\"let m of form.list; let i = index\\\" align=\\\"center\\\">\\n              <td><input type=\\\"checkbox\\\" #checkboxes (change)=\\\"checklistUpdate()\\\" name=\\\"list_name\\\" [id]=\\\"m.id\\\" /></td>\\n              <td>{{ (form.pageNo * 5) + i + 1 }}</td>\\n              <td>{{ m.description }}</td>\\n              <td>{{ m.cost }}</td>\\n              <td>{{ convertToLocalDate(m.date) }}</td>\\n              <td>{{ m.modeName }}</td>\\n              <td>\\n                <button class=\\\"fa fa-edit text-primary\\\" id=\\\"nnn\\\" (click)=\\\"forward('/transportation/' + m.id)\\\"></button>\\n              </td>\\n            </tr>\\n          </tbody>\\n        </table>\\n      </div>\\n\\n      <div class=\\\"d-flex justify-content-between mt-3\\\">\\n        <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\">{{ 'Previous' | translate\\n          }}</button>\\n        <div *ngIf=\\\"form.list.length == 0\\\">\\n          <a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/transportationlist']\\\" (click)=\\\"exit()\\\">{{ 'Back' | translate\\n            }}</a>\\n        </div>\\n        <button (click)=\\\"next()\\\" [disabled]=\\\"nextList == 0\\\" class=\\\"btn btn-info\\\">{{ 'Next' | translate }}</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\nimport { BaseListCtl } from '../base-list.component';\nimport { ServiceLocatorService } from '../service-locator.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-transportationlist',\n  templateUrl: './transportationlist.component.html',\n  styleUrls: ['./transportationlist.component.css']\n})\nexport class TransportationlistComponent extends BaseListCtl implements OnInit {\n\n  public form = {\n    error: false,\n    message: null,\n    preload: [],\n    data: { id: null },\n    inputerror: {},\n    searchParams: {\n\n      name: '',\n      cost: '',\n      date: '', // Initialize date field\n      modeId: '',\n    },\n    searchMessage: null,\n    list: [],\n    pageNo: 0\n  };\n\n\n  isValidCost: boolean = true;\n  costErrorMessage: string = '';\n\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\n    super(locator.endpoints.TRANSPORTATION, locator, route);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n  }\n\n  // Format date function\n  formatDate(event: any) {\n    const selectedDate = new Date(event);\n    const formattedDate = selectedDate.toISOString().split('T')[0]; // Ensure it's in ISO format\n    this.form.searchParams.date = formattedDate;\n  }\n\n\n  // Convert date to local format for display\n  convertToLocalDate(dateString: string): string {\n    const date = new Date(dateString);\n    // Format date to 'MM/DD/YYYY'\n    const options = { year: 'numeric', month: '2-digit', day: '2-digit' };\n    return date.toLocaleDateString(undefined, options);\n  }\n\n\n  validateCost() {\n    const cost = this.form.searchParams.cost;\n    const costValue = Number(cost);\n    if (!cost || isNaN(costValue) || costValue <= 0 || costValue > 5000000) {\n      this.isValidCost = false;\n      this.costErrorMessage = 'Please enter valid cost value';\n    } else {\n      this.isValidCost = true;\n      this.costErrorMessage = '';\n    }\n  }\n\n  // Submit method\n  submit() {\n    // Reset page number before searching\n    this.form.pageNo = 0;\n    // Call the search method after formatting the date\n    this.search();\n  }\n\n\n  // Search method\n  search() {\n    // Clear previous search message\n    this.form.searchMessage = null;\n    // Perform the search operation with the search parameters\n    super.search();\n  }\n}\n","module.exports = \"<app-navbar></app-navbar>\\n\\n<style>\\n.grad{\\n  background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\n  background-repeat: no repeat;\\n  background-size: 100%;\\n  padding-bottom: 10px;\\n  }\\n  </style>\\n<div class=\\\"row \\\" style=\\\"padding-top: 10%; padding-bottom: 5%;\\n background: url(assets/files/wall.jpg);\\n  background-attachment: fixed;\\n  background-size: cover; width:auto;\\n    height: auto;\\\">\\n  <div class=\\\"col-sm-4\\\"></div>\\n  <div class=\\\"col-sm-4\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-body shadow-lg grad\\\">\\n        <form>\\n          <h2  class=\\\"text-primary font-weight-bold\\\">{{'Change Password' | translate }}</h2>\\n    \\n\\n          <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{form.message}}\\n          </div>\\n          <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{form.message}}\\n          </div>\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'Old Password' | translate}}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-key grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"password\\\" name=\\\"oldPassword\\\" [(ngModel)]=\\\"form.data.oldPassword\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter Old Password' | translate}}\\\">\\n              </div>\\n            </div>\\n          </div>\\n        <span class=\\\"alertRedColor\\\">{{form.inputerror.name}}</span>\\n        \\n        <div style=\\\"padding-top:3%\\\">\\n            <span><b>{{'New Password' | translate}}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-unlock-alt grey-text \\\"></i> </div>\\n                </div>\\n                <input type=\\\"password\\\" name=\\\"newPassword\\\" [(ngModel)]=\\\"form.data.newPassword\\\" class=\\\"form-control\\\"\\n                placeholder=\\\"{{'Enter New Password' | translate}}\\\">\\n              </div>\\n            </div>\\n            <span class=\\\"alertRedColor\\\">{{form.inputerror.description}}</span>\\n          </div>\\n          <div style=\\\"padding-top:3%\\\">\\n            <span><b>Confirm Password</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-unlock grey-text \\\"></i> </div>\\n                </div>\\n                <input type=\\\"password\\\" name=\\\"confirmPassword\\\" [(ngModel)]=\\\"form.data.confirmPassword\\\" class=\\\"form-control\\\"\\n                placeholder=\\\"{{'Confirm Password' | translate}}\\\">\\n              </div>\\n            </div>\\n            <span class=\\\"alertRedColor\\\">{{form.inputerror.confirmPassword}}</span>\\n          </div>\\n          <div class=\\\"row pt-3 pl-3 pb-3\\\">\\n            <div class=\\\"pt-2\\\">\\n              <button   (click)=\\\"changePassword()\\\" class=\\\"btn btn-success mr-2\\\">\\n               {{'Update' | translate}} </button>\\n            </div>\\n            <input type=\\\"hidden\\\" name=\\\"loginId\\\" [(ngModel)]=\\\"form.data.confirmPassword\\\">\\n            \\n          </div>\\n        </form>\\n      </div>\\n\\n    </div>\\n\\n  </div>\\n</div><app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\nimport { ServiceLocatorService } from '../service-locator.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { BaseCtl } from '../base.component';\nimport {HttpServiceService } from '../http-service.service';\n\n@Component({\n  selector: 'app-changepassword',\n  templateUrl: './changepassword.component.html',\n  styleUrls: ['./user.component.css']\n})\n\nexport class ChangepasswordComponent extends BaseCtl {\n\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, public httpService : HttpServiceService) {\n    super(locator.endpoints.USER, locator, route);\n  }\n  public form = {\n\n    error: false, //error \n    message: null, //error or success message\n    preload: [], // preload data\n    data: { id: null, loginId : null }, //form data\n    inputerror: {}, // form input error messages\n    searchParams: {}, //search form\n    searchMessage: null, //search result message\n    list: [], // search list \n    pageNo : 0\n  };\n  validateForm(form) {\n    let flag = true;\n    let validator = this.serviceLocator.dataValidator;\n    flag = flag && validator.isNotNullObject(form.oldPassword);\n    flag = flag && validator.isNotNullObject(form.newPassword);\n    flag = flag && validator.isNotNullObject(form.confirmPassword);\n    return flag;\n  }\n\n  changePassword(){\n   var _self = this;\n   this.form.data.loginId = localStorage.getItem(\"loginId\")\n    this.httpService.post(\"http://localhost:8084/User/changepassword\",this.form.data,function (res){\n      \n      if(res.success){\n        _self.form.list = res.result.data;\n        _self.form.message = res.result.message;\n      }\n         });\n  }\n  }\n  \n","module.exports = \"<app-navbar></app-navbar>\\n<div class=\\\"row \\\" style=\\\"padding-top: 3%; padding-bottom:3%; \\nbackground: url(assets/files/edc.jpg) no-repeat center center;\\nbackground-attachment: fixed;\\nbackground-size: cover;width:auto;\\n  height: auto;\\\">\\n\\n  <div class=\\\"col-sm-4\\\"></div>\\n  <div class=\\\"col-sm-4\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-body shadow-lg\\\">\\n        <form name=\\\"myProfile\\\">\\n          <h2 class=\\\"text-primary font-weight-bold\\\">{{'My Profile'  | translate }}</h2>\\n         \\n\\n          <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{form.message}}\\n          </div>\\n          <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{form.message}}\\n          </div>\\n\\n          \\n\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'First Name'  | translate }}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"fn\\\" [(ngModel)]=\\\"form.data.firstName\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter First Name'  | translate }}\\\">\\n              </div>\\n            </div>\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.firstName}} </span>\\n          </div>\\n\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'Last Name'  | translate }}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"ln\\\" [(ngModel)]=\\\"form.data.lastName\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter Last Name'  | translate }}\\\">\\n              </div>\\n            </div>\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.lastName}} </span>\\n          </div>\\n\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'login Id'  | translate }}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"loginId\\\" [(ngModel)]=\\\"form.data.loginId\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter Login Id'  | translate }}\\\">\\n              </div>\\n            </div>\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.state}} </span>\\n          </div>\\n\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'Password'  | translate }}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"password\\\" name=\\\"pwd\\\" [(ngModel)]=\\\"form.data.password\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter Password'  | translate }}\\\">\\n              </div>\\n            </div>\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.password}} </span>\\n          </div>\\n\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'Mobile'  | translate }}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"phone\\\" [(ngModel)]=\\\"form.data.phone\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter Mobile Number' | translate}}\\\">\\n              </div>\\n            </div>\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.phone}} </span>\\n          </div>\\n\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'Alternate Mobile'  | translate }}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"alternateMobile\\\" [(ngModel)]=\\\"form.data.alternateMobile\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter Alternate Number' | translate}}\\\">\\n              </div>\\n            </div>\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.phone}} </span>\\n          </div>\\n\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'DOB'  | translate }}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"date\\\" name=\\\"dob\\\" [value]=\\\"form.data.dob | date:'yyyy-MM-dd'\\\"\\n                (input)=\\\"form.data.dob=parseDate($event.target.value)\\\"\\n                class=\\\"form-control form-control-sm\\\" required />\\n              </div>\\n            </div>\\n            <span class=\\\"alertRedColor\\\"> {{form.inputerror.dob}} </span>\\n          </div>\\n          \\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'Gender'  | translate }}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope grey-text\\\"></i> </div>\\n                </div>\\n                <select class=\\\"form-control\\\" name=\\\"gender\\\" id=\\\"gender\\\" [(ngModel)]=\\\"form.data.gender\\\"\\n                  style=\\\"cursor: pointer;\\\">\\n                  <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{'Please select'  | translate }}</option>\\n                  <option value=\\\"Male\\\">{{'Male'  | translate }} </option>\\n                  <option value=\\\"Female\\\">{{'Female'  | translate }} </option>\\n                </select>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'Image'  | translate }}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"file\\\" id=\\\"customFile\\\" name=\\\"imageId\\\"\\n                  (change)=\\\"onFileSelect($event.target.files)\\\" accept=\\\"image/*\\\">\\n\\n                <span class=\\\"alertRedColor\\\"> {{form.inputerror.image}} </span>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div style=\\\"padding-top:3%\\\">\\n            <span class=\\\"pt-2\\\"><b>{{'Status' | translate }}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope grey-text\\\"></i> </div>\\n                </div>\\n                <select class=\\\"form-control\\\" id=\\\"status\\\" name=\\\"status\\\" [(ngModel)]=\\\"form.data.status\\\" readonly>\\n\\n                  <option value=\\\"Active\\\">{{'Active'  | translate }} </option>\\n                  <option value=\\\"Inactive\\\">{{'Inactive'  | translate }} </option>\\n                </select>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"row pt-3 pl-3 pb-3\\\">\\n            \\n\\n            <div class=\\\"pt-2\\\">\\n              <button (click)=\\\"onUpload()\\\" class=\\\"btn btn-success mr-2\\\">\\n                {{'Update' | translate }}</button>\\n            </div>\\n            \\n          </div>\\n\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { BaseCtl } from '../base.component';\nimport { ServiceLocatorService } from '../service-locator.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\n\n@Component({\n  selector: 'app-myprofile',\n  templateUrl: './myprofile.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class MyprofileComponent extends BaseCtl{\n constructor(public locator: ServiceLocatorService, public route: ActivatedRoute,private httpClient: HttpClient) {\n  super(locator.endpoints.USER, locator, route);\n  }\nngOnInit(){\n \n}\n  \n\n}\n","module.exports = \"\\n<app-navbar></app-navbar>\\n<style>\\n#nnn{\\n  background: none;\\n  border: none;\\n}\\n\\n</style> \\n\\n<div class=\\\"content-wrapper\\\"\\nstyle=\\\"\\nbackground: url(assets/files/wall.jpg) no-repeat center center;\\nbackground-attachment: fixed;\\nbackground-size: cover;width:auto;\\n  height: 85vh;\\\">\\n  <div class=\\\"container-fluid\\\">\\n\\n    <div class=\\\"panel panel-primary\\\">\\n      <div class=\\\"panel-heading\\\" style=\\\"height: 50px;\\\">\\n        <!-- <div class=\\\"col-sm-5\\\"> -->\\n        <div class=\\\"text-center\\\">\\n          <h1 class=\\\"text-primary font-weight-bold\\\">{{'User List' | translate }}</h1>\\n        </div>\\n      </div>\\n      <!-- <button class=\\\"filebtn third\\\">Button 3</button> -->\\n      <div class=\\\"row p-1\\\">\\n        <div class=\\\"col-sm-1\\\"></div>\\n        <div class=\\\"col-sm-2\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.firstName\\\"\\n            placeholder=\\\"{{'Search First Name' | translate}}\\\">\\n\\n        </div>\\n\\n\\n         <!-- <div class=\\\"col-sm-2\\\">\\n          <input type=\\\"date\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.dob\\\"\\n            placeholder=\\\"{{'Search dob' | translate}}\\\">\\n\\n        </div>  -->\\n        \\n        <!-- <div class=\\\"col-sm-2\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.loginId\\\" placeholder=\\\"{{'Search Email' | translate}}\\\">\\n        </div> -->\\n        <div class=\\\"col-sm-2\\\">\\n\\n          <select class=\\\"form-control\\\" name=\\\"roleId\\\" [(ngModel)]=\\\"form.searchParams.roleId\\\" aria-label=\\\"ngSelected\\\">\\n            <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{' Select Role' | translate }}</option>\\n            <option *ngFor=\\\"let obj of form.preload.roleList\\\" [value]=\\\"obj.key\\\">{{obj.value}}</option>\\n          </select>\\n        </div>\\n        <div class=\\\"col-sm-2\\\">\\n          <!-- <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.status\\\" placeholder=\\\"{{'Search Status' | translate}}\\\"> -->\\n        </div>\\n        <div class=\\\"col-sm-1 ml-3\\\">\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary\\\">\\n            {{'Search' | translate }}</button>\\n        </div>\\n        &nbsp;&nbsp;&nbsp;\\n        <div class=\\\"col-lg-2 ml-4\\\">\\n          <button (click)=\\\"forward('/user')\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">{{'Add User' | translate}}\\n          </button>\\n        </div>\\n        \\n\\n        <div class=\\\"col-sm-1\\\">\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger\\\">\\n            {{'Delete'| translate}}</button>\\n        </div>\\n      </div>\\n\\n\\n      <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n        {{form.message}}\\n      </div>\\n      <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n        {{form.message}}\\n      </div>\\n      <div class=\\\"p-1\\\">\\n        <div class=\\\"table-responsive\\\">\\n\\n          <table class=\\\"table table-bordered table-hover font-weight-bold text-dark\\\">\\n            <thead class=\\\"thead-dark text-uppercase \\\">\\n              <tr align=\\\"center\\\">\\n                <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\"  name=\\\"list_name\\\" value=\\\"h1\\\" \\n                    (change)=\\\"checkUncheckAll($event)\\\" /></th>\\n                <th>{{'S.No' | translate}}</th>\\n                <th>{{'Image' | translate}}</th>\\n                <th>{{'First Name' | translate}}</th>\\n                <th>{{'Last Name' | translate}}</th>\\n                <th>{{'Login' | translate}}</th>\\n                <th>{{'Status' | translate}}</th>\\n                <th>{{'Role' | translate}}</th>\\n                <th>{{'Phone' | translate}}</th>\\n                <th>{{'DOB' | translate}}</th>\\n                <th>{{'Edit' | translate}}</th>\\n              </tr>\\n\\n            </thead>\\n            <tbody>\\n              <tr *ngFor=\\\"let m of form.list; let i = index\\\" align=\\\"center\\\">\\n                <td> <input type=\\\"checkbox\\\" #checkboxes (change)=\\\"checklistUpdate()\\\" [disabled]=\\\"m.roleName=='Admin'\\\" name=\\\"list_name\\\" id=\\\"{{m.id}}\\\" value=\\\"{{isMasterSel}}\\\" />\\n                </td>\\n                <td> {{(form.pageNo*5)+i+ 1}} </td>\\n\\n                \\n                <td>\\n                  <div *ngIf=\\\"m.imageId\\\"> \\n                    <img src=\\\"http://localhost:8084/User/profilePic/{{m.id}}\\\" height=\\\"55px\\\" width=\\\"80px\\\">\\n                  </div>\\n                  <div *ngIf=\\\"!m.imageId\\\">\\n                    <img src=\\\"../../assets/files/default.jpg\\\" height=\\\"55px\\\" width=\\\"80px\\\">\\n                  </div>\\n                </td>\\n\\n                <td> {{ m.firstName }} </td>\\n                <td> {{ m.lastName }} </td>\\n                <td> {{ m.loginId }} </td>\\n                <td> {{ m.status }} </td>\\n                <td> {{ m.roleName }} </td>\\n                <td> {{ m.phone }} </td>\\n                <td> {{ m.dob | date : 'dd-MM-yyyy'}} </td>\\n                <td>\\n\\n                  <button  class=\\\"fa fa-edit text-primary \\\" id=\\\"nnn\\\" [disabled]=\\\"m.roleName=='Admin'\\\" (click)=\\\"forward( '/user/' +  m.id)\\\" style=\\\"\\n                  cursor: pointer;\\\"></button>\\n\\n                </td>\\n              </tr>\\n\\n\\n\\n\\n            </tbody>\\n\\n          </table>\\n          <table style=\\\"width: 100%;\\\">\\n            <tr>\\n              <td style=\\\"width: 50%;\\\">\\n          <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\"> {{'Previous' | translate\\n            }} </button></td>\\n\\n            <td *ngIf=\\\"form.list.length!=0\\\" style=\\\"width: 50%;\\\"></td>\\n            <td *ngIf=\\\"form.list.length==0\\\" style=\\\"width: 50%;\\\"><a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/userlist']\\\" (click)=\\\"exit()\\\">{{'Back' | translate}}</a></td>\\n\\n\\n        \\n            <td><button (click)=\\\"next()\\\" [disabled]=\\\"nextList==0\\\" type=\\\"button\\\" class=\\\"btn btn-info\\\"> {{'Next' |\\n              translate }}</button></td>\\n            </tr>\\n            </table>\\n\\n\\n\\n      </div>\\n    </div>\\n\\n  </div>\\n</div>\\n</div>\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\nimport { BaseListCtl } from '../base-list.component';\nimport { ServiceLocatorService } from '../service-locator.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { analyzeAndValidateNgModules } from '@angular/compiler';\n\n@Component({\n  selector: 'app-user-list',\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserListComponent extends BaseListCtl {\n  imageToShow: any;\n  myKey = \"\";\n\ncreateImageFromBlob(image: Blob) {\n   let reader = new FileReader();\n   reader.addEventListener(\"load\", () => {\n      this.imageToShow = reader.result;\n   \n   }, false);\n\n   if (image) {\n      reader.readAsDataURL(image);\n   }\n}\n\n  public form = {\n\n    error: false, //error \n    message: null, //error or success message\n    preload: [], // preload data\n    data: { id: null}, //form data\n    inputerror: {}, // form input error messages\n    searchParams: {}, //search form\n    searchMessage: null, //search result message\n    list: [ ], // search list \n    pageNo: 0\n  };\n\n\n\n  selectedFile: File;\n  retrievedImage: any;\n  base64Data: any;\n  retrieveResonse: any;\n  message: string;\n  imageName: any;\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\n    super(locator.endpoints.USER, locator, route);\n  }\n\n\n  getImage(id) {\n    //Make a call to Sprinf Boot to get the Image Bytes.\n    this.form.data.id = id;\n    console.log(this.form.data.id);\n    \n    this.httpClient.get('http://localhost:8080/User/profilePic/'+this.form.data.id, { responseType: 'blob' }).subscribe(data => {\n      this.createImageFromBlob(data);\n      this.myKey= this.form.data.id;\n    }, error => {\n      \n      console.log(error);\n    });\n\n  }\n\n\n}\n ","module.exports = \".alertRedColor {\\n    color: red;\\n}\\n\\n\\n.required-field::after { \\t\\t\\n  content: \\\"*\\\";\\t\\t\\n  color: red;\\t\\t\\n   }\\n\\n\\n.successColor{\\n    color: green;\\n   }\\n\\n\\n.btn-space {\\n    margin-right: 5px;\\n}\\n\\n\\n.file-btn{\\n    border: black;\\n}\\n\\n\\n.third {\\n    border-color: #b300b3;\\n    color: #695d29;\\n    box-shadow: 0 0 40px 40px #3498db inset, 0 0 0 0 #3498db;\\n    transition: all 150ms ease-in-out;\\n  }\\n\\n\\n.third:hover {\\n    box-shadow: 0 0 10px 0 #3498db inset, 0 0 10px 4px #3498db;\\n  }\\n\\n\\n.filebtn {\\n    box-sizing: border-box;\\n    -webkit-appearance: none;\\n       -moz-appearance: none;\\n            appearance: none;\\n    background-color: transparent;\\n    border: 2px solid #e74c3c;\\n    border-radius: 0.6em;\\n    color: #e74c3c;\\n    cursor: pointer;\\n    display: flex;\\n    align-self: center;\\n    font-size: 1rem;\\n    font-weight: 400;\\n    line-height: 1;\\n    margin: 20px;\\n    padding: 1.2em 2.8em;\\n    text-decoration: none;\\n    text-align: center;\\n    text-transform: uppercase;\\n    font-family: 'Montserrat', sans-serif;\\n    font-weight: 700;\\n  }\\n\\n\\n.filebtn:hover, .filebtn:focus {\\n    color: #ffffff;\\n    outline: 0;\\n  }\\n  \\n\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdXNlci91c2VyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxVQUFVO0FBQ2Q7OztBQUdBO0VBQ0UsWUFBWTtFQUNaLFVBQVU7R0FDVDs7O0FBRUE7SUFDQyxZQUFZO0dBQ2I7OztBQUVBO0lBQ0MsaUJBQWlCO0FBQ3JCOzs7QUFDQTtJQUNJLGFBQWE7QUFDakI7OztBQUVBO0lBQ0kscUJBQXFCO0lBQ3JCLGNBQWM7SUFDZCx3REFBd0Q7SUFFeEQsaUNBQWlDO0VBQ25DOzs7QUFDQTtJQUNFLDBEQUEwRDtFQUM1RDs7O0FBQ0E7SUFDRSxzQkFBc0I7SUFDdEIsd0JBQXdCO09BQ3JCLHFCQUFxQjtZQUNoQixnQkFBZ0I7SUFDeEIsNkJBQTZCO0lBQzdCLHlCQUF5QjtJQUN6QixvQkFBb0I7SUFDcEIsY0FBYztJQUNkLGVBQWU7SUFJZixhQUFhO0lBR0wsa0JBQWtCO0lBQzFCLGVBQWU7SUFDZixnQkFBZ0I7SUFDaEIsY0FBYztJQUNkLFlBQVk7SUFDWixvQkFBb0I7SUFDcEIscUJBQXFCO0lBQ3JCLGtCQUFrQjtJQUNsQix5QkFBeUI7SUFDekIscUNBQXFDO0lBQ3JDLGdCQUFnQjtFQUNsQjs7O0FBQ0E7SUFDRSxjQUFjO0lBQ2QsVUFBVTtFQUNaIiwiZmlsZSI6InNyYy9hcHAvdXNlci91c2VyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYWxlcnRSZWRDb2xvciB7XG4gICAgY29sb3I6IHJlZDtcbn1cblxuXG4ucmVxdWlyZWQtZmllbGQ6OmFmdGVyIHsgXHRcdFxuICBjb250ZW50OiBcIipcIjtcdFx0XG4gIGNvbG9yOiByZWQ7XHRcdFxuICAgfVx0XG5cbiAgIC5zdWNjZXNzQ29sb3J7XG4gICAgY29sb3I6IGdyZWVuO1xuICAgfVxuXG4gICAuYnRuLXNwYWNlIHtcbiAgICBtYXJnaW4tcmlnaHQ6IDVweDtcbn1cbi5maWxlLWJ0bntcbiAgICBib3JkZXI6IGJsYWNrO1xufVxuXG4udGhpcmQge1xuICAgIGJvcmRlci1jb2xvcjogI2IzMDBiMztcbiAgICBjb2xvcjogIzY5NWQyOTtcbiAgICBib3gtc2hhZG93OiAwIDAgNDBweCA0MHB4ICMzNDk4ZGIgaW5zZXQsIDAgMCAwIDAgIzM0OThkYjtcbiAgICAtd2Via2l0LXRyYW5zaXRpb246IGFsbCAxNTBtcyBlYXNlLWluLW91dDtcbiAgICB0cmFuc2l0aW9uOiBhbGwgMTUwbXMgZWFzZS1pbi1vdXQ7XG4gIH1cbiAgLnRoaXJkOmhvdmVyIHtcbiAgICBib3gtc2hhZG93OiAwIDAgMTBweCAwICMzNDk4ZGIgaW5zZXQsIDAgMCAxMHB4IDRweCAjMzQ5OGRiO1xuICB9XG4gIC5maWxlYnRuIHtcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcbiAgICAgICAtbW96LWFwcGVhcmFuY2U6IG5vbmU7XG4gICAgICAgICAgICBhcHBlYXJhbmNlOiBub25lO1xuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgIGJvcmRlcjogMnB4IHNvbGlkICNlNzRjM2M7XG4gICAgYm9yZGVyLXJhZGl1czogMC42ZW07XG4gICAgY29sb3I6ICNlNzRjM2M7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAgIGRpc3BsYXk6IC13ZWJraXQtZmxleDtcbiAgICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIC13ZWJraXQtYWxpZ24tc2VsZjogY2VudGVyO1xuICAgICAgICAtbXMtZmxleC1pdGVtLWFsaWduOiBjZW50ZXI7XG4gICAgICAgICAgICBhbGlnbi1zZWxmOiBjZW50ZXI7XG4gICAgZm9udC1zaXplOiAxcmVtO1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgbGluZS1oZWlnaHQ6IDE7XG4gICAgbWFyZ2luOiAyMHB4O1xuICAgIHBhZGRpbmc6IDEuMmVtIDIuOGVtO1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICBmb250LWZhbWlseTogJ01vbnRzZXJyYXQnLCBzYW5zLXNlcmlmO1xuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIH1cbiAgLmZpbGVidG46aG92ZXIsIC5maWxlYnRuOmZvY3VzIHtcbiAgICBjb2xvcjogI2ZmZmZmZjtcbiAgICBvdXRsaW5lOiAwO1xuICB9XG4gIFxuXG4iXX0= */\"","module.exports = \"<app-navbar></app-navbar>\\n<style>\\n  .grad {\\n    background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\n    background-repeat: no repeat;\\n    background-size: 100%;\\n    padding-bottom: 25px;\\n  }\\n</style>\\n\\n<style type=\\\"text/css\\\">\\n  .log1 {\\n    padding-top: 13%;\\n  }\\n\\n  .input-group-addon {\\n    box-shadow: 9px 8px 7px #001a33;\\n\\n  }\\n</style>\\n\\n<div class=\\\"row \\\" style=\\\"padding-top: 2%; padding-bottom:2%;\\n\\nbackground: url(assets/files/wall.jpg) no-repeat center center;\\nbackground-attachment: fixed;\\nbackground-size: cover;width:100%;\\n  height: auto;\\\">\\n\\n  <div class=\\\"col-sm-4\\\"></div>\\n  <div class=\\\"col-sm-4\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-body input-group-addon grad \\\">\\n        <form name=\\\"userForm\\\">\\n          <h2 *ngIf=\\\"!form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\" style=\\\"text-align: center;\\\">{{'Add User' |\\n            translate }}</h2>\\n          <h2 *ngIf=\\\"form.data.id>0\\\" class=\\\"text-primary font-weight-bold\\\" style=\\\"text-align: center;\\\">{{'Update User' |\\n            translate }}</h2>\\n\\n\\n          <div *ngIf=\\\"!form.error && form.message != null\\\" class=\\\"alert alert-success alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{form.message}}\\n          </div>\\n\\n          <div *ngIf=\\\"form.error && form.message != null\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{form.message}}\\n          </div>\\n\\n          <div>\\n            <span class=\\\"pt-2\\\"><b>{{'Role Name' | translate }}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i> </div>\\n                </div>\\n\\n\\n                <select class=\\\"form-control\\\" name=\\\"roleId\\\" [(ngModel)]=\\\"form.data.roleId\\\" aria-label=\\\"ngSelected\\\">\\n                  <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{' Select Role' | translate }}</option>\\n                  <option *ngFor=\\\"let obj of form.preload.roleList\\\" [value]=\\\"obj.key\\\">{{obj.value}}</option>\\n                </select>\\n              </div>\\n            </div>\\n            <span *ngIf=\\\"form.inputerror.roleId != null\\\" class=\\\"alertRedColor\\\" style=\\\" color: red;\\\"> {{'role'|\\n              translate}} </span>\\n            <!-- <span class=\\\"alertRedColor\\\"> {{form.inputerror.roleId}} </span> -->\\n          </div>\\n\\n          <div>\\n            <span class=\\\"pt-2\\\"><b>{{'First Name' | translate }}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user-circle grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"fn\\\" [(ngModel)]=\\\"form.data.firstName\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter First Name'  | translate }}\\\">\\n              </div>\\n            </div><span *ngIf=\\\"form.inputerror.firstName != null\\\" class=\\\"alertRedColor\\\" style=\\\" color: red;\\\">\\n              {{'firstname'| translate}} </span>\\n            <!-- <span class=\\\"alertRedColor\\\"> {{form.inputerror.firstName}} </span> -->\\n          </div>\\n\\n          <div>\\n            <span class=\\\"pt-2\\\"><b>{{'Last Name' | translate }}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"ln\\\" [(ngModel)]=\\\"form.data.lastName\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter Last Name'  | translate }}\\\">\\n              </div>\\n            </div><span *ngIf=\\\"form.inputerror.lastName != null\\\" class=\\\"alertRedColor\\\" style=\\\" color: red;\\\">\\n              {{'lastname'| translate}} </span>\\n            <!-- <span class=\\\"alertRedColor\\\"> {{form.inputerror.lastName}} </span> -->\\n          </div>\\n\\n          <div>\\n            <span class=\\\"pt-2\\\"><b>{{'login Id' | translate }}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"loginId\\\" [(ngModel)]=\\\"form.data.loginId\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter Login Id'  | translate }}\\\">\\n              </div>\\n            </div><span *ngIf=\\\"form.inputerror.loginId != null\\\" class=\\\"alertRedColor\\\" style=\\\" color: red;\\\"> {{'email'|\\n              translate}} </span>\\n            <!-- <span class=\\\"alertRedColor\\\"> {{form.inputerror.loginId}} </span> -->\\n          </div>\\n\\n          <div>\\n            <span class=\\\"pt-2\\\"><b>{{'Password' | translate }}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-key grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"password\\\" name=\\\"pwd\\\" [(ngModel)]=\\\"form.data.password\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter Password'  | translate }}\\\">\\n              </div>\\n            </div><span *ngIf=\\\"form.inputerror.password != null\\\" class=\\\"alertRedColor\\\" style=\\\" color: red;\\\">\\n              {{'password'| translate}} </span>\\n            <!-- <span class=\\\"alertRedColor\\\"> {{form.inputerror.password}} </span> -->\\n          </div>\\n\\n          <div>\\n            <span class=\\\"pt-2\\\"><b>{{'Mobile' | translate }}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-phone grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"number\\\" name=\\\"phone\\\" maxlength=\\\"10\\\" [(ngModel)]=\\\"form.data.phone\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter Mobile Number' | translate}}\\\">\\n              </div>\\n            </div><span *ngIf=\\\"form.inputerror.phone != null\\\" class=\\\"alertRedColor\\\" style=\\\" color: red;\\\"> {{'phone'|\\n              translate}} </span>\\n            <!-- <span class=\\\"alertRedColor\\\"> {{form.inputerror.phone}} </span> -->\\n          </div>\\n\\n          <div>\\n            <span class=\\\"pt-2\\\"><b>{{'Alternate Mobile' | translate }}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-mobile grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"number\\\" name=\\\"alternateMobile\\\" maxlength=\\\"10\\\" [(ngModel)]=\\\"form.data.alternateMobile\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{'Enter Alternate Number' | translate}}\\\">\\n              </div>\\n            </div><span *ngIf=\\\"form.inputerror.alternateMobile != null\\\" class=\\\"alertRedColor\\\" style=\\\" color: red;\\\">\\n              {{'mobile'| translate}} </span></div>\\n            <!-- <span class=\\\"alertRedColor\\\"> {{form.inputerror.alternateMobile}} </span> -->\\n\\n\\n            <div>\\n         \\n             <span class=\\\"pt-2\\\"><b>{{'DOB' | translate }}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-table grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"date\\\" name=\\\"dob\\\" [value]=\\\"form.data.dob | date:'yyyy-MM-dd'\\\"\\n                  (input)=\\\"form.data.dob=parseDate($event.target.value)\\\" class=\\\"form-control form-control-sm\\\"\\n                  required />\\n              </div>\\n            </div>\\n<span *ngIf=\\\"form.inputerror.dob != null\\\" class=\\\"alertRedColor\\\" style=\\\" color: red;\\\"> {{'dob'|\\n              translate}} </span>\\n            <!-- <span class=\\\"alertRedColor\\\"> {{form.inputerror.dob}} </span> -->\\n          </div>\\n          <div>\\n            <span class=\\\"pt-2\\\"><b>{{'Gender' | translate }}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-venus grey-text\\\"></i> </div>\\n                </div>\\n                <select class=\\\"form-control\\\" name=\\\"gender\\\" id=\\\"gender\\\" [(ngModel)]=\\\"form.data.gender\\\"\\n                  style=\\\"cursor: pointer;\\\">\\n                  <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{'Please select' | translate }}</option>\\n                  <option value=\\\"Male\\\">{{'Male' | translate }} </option>\\n                  <option value=\\\"Female\\\">{{'Female' | translate }} </option>\\n                </select>\\n              </div>\\n            </div><span *ngIf=\\\"form.inputerror.gender != null\\\" class=\\\"alertRedColor\\\" style=\\\" color: red;\\\"> {{'gender'|\\n              translate}} </span>\\n            <!-- <span class=\\\"alertRedColor\\\"> {{form.inputerror.gender}} </span> -->\\n          </div>\\n\\n          <div>\\n            <span class=\\\"pt-2\\\"><b>{{'Image' | translate }}</b>\\n              <!-- <option [ngValue]=\\\"\\\" value=\\\"undefined\\\"></option> -->\\n              <span *ngIf=\\\"!form.data.imageId\\\" class=\\\"required-field\\\"></span></span>\\n            <div class=\\\"col-sm-12\\\">\\n              <div *ngIf=\\\"form.data.imageId\\\">\\n                <img src=\\\"http://localhost:8084/User/profilePic/{{form.data.id}}\\\" height=\\\"55px\\\" width=\\\"80px\\\">\\n              </div>\\n              <div *ngIf=\\\"!form.data.imageId\\\">\\n                <img src=\\\"../../assets/files/default.jpg\\\" height=\\\"55px\\\" width=\\\"80px\\\">\\n              </div>\\n            </div>\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-picture-o grey-text\\\"></i> </div>\\n                </div>\\n                <input type=\\\"file\\\" id=\\\"customFile\\\" name=\\\"imageId\\\" (change)=\\\"onFileSelect($event.target.files)\\\"\\n                  accept=\\\"image/*\\\">\\n\\n                <span class=\\\"alertRedColor\\\"> {{form.inputerror.image}} </span>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div>\\n            <span class=\\\"pt-2\\\"><b>{{'Status' | translate }}</b>\\n              <span class=\\\"required-field\\\"></span></span>\\n\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-bell grey-text\\\"></i> </div>\\n                </div>\\n                <select class=\\\"form-control\\\" id=\\\"status\\\" name=\\\"status\\\" [(ngModel)]=\\\"form.data.status\\\">\\n                  <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{' Select Status' | translate }}</option>\\n                  <option value=\\\"Active\\\">{{'Active' | translate }} </option>\\n                  <option value=\\\"Inactive\\\">{{'Inactive' | translate }} </option>\\n                </select>\\n              </div>\\n            </div><span *ngIf=\\\"form.inputerror.status != null\\\" class=\\\"alertRedColor\\\" style=\\\" color: red;\\\"> {{'status'|\\n              translate}} </span>\\n            <!-- <span class=\\\"alertRedColor\\\"> {{form.inputerror.status}} </span> -->\\n          </div>\\n          <div class=\\\"row pt-2 pl-2 pb-3\\\">\\n\\n            <div class=\\\"col-md-3\\\"></div>\\n\\n\\n            <div class=\\\"pt-2\\\">\\n              <button *ngIf=\\\"!form.data.id>0\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success mr-2\\\">\\n                {{'Save' | translate }}</button>\\n            </div>\\n\\n            <div class=\\\"col-md-1\\\"></div>\\n\\n            <div class=\\\"pt-2\\\">\\n              <button *ngIf=\\\"form.data.id>0\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success mr-2\\\">\\n                {{'Update' | translate }}</button>\\n            </div>\\n            <div class=\\\"pt-2\\\">\\n              <a class=\\\"btn btn-warning mr-1\\\" type=\\\"button\\\" [routerLink]=\\\"['/userlist']\\\"\\n                  style=\\\"text-decoration: none; color: white;\\\">{{'List' | translate }}</a>\\n            </div>\\n          </div>\\n\\n\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { BaseCtl } from '../base.component';\nimport { ServiceLocatorService } from '../service-locator.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\n\n@Component({\n  selector: \"app-user\",\n  templateUrl: \"./user.component.html\",\n  styleUrls: [\"./user.component.css\"],\n})\nexport class UserComponent extends BaseCtl {\n  getKey = false;\n  selected = null;\n  fileToUpload: File = null;\n  userForm: FormGroup = null;\n  uploadForm: FormGroup;\n  constructor(\n    public locator: ServiceLocatorService,\n    public route: ActivatedRoute,\n    private httpClient: HttpClient\n  ) {\n    super(locator.endpoints.USER, locator, route);\n  }\n\n  submit2() {\n    this.serviceLocator.httpService.post(this.api)\n  }\n\n  submit() {\n    var _self = this;\n    console.log(\"in submit\");\n    console.log(this.form);\n    console.log(this.form.data);\n\n    this.serviceLocator.httpService.post(this.api.save,this.form.data,function (res) {\n        _self.form.message = \"\";\n        _self.form.inputerror = {}; // Clear input errors here\n\n        if (res.success) {\n          _self.form.error = false; // Set error to false on success\n          _self.form.message = \"Data is saved\";\n          _self.form.data.id = res.result.data;\n          if (_self.fileToUpload) {\n            _self.myFile();\n          }\n          console.log(_self.form.data.id);\n          console.log(\"----------Chetan----------.\");\n\n          // Clear form data if needed\n          // _self.form.data = {};\n        } else {\n          _self.form.error = true;\n          if (res.result.inputerror) {\n            _self.form.inputerror = res.result.inputerror;\n          }\n          _self.form.message = res.result.message;\n        }\n        console.log(\"FORM\", _self.form);\n      }\n    );\n  }\n\n  submit1() {\n    var _self = this;\n    console.log(this.form + \"submit running start\");\n    console.log(this.form.data + \"form data going to be submit\");\n    this.serviceLocator.httpService.post(\n      this.api.search,\n      this.form.data,\n      function (res) {\n        _self.form.message = \"\";\n        _self.form.inputerror = {};\n        _self.form.data.id = res.result.data;\n        _self.myFile();\n        if (res.success) {\n          _self.form.message = \"Data is saved\";\n          _self.form.data.id = res.result.data;\n\n          console.log(_self.form.data.id);\n          console.log(\"--------------------.\");\n        } else {\n          _self.form.error = true;\n          _self.form.inputerror = res.result.inputerror;\n          _self.form.message = res.result.message;\n        }\n        _self.form.data.id = res.result.data;\n        console.log(\"FORM\", _self.form);\n      }\n    );\n  }\n\n  onFileSelect(files: FileList) {\n    this.fileToUpload = files.item(0);\n    console.log(this.fileToUpload);\n  }\n\n  onUpload(userform: FormData) {\n    this.submit();\n    console.log(this.form.data.id + \"---- after submit\");\n  }\n\n  myFile() {\n    console.log(this.form.data.id + \"after super.submit-----\");\n    this.onSubmitProfile(this.fileToUpload, this.userForm).subscribe(\n      (data) => {\n        console.log(this.fileToUpload);\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n\n  onSubmitProfile(fileToUpload: File, userform: FormGroup) {\n    const formData = new FormData();\n    let phone = null;\n    formData.append(\"file\", fileToUpload);\n    console.log(this.form.data.id + \"this id number ======\");\n    return this.httpClient.post(\n      \"http://localhost:8084/User/profilePic/\" + this.form.data.id,formData );\n  }\n\n  validateForm(form) {\n    let flag = true;\n    let validator = this.serviceLocator.dataValidator;\n    flag = flag && validator.isNotNullObject(form.roleId);\n    console.log(form.roleId);\n    flag = flag && validator.isNotNullObject(form.firstName);\n    console.log(form.firstName);\n    flag = flag && validator.isNotNullObject(form.lastName);\n    console.log(form.lastName);\n    flag = flag && validator.isNotNullObject(form.loginId);\n    console.log(form.loginId);\n    flag = flag && validator.isNotNullObject(form.password);\n    console.log(form.password);\n    flag = flag && validator.isNotNullObject(form.phone);\n    console.log(form.phone);\n    flag = flag && validator.isNotNullObject(form.alternateMobile);\n    console.log(form.alternateMobile);\n    flag = flag && validator.isNotNullObject(form.dob);\n    console.log(form.dob);\n    flag = flag && validator.isNotNullObject(form.gender);\n    console.log(form.gender + \"gender--\");\n    flag = flag && validator.isNotNullObject(form.status);\n    console.log(form.status + \"status---\");\n\n    return flag;\n  }\n\n  populateForm(form, data) {\n    form.id = data.id;\n    console.log(form.id + \"populate form in usercomponent\");\n    form.firstName = data.firstName;\n    form.lastName = data.lastName;\n    form.loginId = data.loginId;\n    form.password = data.password;\n    form.gender = data.gender;\n    console.log(form.gender + \"gender--\");\n    form.alternateMobile = data.alternateMobile;\n    form.phone = data.phone;\n    console.log(form.phone);\n    form.dob = data.dob;\n    form.roleId = data.roleId;\n    form.status = data.status;\n    form.imageId = data.imageId;\n    console.log(form.status + \"status---\");\n  }\n\n  parseDate(dateString: string): Date {\n    if (dateString) {\n      return new Date(dateString);\n    }\n    return null;\n  }\n  test() {}\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class DataValidator {\n\n  constructor() {\n  }\n\n  trim(valueToWhite: string) {\n    return valueToWhite.replace(/\\s/g, \"\");\n  }\n  /**\n   * Check is string is not empty\n   * @param val \n   */\n  isNotNull(val: string) {\n    let flag = true;\n    try {\n      if (val) {\n        val = this.trim(val);\n        flag = val.length > 0;\n      } else {\n        flag = false;\n      }\n    } catch (error) {\n      flag = false;\n    }\n    return flag;\n  }\n\n  \n\n  /**\n * Is string is empty\n * @param val\n */\n  isNull(val: any) {\n    return !this.isNotNullObject(val);\n  }\n\n  /**\n   * Is not null object\n   */\n  isNotNullObject(val: any) {\n    let flag = true;\n    try {\n      if (val) {\n        flag = true;\n      } else {\n        flag = false;\n      }\n    } catch (error) {\n      flag = false;\n    }\n    return flag;\n  }\n\n  /**\n   * Is null object\n   */\n  isNullObject(val: any) {\n    return !this.isNotNullObject(val);\n  }\n\n\n  isTrue(val: boolean) {\n    let flag = true;\n    if (val) {\n      flag = true;\n    } else {\n      flag = false;\n    }\n    return flag;\n  }\n\n  /**\n   * \n   * @param val Convets string into number\n   */\n  toInt(val: any) {\n    let returnVal = 0;\n    if (val) {\n      try {\n        returnVal = parseInt(val);\n        if (isNaN(returnVal)) {\n          returnVal = 0;\n        }\n      } catch (error) {\n        returnVal = 0;\n      }\n    }\n    return returnVal;\n  }\n\n  toFloat(val: any) {\n    let returnVal = 0;\n    if (val) {\n      try {\n        returnVal = parseFloat(val);\n        if (isNaN(returnVal)) {\n          returnVal = 0;\n        }\n      } catch (error) {\n        returnVal = 0;\n      }\n    }\n    return returnVal;\n  }\n\n  /**\n   * Create clone pobject\n   * \n   * @param obj \n   */\n  getClone(obj) {\n    return JSON.parse(JSON.stringify(obj));\n  }\n\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZlaGljbGV0cmFja2luZy92ZWhpY2xldHJhY2tpbmcuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<app-navbar></app-navbar>\\n<style>\\n  .grad {\\n    background-image: linear-gradient(to bottom right, rgb(32, 168, 168), rgb(219, 231, 237));\\n    background-repeat: no-repeat;\\n    background-size: 100%;\\n    padding-bottom: 25px;\\n  }\\n\\n  .input-group-addon {\\n    box-shadow: 9px 8px 7px #001a33;\\n  }\\n\\n  .required-field {\\n    color: red;\\n    font-weight: bold;\\n  }\\n\\n  .alertRedColor {\\n    color: red;\\n  }\\n\\n  .card-body {\\n    padding: 2rem;\\n  }\\n\\n  .input-group-text i {\\n    width: 1.5rem;\\n  }\\n\\n  .btn-primary,\\n  .btn-success,\\n  .btn-warning {\\n    width: 100%;\\n  }\\n\\n  .form-control {\\n    height: calc(2.25rem + 2px);\\n  }\\n\\n  .form-group {\\n    margin-bottom: 1.5rem;\\n  }\\n\\n  .input-group-prepend .input-group-text {\\n    background-color: #e9ecef;\\n    border: 1px solid #ced4da;\\n  }\\n\\n  .input-group-prepend .input-group-text i {\\n    color: #495057;\\n  }\\n\\n  .row {\\n    margin-left: 0;\\n    margin-right: 0;\\n  }\\n\\n  .textarea-height {\\n    height: 100px;\\n  }\\n\\n  .card {\\n    margin: auto;\\n    max-width: 500px;\\n  }\\n</style>\\n\\n<div class=\\\"container-fluid\\\"\\n  style=\\\"padding: 2% 0; background: url('assets/files/wall.jpg') no-repeat center center; background-attachment: fixed; background-size: cover; width: 100%; height: auto;\\\">\\n  <div class=\\\"row justify-content-center\\\">\\n    <div class=\\\"col-md-6\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-body input-group-addon grad\\\">\\n          <form name=\\\"userForm\\\">\\n            <h2 *ngIf=\\\"!form.data.id\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{ 'Add Vehicle Tracking' |\\n              translate }}\\n            </h2>\\n            <h2 *ngIf=\\\"form.data.id\\\" class=\\\"text-primary font-weight-bold text-center\\\">{{ 'Update Vehicle Tracking' |\\n              translate }}\\n            </h2>\\n\\n            <div *ngIf=\\\"!form.error && form.message\\\" class=\\\"alert alert-success alert-dismissible\\\">\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n              {{ form.message }}\\n            </div>\\n\\n            <div *ngIf=\\\"form.error && form.message\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n              {{ form.message }}\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label><b>{{ 'VehicleId' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-flag grey-text\\\"></i></div>\\n                </div>\\n                <select class=\\\"form-control\\\" name=\\\"vehicleIdId\\\" [(ngModel)]=\\\"form.data.vehicleIdId\\\"\\n                  aria-label=\\\"ngSelected\\\">\\n                  <option [ngValue]=\\\"undefined\\\">{{ 'Select vehicleId' | translate }}</option>\\n                  <option *ngFor=\\\"let obj of form.preload.vehicleIdList\\\" [value]=\\\"obj.key\\\">{{ obj.key }}</option>\\n                </select>\\n              </div>\\n              <span *ngIf=\\\"form.inputerror.vehicleIdId\\\" class=\\\"alertRedColor\\\">{{form.inputerror.vehicleIdId}}</span>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label><b>{{ 'Name' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i></div>\\n                </div>\\n                <input type=\\\"text\\\" name=\\\"name\\\" [(ngModel)]=\\\"form.data.name\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{ 'Enter name' | translate }}\\\" (keypress)=\\\"validateAlphabetInput($event)\\\">\\n              </div>\\n              <span *ngIf=\\\"form.inputerror.name\\\" class=\\\"alertRedColor\\\">{{form.inputerror.name}}</span>\\n            </div>\\n\\n\\n            <div class=\\\"form-group\\\">\\n              <label><b>{{ 'Lat' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-phone grey-text\\\"></i></div>\\n                </div>\\n                <input type=\\\"number\\\" name=\\\"lat\\\" [(ngModel)]=\\\"form.data.lat\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{ 'Enter lat' | translate }}\\\">\\n\\n\\n              </div>\\n              <span *ngIf=\\\"form.inputerror.lat\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.lat}}</span>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label><b>{{ 'longitude' | translate }}</b><span class=\\\"required-field\\\">*</span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-phone grey-text\\\"></i></div>\\n                </div>\\n                <input type=\\\"number\\\" name=\\\"longitude\\\" [(ngModel)]=\\\"form.data.longitude\\\" class=\\\"form-control\\\"\\n                  placeholder=\\\"{{ 'Enter longitude' | translate }}\\\">\\n\\n\\n              </div>\\n              <span *ngIf=\\\"form.inputerror.lat\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.lat}}</span>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n              <label><b>{{ 'Date' | translate }}</b><span class=\\\"required-field\\\"></span></label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-calendar-alt grey-text\\\"></i></div>\\n                </div>\\n                <input type=\\\"date\\\" name=\\\"date\\\" [value]=\\\"form.data.date | date:'yyyy-MM-dd'\\\"\\n                  (input)=\\\"form.data.date=parseDate($event.target.value)\\\" class=\\\"form-control\\\" required />\\n              </div>\\n              <span *ngIf=\\\"form.inputerror.date\\\" class=\\\"alertRedColor\\\">{{ form.inputerror.date\\n                }}</span>\\n            </div>\\n\\n\\n            <div class=\\\"row pt-2 pb-3 justify-content-center\\\">\\n              <div class=\\\"col-md-4\\\">\\n                <button *ngIf=\\\"!form.data.id\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{ 'Save' | translate\\n                  }}</button>\\n              </div>\\n              <div class=\\\"col-md-4\\\">\\n                <button *ngIf=\\\"form.data.id\\\" (click)=\\\"onUpload()\\\" class=\\\"btn btn-success\\\">{{ 'Update' | translate\\n                  }}</button>\\n              </div>\\n              <div class=\\\"col-md-4\\\">\\n                <a class=\\\"btn btn-warning\\\" type=\\\"button\\\" [routerLink]=\\\"['/vehicletrackinglist']\\\">{{ 'List' | translate\\n                  }}</a>\\n              </div>\\n            </div>\\n          </form>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { BaseCtl } from '../base.component';\nimport { ServiceLocatorService } from '../service-locator.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-vehicletracking',\n  templateUrl: './vehicletracking.component.html',\n  styleUrls: ['./vehicletracking.component.css']\n})\nexport class VehicletrackingComponent extends BaseCtl {\n\n  getKey = false;\n  selected = null;\n  userForm: FormGroup = null;\n  uploadForm: FormGroup;\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\n    super(locator.endpoints.VEHICLETRACKING, locator, route);\n  }\n\n  submit() {\n    var _self = this;\n    console.log('in submit');\n    console.log(this.form);\n    console.log(this.form.data);\n  \n    this.serviceLocator.httpService.post(this.api.save, this.form.data, function (res) {\n      _self.form.message = '';\n      _self.form.inputerror = {}; // Clear input errors here\n  \n      if (res.success) {\n        _self.form.error = false; // Set error to false on success\n        _self.form.message = \"Data is saved\";\n        _self.form.data.id = res.result.data;\n        console.log(_self.form.data.id);\n        console.log(\"----------Chetan----------.\");\n  \n        // Clear form data if needed\n        // _self.form.data = {};\n  \n      } else {\n        _self.form.error = true;\n        if (res.result.inputerror) {\n          _self.form.inputerror = res.result.inputerror;\n        }\n        _self.form.message = res.result.message;\n      }\n      console.log('FORM', _self.form);\n    });\n  }\n\n  submit1() {\n    var _self = this;\n    console.log(this.form + \"submit running start\");\n    console.log(this.form.data + \"form data going to be submit\");\n    this.serviceLocator.httpService.post(this.api.search, this.form.data, function (res) {\n      _self.form.message = '';\n      _self.form.inputerror = {};\n      _self.form.data.id = res.result.data;\n\n\n      if (res.success) {\n        _self.form.message = \"Data is saved\";\n        _self.form.data.id = res.result.data;\n\n\n        console.log(_self.form.data.id);\n        console.log(\"--------------------.\");\n\n      } else {\n        _self.form.error = true;\n        _self.form.inputerror = res.result.inputerror;\n        _self.form.message = res.result.message;\n      }\n      _self.form.data.id = res.result.data;\n      console.log('FORM', _self.form);\n    });\n  }\n\n\n\n\n  onUpload(userform: FormData) {\n    this.submit();\n    console.log(this.form.data.id + '---- after submit');\n\n  }\n\n\n  validateForm(form) {\n    let flag = true;\n    let validator = this.serviceLocator.dataValidator;\n    flag = flag && validator.isNotNullObject(form.vehicleIdId);\n    console.log(form.vehicleIdId);\n    flag = flag && validator.isNotNullObject(form.name);\n    console.log(form.name);\n    flag = flag && validator.isNotNullObject(form.lat);\n    console.log(form.lat);\n    flag = flag && validator.isNotNullObject(form.longitude);\n    console.log(form.longitude);\n    flag = flag && validator.isNotNullObject(form.date);\n    console.log(form.date);\n\n    return flag;\n  }\n\n  populateForm(form, data) {\n    form.id = data.id;\n    console.log(form.id + 'populate form in shoppingcomponent');\n    form.name = data.name;\n    form.lat = data.lat;\n    form.longitude = data.longitude;\n    form.date = data.date;\n    form.vehicleIdId = data.vehicleIdId;\n\n\n  }\n\n  validatePhone(event: KeyboardEvent) {\n    const input = event.key;\n    // Check if the input is a number or backspace\n    if ((isNaN(Number(input)) && input !== 'Backspace') || (input === ' ')) {\n      event.preventDefault();\n    }\n    // Limit the input to 10 characters\n    if (this.form.data.phone && this.form.data.phone.length >= 10 && input !== 'Backspace') {\n      event.preventDefault();\n    }\n  }\n\n  validateAlphabetInput(event) {\n    const charCode = event.which || event.keyCode;\n    const charStr = String.fromCharCode(charCode);\n\n    // Regular expression to test if the character is a letter\n    const letterRegex = /^[a-zA-Z\\s]+$/;\n\n    // Test if the input matches the allowed characters\n    if (!letterRegex.test(charStr)) {\n      event.preventDefault();\n    }\n\n    // Optionally, check the entire value against the name format regex\n    const inputElement = event.target;\n    const inputValue = inputElement.value + charStr; // Add the current character to the input value\n\n    // Regex for valid name format \"FirstName LastName\"\n    const nameRegex = /^[A-Z][a-z]+ [A-Z][a-z]+$/;\n\n    // Check if the current value matches the valid name format\n    if (!nameRegex.test(inputValue)) {\n      // Handle invalid input (e.g., disable submit button, show error message)\n      // Example:\n      inputElement.classList.add('invalid'); // Apply CSS class for invalid input\n    } else {\n      inputElement.classList.remove('invalid'); // Remove invalid CSS class if format is valid\n    }\n  }\n\n\n\n\n  parseDate(dateString: string): Date {\n    if (dateString) {\n      return new Date(dateString);\n    }\n    return null;\n  }\n  test() {\n\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZlaGljbGV0cmFja2luZy92ZWhpY2xldHJhY2tpbmdsaXN0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<app-navbar></app-navbar>\\n\\n<style>\\n  #nnn {\\n    background: none;\\n    border: none;\\n    cursor: pointer;\\n  }\\n\\n  .panel-heading {\\n    height: 50px;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n  }\\n\\n  .search-inputs {\\n    margin-top: 20px;\\n  }\\n\\n  .search-inputs .form-control,\\n  .search-inputs .btn {\\n    margin-bottom: 10px;\\n  }\\n\\n  .content-wrapper {\\n    background: url(assets/files/wall.jpg) no-repeat center center;\\n    background-attachment: fixed;\\n    background-size: cover;\\n    width: auto;\\n    height: 105vh;\\n    padding: 20px;\\n  }\\n\\n  .table-responsive {\\n    margin-top: 20px;\\n  }\\n</style>\\n\\n<div class=\\\"content-wrapper\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"panel panel-primary\\\">\\n      <div class=\\\"panel-heading\\\">\\n        <h1 class=\\\"text-primary font-weight-bold\\\">{{ 'Vehicle Tracking List' | translate }}</h1>\\n      </div>\\n\\n      <div class=\\\"row search-inputs justify-content-center\\\">\\n        <div class=\\\"col-md-3\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.name\\\"\\n            placeholder=\\\"{{ 'Search Name' | translate }}\\\" (input)=\\\"validateInput($event, 'name')\\\">\\n          <div *ngIf=\\\"!isValidNameInput\\\" class=\\\"text-danger\\\">{{ nameErrorMessage }}</div>\\n        </div>\\n        <!--  <div class=\\\"col-md-3\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.mobile\\\"\\n            placeholder=\\\"{{ 'Search mobile' | translate }}\\\" (input)=\\\"validateInput($event, 'mobile')\\\">\\n          <div *ngIf=\\\"!isValidMobileInput\\\" class=\\\"text-danger\\\">{{ mobileErrorMessage }}</div>\\n        </div> -->\\n\\n        <div class=\\\"col-md-3\\\">\\n          <input type=\\\"date\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.date\\\"\\n            (ngModelChange)=\\\"formatDate($event)\\\" placeholder=\\\"{{ 'Search date' | translate }}\\\">\\n        </div>\\n\\n        <div class=\\\"col-md-3\\\">\\n          <input type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.lat\\\"\\n            placeholder=\\\"{{ 'Search lat' | translate }}\\\">\\n        </div>\\n\\n        <div class=\\\"col-md-3\\\">\\n          <input type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"form.searchParams.longitude\\\"\\n            placeholder=\\\"{{ 'Search longitude' | translate }}\\\">\\n        </div>\\n\\n\\n        <div class=\\\"col-md-3\\\">\\n          <select class=\\\"form-control\\\" name=\\\"vehicleIdId\\\" [(ngModel)]=\\\"form.searchParams.vehicleIdId\\\">\\n            <option [ngValue]=\\\"\\\" value=\\\"undefined\\\">{{ 'Select vehicleId' | translate }}</option>\\n            <option *ngFor=\\\"let obj of form.preload.vehicleIdList\\\" [value]=\\\"obj.key\\\">{{ obj.key }}</option>\\n          </select>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"row mt-2 justify-content-center\\\">\\n        <div class=\\\"col-md-2\\\">\\n          <button (click)=\\\"submit()\\\" class=\\\"btn btn-primary btn-block\\\">{{ 'Search' | translate }}</button>\\n        </div>\\n        <div class=\\\"col-md-2\\\">\\n          <button (click)=\\\"forward('/vehicletracking')\\\" type=\\\"button\\\" class=\\\"btn btn-success btn-block\\\">{{ 'Add vehicle tracking' |\\n            translate }}</button>\\n        </div>\\n        <div class=\\\"col-md-2\\\">\\n          <button (click)=\\\"deleteMany()\\\" class=\\\"btn btn-danger btn-block\\\">{{ 'Delete' | translate }}</button>\\n        </div>\\n      </div>\\n\\n      <div *ngIf=\\\"form.error || form.message\\\" class=\\\"row mt-2 justify-content-center\\\">\\n        <div class=\\\"col-md-6\\\">\\n          <div *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{ form.message }}\\n          </div>\\n          <div *ngIf=\\\"!form.error && form.message\\\" class=\\\"alert alert-success alert-dismissible\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n            {{ form.message }}\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"table-responsive mt-3\\\">\\n        <table class=\\\"table table-bordered table-hover font-weight-bold text-dark\\\">\\n          <thead class=\\\"thead-dark text-uppercase\\\">\\n            <tr align=\\\"center\\\">\\n              <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"isMasterSel\\\" name=\\\"list_name\\\"\\n                  (change)=\\\"checkUncheckAll($event)\\\" /></th>\\n              <th>{{ 'S.No' }}</th>\\n              <th>{{ 'name' }}</th>\\n              <th>{{ 'lat' }}</th>\\n              <th>{{ 'longitude' }}</th>\\n              <th>{{ 'date' }}</th>\\n              <th>{{ 'vehicleId' }}</th>\\n              <th>{{ 'Edit' }}</th>\\n            </tr>\\n          </thead>\\n          <tbody>\\n            <tr *ngFor=\\\"let m of form.list; let i = index\\\" align=\\\"center\\\">\\n              <td><input type=\\\"checkbox\\\" #checkboxes (change)=\\\"checklistUpdate()\\\" name=\\\"list_name\\\" [id]=\\\"m.id\\\" /></td>\\n              <td>{{ (form.pageNo * 5) + i + 1 }}</td>\\n              <td>{{ m.name }}</td>\\n              <td>{{ m.lat }}</td>\\n              <td>{{ m.longitude }}</td>\\n              <td>{{ convertToLocalDate(m.date) }}</td>\\n              <td>{{ m.vehicleIdId }}</td>\\n              <td>\\n                <button class=\\\"fa fa-edit text-primary\\\" id=\\\"nnn\\\" (click)=\\\"forward('/vehicletracking/' + m.id)\\\"></button>\\n              </td>\\n            </tr>\\n          </tbody>\\n        </table>\\n      </div>\\n\\n      <div class=\\\"d-flex justify-content-between mt-3\\\">\\n        <button (click)=\\\"previous()\\\" [disabled]=\\\"form.pageNo == 0\\\" class=\\\"btn btn-info\\\">{{ 'Previous' | translate\\n          }}</button>\\n        <div *ngIf=\\\"form.list.length == 0\\\">\\n          <a class=\\\"btn btn-warning mr-1\\\" [routerLink]=\\\"['/vehicletrackinglist']\\\" (click)=\\\"exit()\\\">{{ 'Back' |\\n            translate }}</a>\\n        </div>\\n        <button (click)=\\\"next()\\\" [disabled]=\\\"nextList == 0\\\" class=\\\"btn btn-info\\\">{{ 'Next' | translate }}</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\nimport { BaseListCtl } from '../base-list.component';\nimport { ServiceLocatorService } from '../service-locator.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-vehicletrackinglist',\n  templateUrl: './vehicletrackinglist.component.html',\n  styleUrls: ['./vehicletrackinglist.component.css']\n})\nexport class VehicletrackinglistComponent extends BaseListCtl implements OnInit {\n\n  public form = {\n    error: false,\n    message: null,\n    preload: [],\n    data: { id: null },\n    inputerror: {},\n    searchParams: {\n\n      name: '',\n      lat: '',\n      date: '', // Initialize date field\n      vehicleIdId: '',\n      longitude: ''\n    },\n    searchMessage: null,\n    list: [],\n    pageNo: 0\n  };\n\n  isValidMobileInput: boolean = true;\n  isValidNameInput: boolean = true;\n  nameErrorMessage: string = '';\n  mobileErrorMessage: string = '';\n\n  constructor(public locator: ServiceLocatorService, public route: ActivatedRoute, private httpClient: HttpClient) {\n    super(locator.endpoints.VEHICLETRACKING, locator, route);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n  }\n\n  // Format date function\n  formatDate(event: any) {\n    const selectedDate = new Date(event);\n    const formattedDate = selectedDate.toISOString().split('T')[0];\n    this.form.searchParams.date = formattedDate;\n  }\n\n  // Convert date to local format for display\n  convertToLocalDate(dateString: string): string {\n    const date = new Date(dateString);\n    // Format date to 'MM/DD/YYYY'\n    const options = { year: 'numeric', month: '2-digit', day: '2-digit' };\n    return date.toLocaleDateString(undefined, options);\n  }\n\n  // Validate input for name and mobile fields\n  validateInput(event: any, field: string) {\n    const value = event.target.value;\n    if (field === 'mobile') {\n      this.isValidMobileInput = /^[0-9]*$/.test(value); // Check if the input contains only numbers\n      if (!this.isValidMobileInput) {\n        this.mobileErrorMessage = 'Please type numbers only';\n      } else {\n        this.mobileErrorMessage = '';\n      }\n    } else if (field === 'name') {\n      this.isValidNameInput = /^[A-Za-z\\s]*$/.test(value); // Check if the input contains only letters and spaces\n      if (!this.isValidNameInput) {\n        this.nameErrorMessage = 'Please type alphabets only';\n      } else {\n        this.nameErrorMessage = '';\n      }\n    }\n  }\n\n\n  // Submit method\n  submit() {\n    // Reset page number before searching\n    this.form.pageNo = 0;\n    // Call the search method after formatting the date\n    this.search();\n  }\n\n\n  // Search method\n  search() {\n    // Clear previous search message\n    this.form.searchMessage = null;\n    // Perform the search operation with the search parameters\n    super.search();\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}